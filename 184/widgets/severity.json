[{"uid":"92ab5ba0725ea144","name":"should throw BadRequestException when no sections are provided","time":{"start":1745254767001,"stop":1745254767005,"duration":4},"status":"passed","severity":"normal"},{"uid":"aa57ea94ab162f1c","name":"should throw UnauthorizedException if ticket is expired","time":{"start":1745254768147,"stop":1745254768154,"duration":7},"status":"passed","severity":"normal"},{"uid":"4c2826b886dcd987","name":"should throw NotFoundException when tags do not exist","time":{"start":1745254767085,"stop":1745254767088,"duration":3},"status":"passed","severity":"normal"},{"uid":"c9bb0333bed277ce","name":"should handle service errors properly","time":{"start":1745254769972,"stop":1745254769974,"duration":2},"status":"passed","severity":"normal"},{"uid":"7e3b385d466f9710","name":"should remove a profile","time":{"start":1745254769779,"stop":1745254769783,"duration":4},"status":"passed","severity":"normal"},{"uid":"f79262c825c65061","name":"should remove an itinerary successfully","time":{"start":1745254767209,"stop":1745254767215,"duration":6},"status":"passed","severity":"normal"},{"uid":"12501a84e2fa2db8","name":"should throw ForbiddenException if the user is not authorized to accept the invitation","time":{"start":1745254767228,"stop":1745254767231,"duration":3},"status":"passed","severity":"normal"},{"uid":"79f03324342adf82","name":"should return \"tidak diketahui\" for unknown option","time":{"start":1745254765851,"stop":1745254765853,"duration":2},"status":"passed","severity":"normal"},{"uid":"ec708abdf659d670","name":"should be defined","time":{"start":1745254767966,"stop":1745254768003,"duration":37},"status":"passed","severity":"normal"},{"uid":"9b16464b20368f3f","name":"should return paginated itineraries for both owned and shared when sharedBool is false","time":{"start":1745254767149,"stop":1745254767153,"duration":4},"status":"passed","severity":"normal"},{"uid":"a36bbb40d9e2faf0","name":"should throw NotFoundException if referral code is not found","time":{"start":1745254768098,"stop":1745254768111,"duration":13},"status":"passed","severity":"normal"},{"uid":"b65d2719c148c088","name":"should throw UnauthorizedException for invalid ticket","time":{"start":1745254768144,"stop":1745254768147,"duration":3},"status":"passed","severity":"normal"},{"uid":"8d005217006981c4","name":"should create a new user if user does not exist","time":{"start":1745254767029,"stop":1745254767032,"duration":3},"status":"passed","severity":"normal"},{"uid":"f0fd03cfb38d2fc4","name":"should handle empty createdBlocks and use default TRANSPORT_MODE.DRIVE when transportMode is not provided","time":{"start":1745254767038,"stop":1745254767042,"duration":4},"status":"passed","severity":"normal"},{"uid":"1399406d280b8d06","name":"should delete the oldest ticket if more than 5 exist","time":{"start":1745254768181,"stop":1745254768184,"duration":3},"status":"passed","severity":"normal"},{"uid":"fcc69137d6ede955","name":"should return country details based on placeId","time":{"start":1745254769084,"stop":1745254769087,"duration":3},"status":"passed","severity":"normal"},{"uid":"6701e6ca4dcf93ee","name":"should delete existing routes when block.routeToNext exists and create new routes properly","time":{"start":1745254767089,"stop":1745254767092,"duration":3},"status":"passed","severity":"normal"},{"uid":"77695e0e0978c0c0","name":"should throw ForbiddenException if user is not the owner","time":{"start":1745254767207,"stop":1745254767209,"duration":2},"status":"passed","severity":"normal"},{"uid":"b6a58be4ee2e1209","name":"should update user and send registration email if verification is successful","time":{"start":1745254767196,"stop":1745254767204,"duration":8},"status":"passed","severity":"normal"},{"uid":"e3a6649d8e949a3e","name":"should throw NotFoundException if itinerary doesnt exist","time":{"start":1745254765802,"stop":1745254765805,"duration":3},"status":"passed","severity":"normal"},{"uid":"7a25b77b80e770ef","name":"should throw an error when page number exceeds total pages","time":{"start":1745254767185,"stop":1745254767188,"duration":3},"status":"passed","severity":"normal"},{"uid":"88e5c705bb50b49e","name":"should update a contingency plan and return a formatted response","time":{"start":1745254767274,"stop":1745254767277,"duration":3},"status":"passed","severity":"normal"},{"uid":"b53debd37636b78e","name":"should call service.getReferralCode with the correct userId","time":{"start":1745254769394,"stop":1745254769396,"duration":2},"status":"passed","severity":"normal"},{"uid":"6ab73e38e9c7e012","name":"should handle errors if fetch fails","time":{"start":1745254768205,"stop":1745254768208,"duration":3},"status":"passed","severity":"normal"},{"uid":"e0c3544fed1cc304","name":"should update an itinerary with new details, tags, sections, and blocks","time":{"start":1745254767045,"stop":1745254767051,"duration":6},"status":"passed","severity":"normal"},{"uid":"86a24e5e0c137335","name":"should throw NotFoundException if the user to be removed does not exist","time":{"start":1745254767237,"stop":1745254767239,"duration":2},"status":"passed","severity":"normal"},{"uid":"e9015cb2928520b1","name":"should throw NotFound if user email is not found to accept the invitation","time":{"start":1745254767252,"stop":1745254767255,"duration":3},"status":"passed","severity":"normal"},{"uid":"349447ae267fa79a","name":"should throw ForbiddenException if user is not the owner","time":{"start":1745254767163,"stop":1745254767165,"duration":2},"status":"passed","severity":"normal"},{"uid":"e23888df21a128c5","name":"should return shared itineraries successfully","time":{"start":1745254767133,"stop":1745254767135,"duration":2},"status":"passed","severity":"normal"},{"uid":"27c20615530ccfc6","name":"should send webhook for login-validation","time":{"start":1745254768199,"stop":1745254768205,"duration":6},"status":"passed","severity":"normal"},{"uid":"e99a1d5ae8511714","name":"should create an itinerary and return a formatted response","time":{"start":1745254767079,"stop":1745254767083,"duration":4},"status":"passed","severity":"normal"},{"uid":"d93c5135c610f792","name":"should return a string with the ticket id","time":{"start":1745254770320,"stop":1745254770322,"duration":2},"status":"passed","severity":"normal"},{"uid":"af4737b805ae36f","name":"should return country code response","time":{"start":1745254769089,"stop":1745254769092,"duration":3},"status":"passed","severity":"normal"},{"uid":"5ed15f71345e3c48","name":"should update a contingency plan successfully","time":{"start":1745254767365,"stop":1745254767369,"duration":4},"status":"passed","severity":"normal"},{"uid":"b0c9bcb3ed77b90b","name":"should be defined","time":{"start":1745254766831,"stop":1745254766939,"duration":108},"status":"passed","severity":"normal"},{"uid":"2fdde8d54163b751","name":"should send verification email if user exists","time":{"start":1745254767044,"stop":1745254767047,"duration":3},"status":"passed","severity":"normal"},{"uid":"9b07fdfbe63a4b5","name":"should calculate scheduled date correctly","time":{"start":1745254765821,"stop":1745254765824,"duration":3},"status":"passed","severity":"normal"},{"uid":"8be10d583f180de1","name":"should pass errors from service to the caller","time":{"start":1745254767851,"stop":1745254767854,"duration":3},"status":"passed","severity":"normal"},{"uid":"33ee875416cad53f","name":"should update an itinerary reminder","time":{"start":1745254765784,"stop":1745254765788,"duration":4},"status":"passed","severity":"normal"},{"uid":"56b0e7b00266a51e","name":"should throw UnauthorizedException if token has expired","time":{"start":1745254768652,"stop":1745254768656,"duration":4},"status":"passed","severity":"normal"},{"uid":"814c490ee585c4c","name":"should call authService.createUser and authService.sendVerification with correct data","time":{"start":1745254768899,"stop":1745254768902,"duration":3},"status":"passed","severity":"normal"},{"uid":"91ca19b363a2cc53","name":"should return the correct start and end timestamps for the previous month","time":{"start":1745254768166,"stop":1745254768170,"duration":4},"status":"passed","severity":"normal"},{"uid":"d991a8d5117bd3da","name":"should throw NotFoundException if verification code is not found","time":{"start":1745254767047,"stop":1745254767051,"duration":4},"status":"passed","severity":"normal"},{"uid":"524cecb0c092dfb0","name":"should fetch analytics data and send to Discord","time":{"start":1745254768152,"stop":1745254768158,"duration":6},"status":"passed","severity":"normal"},{"uid":"d9a169b7805c253a","name":"should throw an error when page number exceeds total pages","time":{"start":1745254767166,"stop":1745254767168,"duration":2},"status":"passed","severity":"normal"},{"uid":"b091bbd35a5ff1ff","name":"should throw ForbiddenException when contingency plan belongs to different itinerary","time":{"start":1745254767352,"stop":1745254767355,"duration":3},"status":"passed","severity":"normal"},{"uid":"94795fc4cd3c182d","name":"should return user referral code and count","time":{"start":1745254768155,"stop":1745254768161,"duration":6},"status":"passed","severity":"normal"},{"uid":"26b959c267848a13","name":"should return empty data when there are no shared itineraries","time":{"start":1745254767135,"stop":1745254767137,"duration":2},"status":"passed","severity":"normal"},{"uid":"34b784f33e0fc50c","name":"should return new access and refresh tokens if refresh token is valid","time":{"start":1745254767012,"stop":1745254767015,"duration":3},"status":"passed","severity":"normal"},{"uid":"223712eacfd12e3e","name":"should return a string with the updated ticket id","time":{"start":1745254770322,"stop":1745254770326,"duration":4},"status":"passed","severity":"normal"},{"uid":"49ba72a8814ddc4c","name":"should throw NotFoundException if itinerary not found","time":{"start":1745254767264,"stop":1745254767268,"duration":4},"status":"passed","severity":"normal"},{"uid":"a65a15f6e49920ae","name":"should return price range when API call is successful","time":{"start":1745254769086,"stop":1745254769093,"duration":7},"status":"passed","severity":"normal"},{"uid":"85c8d25216d7b956","name":"should return all profiles","time":{"start":1745254770330,"stop":1745254770333,"duration":3},"status":"passed","severity":"normal"},{"uid":"555e4508443b2214","name":"should throw UnauthorizedException if user not found","time":{"start":1745254768645,"stop":1745254768648,"duration":3},"status":"passed","severity":"normal"},{"uid":"a3b4a832f15ab3a8","name":"should throw BadRequestException if user is not found","time":{"start":1745254768161,"stop":1745254768165,"duration":4},"status":"passed","severity":"normal"},{"uid":"3db52e81bf771728","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1745254767215,"stop":1745254767219,"duration":4},"status":"passed","severity":"normal"},{"uid":"4d797231366bea47","name":"should throw an error when API call fails","time":{"start":1745254769098,"stop":1745254769106,"duration":8},"status":"passed","severity":"normal"},{"uid":"75b7b4abd0a94865","name":"should mark itinerary as complete","time":{"start":1745254767197,"stop":1745254767203,"duration":6},"status":"passed","severity":"normal"},{"uid":"588e0465ed05523f","name":"should return 0 when there are no contingency plans","time":{"start":1745254767296,"stop":1745254767298,"duration":2},"status":"passed","severity":"normal"},{"uid":"8fe69d1a285848aa","name":"should handle service errors for shared itineraries","time":{"start":1745254767137,"stop":1745254767139,"duration":2},"status":"passed","severity":"normal"},{"uid":"65a9e83effca56be","name":"should create a profile","time":{"start":1745254769758,"stop":1745254769764,"duration":6},"status":"passed","severity":"normal"},{"uid":"b168f693d7ad307a","name":"should call remove() in the service and delete an itinerary","time":{"start":1745254767184,"stop":1745254767187,"duration":3},"status":"passed","severity":"normal"},{"uid":"8e4ff2c168007817","name":"should throw UnauthorizedException if user not found","time":{"start":1745254769655,"stop":1745254769662,"duration":7},"status":"passed","severity":"normal"},{"uid":"6bd65a608e2a1219","name":"should call service.validateLogin with correct ticketId","time":{"start":1745254769391,"stop":1745254769394,"duration":3},"status":"passed","severity":"normal"},{"uid":"3e803a1901636726","name":"should return empty data when there are no itineraries","time":{"start":1745254767156,"stop":1745254767157,"duration":1},"status":"passed","severity":"normal"},{"uid":"bbec8ce8285adc05","name":"should return \"10 menit\" for TEN_MINUTES_BEFORE option","time":{"start":1745254765848,"stop":1745254765850,"duration":2},"status":"passed","severity":"normal"},{"uid":"9440762e9c25e813","name":"should send an email successfully","time":{"start":1745254770403,"stop":1745254770405,"duration":2},"status":"passed","severity":"normal"},{"uid":"1804581156101bd9","name":"should return total pre-registered users count","time":{"start":1745254768111,"stop":1745254768123,"duration":12},"status":"passed","severity":"normal"},{"uid":"deb64256571e0c6f","name":"should return a string indicating a new payment was added","time":{"start":1745254770140,"stop":1745254770142,"duration":2},"status":"passed","severity":"normal"},{"uid":"b4811e48dc2e4f03","name":"should handle empty sections","time":{"start":1745254768664,"stop":1745254768668,"duration":4},"status":"passed","severity":"normal"},{"uid":"46dcf21f60ebd35c","name":"should throw UnauthorizedException if email is not registered","time":{"start":1745254768881,"stop":1745254768885,"duration":4},"status":"passed","severity":"normal"},{"uid":"33a2db23556ebb48","name":"should throw BadRequestException when there are more than 2 contingency plans","time":{"start":1745254767304,"stop":1745254767306,"duration":2},"status":"passed","severity":"normal"},{"uid":"e45aab942fdc859d","name":"should send invitations to the provided emails","time":{"start":1745254767230,"stop":1745254767233,"duration":3},"status":"passed","severity":"normal"},{"uid":"51dcbec76bcc0761","name":"should be defined","time":{"start":1745254769635,"stop":1745254769644,"duration":9},"status":"passed","severity":"normal"},{"uid":"41975e15d262815","name":"should return list of countries","time":{"start":1745254770199,"stop":1745254770202,"duration":3},"status":"passed","severity":"normal"},{"uid":"62f4cabdccfe7feb","name":"should throw BadRequestException when start date is after end date","time":{"start":1745254766996,"stop":1745254767000,"duration":4},"status":"passed","severity":"normal"},{"uid":"da3a0872b4f8edbb","name":"should filter itineraries with shared=false and finished=false","time":{"start":1745254767129,"stop":1745254767131,"duration":2},"status":"passed","severity":"normal"},{"uid":"39b2a5d8195b273a","name":"should be defined","time":{"start":1745254770186,"stop":1745254770198,"duration":12},"status":"passed","severity":"normal"},{"uid":"a7f2ad7af4038247","name":"should return list of cities based on country","time":{"start":1745254769081,"stop":1745254769084,"duration":3},"status":"passed","severity":"normal"},{"uid":"d605cc8ce5f6f77d","name":"should throw BadRequestException when there are already 2 contingency plans","time":{"start":1745254767301,"stop":1745254767303,"duration":2},"status":"passed","severity":"normal"},{"uid":"a2a030e6b70024d5","name":"should throw ForbiddenException when user is not the owner","time":{"start":1745254767118,"stop":1745254767120,"duration":2},"status":"passed","severity":"normal"},{"uid":"171476208174fef","name":"should throw ConflictException if user already exists and is confirmed","time":{"start":1745254767019,"stop":1745254767022,"duration":3},"status":"passed","severity":"normal"},{"uid":"e65140370959d1db","name":"should return contingency plans for an itinerary","time":{"start":1745254767243,"stop":1745254767245,"duration":2},"status":"passed","severity":"normal"},{"uid":"e242a9d2318c9b7f","name":"should create a new ticket for the user","time":{"start":1745254768165,"stop":1745254768174,"duration":9},"status":"passed","severity":"normal"},{"uid":"e35df0563a74e815","name":"should throw BadRequestException if user was created recently and is not confirmed","time":{"start":1745254767022,"stop":1745254767029,"duration":7},"status":"passed","severity":"normal"},{"uid":"cfbafde4ebbc0bdc","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1745254767317,"stop":1745254767323,"duration":6},"status":"passed","severity":"normal"},{"uid":"c6d6155d8ddae0cb","name":"should be defined","time":{"start":1745254769946,"stop":1745254769957,"duration":11},"status":"passed","severity":"normal"},{"uid":"c08fe8e8f49d6888","name":"should throw ForbiddenException if user is not authorized","time":{"start":1745254767250,"stop":1745254767253,"duration":3},"status":"passed","severity":"normal"},{"uid":"295afb5086be0d4f","name":"should throw NotFoundException if contingency not found","time":{"start":1745254767271,"stop":1745254767274,"duration":3},"status":"passed","severity":"normal"},{"uid":"10336d71f46b015","name":"should remove a profile","time":{"start":1745254770338,"stop":1745254770340,"duration":2},"status":"passed","severity":"normal"},{"uid":"7481903066bdb2db","name":"should call geminiService.generateFeedback with valid dto","time":{"start":1745254769962,"stop":1745254769965,"duration":3},"status":"passed","severity":"normal"},{"uid":"f79890a6d8648922","name":"should throw NotFoundException if itineraryId is not found when accepting an invitation","time":{"start":1745254767249,"stop":1745254767252,"duration":3},"status":"passed","severity":"normal"},{"uid":"fde43ff2d1ab8581","name":"should return access and refresh tokens on successful login","time":{"start":1745254768858,"stop":1745254768881,"duration":23},"status":"passed","severity":"normal"},{"uid":"9171e9ca4486ded7","name":"should return place details with price range when successful","time":{"start":1745254769080,"stop":1745254769082,"duration":2},"status":"passed","severity":"normal"},{"uid":"61721d2cd33efa3b","name":"should return a string indicating all payments were returned","time":{"start":1745254770143,"stop":1745254770144,"duration":1},"status":"passed","severity":"normal"},{"uid":"2ed46d7f63039a04","name":"should throw an error for invalid page number","time":{"start":1745254767160,"stop":1745254767166,"duration":6},"status":"passed","severity":"normal"},{"uid":"cf256d645cf871c6","name":"should return a string indicating a new profile has been added","time":{"start":1745254770326,"stop":1745254770330,"duration":4},"status":"passed","severity":"normal"},{"uid":"54c28ecb30d76dbc","name":"should throw BadRequestException on improper reminder option","time":{"start":1745254765824,"stop":1745254765831,"duration":7},"status":"passed","severity":"normal"},{"uid":"fd38bbd3ee311017","name":"should throw an error if placeId is not provided","time":{"start":1745254769969,"stop":1745254769972,"duration":3},"status":"passed","severity":"normal"},{"uid":"39d94e71a18f34b1","name":"should not send webhook if DISCORD_WEBHOOK_URL is not set","time":{"start":1745254768184,"stop":1745254768188,"duration":4},"status":"passed","severity":"normal"},{"uid":"fb264cb6c64ec05f","name":"should return an array of tags","time":{"start":1745254767223,"stop":1745254767226,"duration":3},"status":"passed","severity":"normal"},{"uid":"c5596c74cc6d86da","name":"should extract refresh token from cookies","time":{"start":1745254769662,"stop":1745254769666,"duration":4},"status":"passed","severity":"normal"},{"uid":"414f05c9216e720e","name":"should return itineraryId if user already has access to the itinerary","time":{"start":1745254767243,"stop":1745254767246,"duration":3},"status":"passed","severity":"normal"},{"uid":"5ee16da098be297a","name":"should invite a user to an itinerary and return a formatted response","time":{"start":1745254767213,"stop":1745254767215,"duration":2},"status":"passed","severity":"normal"},{"uid":"dca7c6b224cbdd66","name":"should return a string with the removed ticket id","time":{"start":1745254770326,"stop":1745254770328,"duration":2},"status":"passed","severity":"normal"},{"uid":"64a41d92be7963cf","name":"should return a profile by id","time":{"start":1745254770333,"stop":1745254770335,"duration":2},"status":"passed","severity":"normal"},{"uid":"f44082d404be8b16","name":"should throw BadRequestException if user does not exist","time":{"start":1745254767033,"stop":1745254767036,"duration":3},"status":"passed","severity":"normal"},{"uid":"c8b984ae6bc27551","name":"should throw ForbiddenException if user does not own the itinerary","time":{"start":1745254767323,"stop":1745254767329,"duration":6},"status":"passed","severity":"normal"},{"uid":"150316a08c864991","name":"should throw ForbiddenException if the user is not authorized to remove participants","time":{"start":1745254767240,"stop":1745254767242,"duration":2},"status":"passed","severity":"normal"},{"uid":"34b03289fb1e7dcf","name":"should return \"Hello World!\"","time":{"start":1745254770472,"stop":1745254770477,"duration":5},"status":"passed","severity":"normal"},{"uid":"d5a9ecda92950d81","name":"should parse JSON even if AI returns extra text","time":{"start":1745254768647,"stop":1745254768651,"duration":4},"status":"passed","severity":"normal"},{"uid":"7d1b106feb7ce34e","name":"should create a contingency plan with sections and blocks","time":{"start":1745254767307,"stop":1745254767316,"duration":9},"status":"passed","severity":"normal"},{"uid":"f35eb357c10dc869","name":"should throw BadRequestException if passwords do not match","time":{"start":1745254767058,"stop":1745254767061,"duration":3},"status":"passed","severity":"normal"},{"uid":"4865f46a016366b1","name":"should be defined","time":{"start":1745254767797,"stop":1745254767833,"duration":36},"status":"passed","severity":"normal"},{"uid":"2841103017dcc8b0","name":"should handle fetch errors gracefully","time":{"start":1745254768159,"stop":1745254768162,"duration":3},"status":"passed","severity":"normal"},{"uid":"459cafe6eb975c58","name":"should return empty data when user has no shared itineraries","time":{"start":1745254767178,"stop":1745254767180,"duration":2},"status":"passed","severity":"normal"},{"uid":"42bb4b25074fb754","name":"should throw BadRequestException if email is already registered","time":{"start":1745254768072,"stop":1745254768093,"duration":21},"status":"passed","severity":"normal"},{"uid":"4afd452c34c62d0d","name":"should return a string indicating a specific payment was returned","time":{"start":1745254770145,"stop":1745254770146,"duration":1},"status":"passed","severity":"normal"},{"uid":"db8c22a6b699c683","name":"should throw NotFoundException if the user to be removed is not a participant","time":{"start":1745254767283,"stop":1745254767292,"duration":9},"status":"passed","severity":"normal"},{"uid":"a0cd1fa6c21fb7fd","name":"should return array of tickets","time":{"start":1745254769673,"stop":1745254769675,"duration":2},"status":"passed","severity":"normal"},{"uid":"7cbe8b437c7ac6f6","name":"should throw UnauthorizedException if password is invalid","time":{"start":1745254766998,"stop":1745254767004,"duration":6},"status":"passed","severity":"normal"},{"uid":"dce869e4fc77feb7","name":"should update an itinerary with defaults for missing block fields","time":{"start":1745254767056,"stop":1745254767060,"duration":4},"status":"passed","severity":"normal"},{"uid":"78112b4d89864cac","name":"should throw an error if placeId is not provided","time":{"start":1745254769042,"stop":1745254769076,"duration":34},"status":"passed","severity":"normal"},{"uid":"8af61fbde6934219","name":"should throw NotFoundException when contingency plan does not exist","time":{"start":1745254767340,"stop":1745254767351,"duration":11},"status":"passed","severity":"normal"},{"uid":"8023f8f0ac32a497","name":"should return itineraries successfully","time":{"start":1745254767151,"stop":1745254767153,"duration":2},"status":"passed","severity":"normal"},{"uid":"a38d1185746c85f8","name":"should throw BadRequestException when sections validation fails","time":{"start":1745254767377,"stop":1745254767379,"duration":2},"status":"passed","severity":"normal"},{"uid":"65a3f09e5574876f","name":"should be defined","time":{"start":1745254770111,"stop":1745254770129,"duration":18},"status":"passed","severity":"normal"},{"uid":"f711f474fe8dffc","name":"should create a new user and send confirmation email","time":{"start":1745254768004,"stop":1745254768071,"duration":67},"status":"passed","severity":"normal"},{"uid":"126078c2b711daa6","name":"should call service.login with the correct email","time":{"start":1745254769389,"stop":1745254769391,"duration":2},"status":"passed","severity":"normal"},{"uid":"adc3b867f3950d58","name":"should return parsed feedback array from AI response","time":{"start":1745254768639,"stop":1745254768646,"duration":7},"status":"passed","severity":"normal"},{"uid":"35dc725a09305ace","name":"should throw UnauthorizedException if token is not provided","time":{"start":1745254768624,"stop":1745254768634,"duration":10},"status":"passed","severity":"normal"},{"uid":"fa0aacd635c65b6f","name":"should cancel an existing scheduled email job","time":{"start":1745254765832,"stop":1745254765834,"duration":2},"status":"passed","severity":"normal"},{"uid":"7d3ff88ea236b507","name":"should throw NotFoundException if itinerary doesnt exist","time":{"start":1745254765789,"stop":1745254765792,"duration":3},"status":"passed","severity":"normal"},{"uid":"a0df89084ba6f39","name":"should throw BadRequestException when duplicate section numbers are provided","time":{"start":1745254767005,"stop":1745254767009,"duration":4},"status":"passed","severity":"normal"},{"uid":"d5de9be4b6030f18","name":"should return an array of itinerary reminders","time":{"start":1745254765768,"stop":1745254765771,"duration":3},"status":"passed","severity":"normal"},{"uid":"31b959838b4f289c","name":"should skip processing when createdSection does not exist","time":{"start":1745254767092,"stop":1745254767095,"duration":3},"status":"passed","severity":"normal"},{"uid":"8cca9dc76bf95273","name":"should accept an itinerary invitation and link the user to the itinerary using itineraryId","time":{"start":1745254767240,"stop":1745254767243,"duration":3},"status":"passed","severity":"normal"},{"uid":"6f514ab6e7f268b0","name":"should return the authenticated user","time":{"start":1745254768916,"stop":1745254768922,"duration":6},"status":"passed","severity":"normal"},{"uid":"b22f59ad5298963c","name":"should return access and refresh tokens if login is successful","time":{"start":1745254767004,"stop":1745254767008,"duration":4},"status":"passed","severity":"normal"},{"uid":"83a69b914a360fe","name":"should create a payment","time":{"start":1745254770131,"stop":1745254770137,"duration":6},"status":"passed","severity":"normal"},{"uid":"b48c6cf8ce02dad6","name":"should clear refreshToken cookie","time":{"start":1745254768909,"stop":1745254768915,"duration":6},"status":"passed","severity":"normal"},{"uid":"52be88a8fb762bb","name":"should be defined","time":{"start":1745254769051,"stop":1745254769074,"duration":23},"status":"passed","severity":"normal"},{"uid":"45aebcfb00547c42","name":"should throw NotFoundException if the itinerary does not exist","time":{"start":1745254767234,"stop":1745254767237,"duration":3},"status":"passed","severity":"normal"},{"uid":"c81845488ef1fa41","name":"should return itinerary when found and user has access to it","time":{"start":1745254767124,"stop":1745254767126,"duration":2},"status":"passed","severity":"normal"},{"uid":"39a60408ece44d10","name":"should handle optional fields in the DTO correctly","time":{"start":1745254767093,"stop":1745254767096,"duration":3},"status":"passed","severity":"normal"},{"uid":"ec7e7f4b496a0b31","name":"should create a properly formatted prompt with all data types","time":{"start":1745254768657,"stop":1745254768661,"duration":4},"status":"passed","severity":"normal"},{"uid":"269e263da910e183","name":"should remove a payment","time":{"start":1745254770149,"stop":1745254770152,"duration":3},"status":"passed","severity":"normal"},{"uid":"41b3018cb11ea416","name":"should return an array of payments","time":{"start":1745254770137,"stop":1745254770140,"duration":3},"status":"passed","severity":"normal"},{"uid":"f335e0ef8ea2c8af","name":"should handle missing price range data","time":{"start":1745254769094,"stop":1745254769098,"duration":4},"status":"passed","severity":"normal"},{"uid":"e4816e1bf4e1e420","name":"should throw BadRequestException when date format is invalid","time":{"start":1745254767068,"stop":1745254767070,"duration":2},"status":"passed","severity":"normal"},{"uid":"1ec4f424295c97fc","name":"should return all contingency plans for the given itinerary","time":{"start":1745254767293,"stop":1745254767295,"duration":2},"status":"passed","severity":"normal"},{"uid":"a741f05cfc45dd93","name":"should create routes across multiple sections","time":{"start":1745254767028,"stop":1745254767033,"duration":5},"status":"passed","severity":"normal"},{"uid":"73cf43ba9e13f3bb","name":"should throw NotFoundException if contingency not found","time":{"start":1745254767277,"stop":1745254767280,"duration":3},"status":"passed","severity":"normal"},{"uid":"e11fd711840627b6","name":"should throw NotFoundException if itinerary doesnt exist","time":{"start":1745254765751,"stop":1745254765760,"duration":9},"status":"passed","severity":"normal"},{"uid":"8e36b255c5f2d4ba","name":"should call authService.register with correct data","time":{"start":1745254768906,"stop":1745254768908,"duration":2},"status":"passed","severity":"normal"},{"uid":"7dd7c128437e8ffa","name":"should throw NotFoundException when contingency plan does not exist","time":{"start":1745254767369,"stop":1745254767371,"duration":2},"status":"passed","severity":"normal"},{"uid":"ee2446f33f5dd290","name":"should create a contingency plan and return a formatted response","time":{"start":1745254767261,"stop":1745254767264,"duration":3},"status":"passed","severity":"normal"},{"uid":"7e263b55df96a4dc","name":"should log an error and return if UMAMI_DISCORD_WEBHOOK_URL is not set","time":{"start":1745254768177,"stop":1745254768179,"duration":2},"status":"passed","severity":"normal"},{"uid":"fc1cdb890dab0848","name":"should return completed itineraries with response formatting","time":{"start":1745254767166,"stop":1745254767168,"duration":2},"status":"passed","severity":"normal"},{"uid":"cbed87f6e7b7cb39","name":"should update a ticket","time":{"start":1745254769678,"stop":1745254769684,"duration":6},"status":"passed","severity":"normal"},{"uid":"ed3ae8d7782c77b1","name":"should throw NotFoundException if associated itinerary's reminder does not exist","time":{"start":1745254765780,"stop":1745254765784,"duration":4},"status":"passed","severity":"normal"},{"uid":"aa0abbb23b11abee","name":"should return place details when placeId is valid","time":{"start":1745254769954,"stop":1745254769968,"duration":14},"status":"passed","severity":"normal"},{"uid":"f487edc935003299","name":"should throw NotFoundException when contingency plan does not exist","time":{"start":1745254767359,"stop":1745254767361,"duration":2},"status":"passed","severity":"normal"},{"uid":"9b7ed82a8aed0a8f","name":"should be defined","time":{"start":1745254769361,"stop":1745254769383,"duration":22},"status":"passed","severity":"normal"},{"uid":"49ec3c4a2a210e4","name":"should throw NotFoundException if the pending invitation does not exist","time":{"start":1745254767246,"stop":1745254767249,"duration":3},"status":"passed","severity":"normal"},{"uid":"522136e2f3a8b0f8","name":"should select a contingency plan and return a formatted response","time":{"start":1745254767268,"stop":1745254767271,"duration":3},"status":"passed","severity":"normal"},{"uid":"6581da46597fe7e0","name":"should return itineraries shared with the user","time":{"start":1745254767171,"stop":1745254767178,"duration":7},"status":"passed","severity":"normal"},{"uid":"2fb2bb6a01861525","name":"should return \"1 jam\" for ONE_HOUR_BEFORE option","time":{"start":1745254765845,"stop":1745254765847,"duration":2},"status":"passed","severity":"normal"},{"uid":"fe7ec4ec66140551","name":"should format dates according to Indonesian time format","time":{"start":1745254768669,"stop":1745254768671,"duration":2},"status":"passed","severity":"normal"},{"uid":"e002a15977bc6721","name":"should throw NotFoundException if contingency plan not found","time":{"start":1745254767257,"stop":1745254767261,"duration":4},"status":"passed","severity":"normal"},{"uid":"a42a09cd9f5df025","name":"should throw UnauthorizedException if firstNames do not match","time":{"start":1745254767054,"stop":1745254767057,"duration":3},"status":"passed","severity":"normal"},{"uid":"61c3593b96803392","name":"should throw InternalServerErrorException on AI error","time":{"start":1745254768652,"stop":1745254768656,"duration":4},"status":"passed","severity":"normal"},{"uid":"8ddb284427dfe13a","name":"should filter itineraries with shared=true and finished=true","time":{"start":1745254767116,"stop":1745254767128,"duration":12},"status":"passed","severity":"normal"},{"uid":"cda9f28011e0cf51","name":"should be defined","time":{"start":1745254770295,"stop":1745254770304,"duration":9},"status":"passed","severity":"normal"},{"uid":"e082b3adb45d37d2","name":"should send analytics data to Discord","time":{"start":1745254768171,"stop":1745254768173,"duration":2},"status":"passed","severity":"normal"},{"uid":"400dcad98c3a4ec","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1745254767060,"stop":1745254767063,"duration":3},"status":"passed","severity":"normal"},{"uid":"46eafd87e50e983","name":"should return a single ticket","time":{"start":1745254769675,"stop":1745254769677,"duration":2},"status":"passed","severity":"normal"},{"uid":"7c450d3aeced8f20","name":"should be defined","time":{"start":1745254770131,"stop":1745254770140,"duration":9},"status":"passed","severity":"normal"},{"uid":"de1477bcedf9d812","name":"should throw NotFoundException if itinerary reminder does not exist","time":{"start":1745254765793,"stop":1745254765796,"duration":3},"status":"passed","severity":"normal"},{"uid":"78dbe326d481572a","name":"should throw UnauthorizedException if refresh token is blacklisted","time":{"start":1745254767009,"stop":1745254767012,"duration":3},"status":"passed","severity":"normal"},{"uid":"fe9d5c6485ad2e6f","name":"should handle missing description","time":{"start":1745254768661,"stop":1745254768663,"duration":2},"status":"passed","severity":"normal"},{"uid":"8c292ea620577f1d","name":"should return only completed itineraries when finishedBool is true","time":{"start":1745254767157,"stop":1745254767160,"duration":3},"status":"passed","severity":"normal"},{"uid":"5c8efd11565ea12c","name":"should throw NotFoundException when itinerary does not exist","time":{"start":1745254767114,"stop":1745254767117,"duration":3},"status":"passed","severity":"normal"},{"uid":"9663e71057374de9","name":"should throw BadRequestException when duplicate section numbers are provided","time":{"start":1745254767082,"stop":1745254767085,"duration":3},"status":"passed","severity":"normal"},{"uid":"44c8af1f9b823878","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1745254767160,"stop":1745254767162,"duration":2},"status":"passed","severity":"normal"},{"uid":"157d46e0df04a224","name":"should select a contingency plan and unselect others","time":{"start":1745254767355,"stop":1745254767358,"duration":3},"status":"passed","severity":"normal"},{"uid":"543e35295bc7c9ab","name":"should return all itineraries with default parameters","time":{"start":1745254767113,"stop":1745254767116,"duration":3},"status":"passed","severity":"normal"},{"uid":"c5bb02fc2aff5534","name":"should throw an error for invalid page number","time":{"start":1745254767182,"stop":1745254767185,"duration":3},"status":"passed","severity":"normal"},{"uid":"fd39793c1cfb3154","name":"should throw ConflictException if itinerary reminder already exist","time":{"start":1745254765762,"stop":1745254765767,"duration":5},"status":"passed","severity":"normal"},{"uid":"ea4dc4ffcace23af","name":"should return only shared itineraries when sharedBool is true","time":{"start":1745254767153,"stop":1745254767156,"duration":3},"status":"passed","severity":"normal"},{"uid":"a3a076d4f7147a1a","name":"should allow user to see itinerary if invited","time":{"start":1745254767127,"stop":1745254767129,"duration":2},"status":"passed","severity":"normal"},{"uid":"9a1a7620e0d25ce8","name":"should return an empty array of itinerary reminders if none found","time":{"start":1745254765773,"stop":1745254765776,"duration":3},"status":"passed","severity":"normal"},{"uid":"b0846c28a6521efa","name":"should create an itinerary with sections and blocks","time":{"start":1745254766944,"stop":1745254766956,"duration":12},"status":"passed","severity":"normal"},{"uid":"5fa6e7944d86a5fb","name":"should throw NotFoundException if user is not found","time":{"start":1745254767061,"stop":1745254767196,"duration":135},"status":"passed","severity":"normal"},{"uid":"1950df96042bb2d0","name":"should return 401 Unauthorized if UMAMI_API_KEY is not set","time":{"start":1745254768163,"stop":1745254768166,"duration":3},"status":"passed","severity":"normal"},{"uid":"2dbacf297d217a28","name":"should return the pre-register count","time":{"start":1745254769387,"stop":1745254769389,"duration":2},"status":"passed","severity":"normal"},{"uid":"33658fda799aa09","name":"should throw a NotFoundException if job doesnt exist","time":{"start":1745254765835,"stop":1745254765841,"duration":6},"status":"passed","severity":"normal"},{"uid":"6db5473dcb7c65ba","name":"should skip processing when createdBlock does not exist","time":{"start":1745254767095,"stop":1745254767098,"duration":3},"status":"passed","severity":"normal"},{"uid":"a01af19b9ae36f90","name":"should create a ticket","time":{"start":1745254769669,"stop":1745254769673,"duration":4},"status":"passed","severity":"normal"},{"uid":"e0ea6a28298de571","name":"should throw NotFoundException when tags do not exist","time":{"start":1745254767009,"stop":1745254767022,"duration":13},"status":"passed","severity":"normal"},{"uid":"981703991d60a25e","name":"should be defined","time":{"start":1745254768129,"stop":1745254768151,"duration":22},"status":"passed","severity":"normal"},{"uid":"65a299fd4ba1c889","name":"should throw ForbiddenException if user is not authorized","time":{"start":1745254767280,"stop":1745254767283,"duration":3},"status":"passed","severity":"normal"},{"uid":"723490ae8a9f9c06","name":"should return a string indicating all tickets are returned","time":{"start":1745254770318,"stop":1745254770320,"duration":2},"status":"passed","severity":"normal"},{"uid":"ceba3c4cf1239720","name":"should return empty itinerary array if no completed itineraries found","time":{"start":1745254767169,"stop":1745254767171,"duration":2},"status":"passed","severity":"normal"},{"uid":"6077ff513bb61743","name":"should return validation error if page is negative","time":{"start":1745254770444,"stop":1745254770447,"duration":3},"status":"passed","severity":"normal"},{"uid":"b2fafb801d7a57a9","name":"should validate login ticket and return access token","time":{"start":1745254768139,"stop":1745254768143,"duration":4},"status":"passed","severity":"normal"},{"uid":"b47c5cbc298f8b8","name":"should delete the oldest ticket if there are too many","time":{"start":1745254767040,"stop":1745254767044,"duration":4},"status":"passed","severity":"normal"},{"uid":"7901ffedba0b658c","name":"should be defined","time":{"start":1745254769644,"stop":1745254769665,"duration":21},"status":"passed","severity":"normal"},{"uid":"7d79f596ad2c3e04","name":"should throw NotFoundException if the invitation does not exist","time":{"start":1745254767224,"stop":1745254767227,"duration":3},"status":"passed","severity":"normal"},{"uid":"7ec0f37a0f47d718","name":"should return 1 when there is one contingency plan","time":{"start":1745254767298,"stop":1745254767300,"duration":2},"status":"passed","severity":"normal"},{"uid":"baa0c34800214683","name":"should return empty list if user has no itineraries","time":{"start":1745254767146,"stop":1745254767149,"duration":3},"status":"passed","severity":"normal"},{"uid":"c53fb45457cc88a3","name":"should throw ForbiddenException if the user is not the owner of the itinerary","time":{"start":1745254767273,"stop":1745254767283,"duration":10},"status":"passed","severity":"normal"},{"uid":"19435ca0e5701742","name":"should return list of countries","time":{"start":1745254769075,"stop":1745254769080,"duration":5},"status":"passed","severity":"normal"},{"uid":"16e263016c061544","name":"should be defined","time":{"start":1745254768615,"stop":1745254768639,"duration":24},"status":"passed","severity":"normal"},{"uid":"f7c75c32baca24a1","name":"should return an itinerary when found","time":{"start":1745254767033,"stop":1745254767068,"duration":35},"status":"passed","severity":"normal"},{"uid":"4acfdce556433a65","name":"should return new access and refresh tokens","time":{"start":1745254768889,"stop":1745254768895,"duration":6},"status":"passed","severity":"normal"},{"uid":"b4822ce9cdb86a7b","name":"should return an empty array if there are no tags","time":{"start":1745254767226,"stop":1745254767230,"duration":4},"status":"passed","severity":"normal"},{"uid":"ff386bf5bcce4485","name":"should throw ForbiddenException if user does not own the itinerary","time":{"start":1745254767064,"stop":1745254767067,"duration":3},"status":"passed","severity":"normal"},{"uid":"570bd22e47492efa","name":"should return an array of profiles","time":{"start":1745254769765,"stop":1745254769767,"duration":2},"status":"passed","severity":"normal"},{"uid":"889ce888381edbec","name":"should pass errors from service to the caller","time":{"start":1745254767175,"stop":1745254767183,"duration":8},"status":"passed","severity":"normal"},{"uid":"137ec5d7a78d2b81","name":"should throw an error if itineraryData.sections is empty","time":{"start":1745254769957,"stop":1745254769962,"duration":5},"status":"passed","severity":"normal"},{"uid":"f2644d904f4f663b","name":"should accept an itinerary invitation","time":{"start":1745254767221,"stop":1745254767224,"duration":3},"status":"passed","severity":"normal"},{"uid":"bd65e60965d70c3e","name":"should be defined","time":{"start":1745254766971,"stop":1745254767031,"duration":60},"status":"passed","severity":"normal"},{"uid":"4ba2f5b2d664208b","name":"should return a single profile","time":{"start":1745254769771,"stop":1745254769776,"duration":5},"status":"passed","severity":"normal"},{"uid":"27250b2e6099be5c","name":"should throw an error when API call fails","time":{"start":1745254769077,"stop":1745254769079,"duration":2},"status":"passed","severity":"normal"},{"uid":"b39b4a5311df08fd","name":"should allow access if the route is public","time":{"start":1745254768620,"stop":1745254768624,"duration":4},"status":"passed","severity":"normal"},{"uid":"f11befb1dc9b34dd","name":"should update a profile","time":{"start":1745254770336,"stop":1745254770338,"duration":2},"status":"passed","severity":"normal"},{"uid":"a56b6e0d423952cf","name":"should update an itinerary with defaults for deleted/missing fields","time":{"start":1745254767052,"stop":1745254767055,"duration":3},"status":"passed","severity":"normal"},{"uid":"c724f7a6d0a54d21","name":"should throw UnauthorizedException if user is not found","time":{"start":1745254766968,"stop":1745254766998,"duration":30},"status":"passed","severity":"normal"},{"uid":"a9d98c761e9a6ee0","name":"should throw BadRequestException when date format is invalid","time":{"start":1745254766962,"stop":1745254766995,"duration":33},"status":"passed","severity":"normal"},{"uid":"3b44e5c95755fab","name":"should send webhook for pre-registration","time":{"start":1745254768188,"stop":1745254768196,"duration":8},"status":"passed","severity":"normal"},{"uid":"20ae1085f131aa4a","name":"should throw UnauthorizedException if token is invalid","time":{"start":1745254768635,"stop":1745254768640,"duration":5},"status":"passed","severity":"normal"},{"uid":"4769d3e0728dfd6","name":"should handle non-consecutive block positions when creating routes","time":{"start":1745254767034,"stop":1745254767037,"duration":3},"status":"passed","severity":"normal"},{"uid":"cc7af298e4164e4d","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1745254767204,"stop":1745254767206,"duration":2},"status":"passed","severity":"normal"},{"uid":"c80ab55079d48113","name":"should send login email if user exists","time":{"start":1745254768129,"stop":1745254768135,"duration":6},"status":"passed","severity":"normal"},{"uid":"9aa9d1a18c411544","name":"should be defined","time":{"start":1745254765669,"stop":1745254765721,"duration":52},"status":"passed","severity":"normal"},{"uid":"c95d026ef069ed31","name":"should throw BadRequestException when block start time is after end time","time":{"start":1745254767074,"stop":1745254767077,"duration":3},"status":"passed","severity":"normal"},{"uid":"bdfe8622344a7ab6","name":"should throw ForbiddenException if user is not the owner of the itinerary","time":{"start":1745254767237,"stop":1745254767239,"duration":2},"status":"passed","severity":"normal"},{"uid":"7014b76a113da8ce","name":"should create an itinerary reminder and schedule the cron job","time":{"start":1745254767834,"stop":1745254767838,"duration":4},"status":"passed","severity":"normal"},{"uid":"f1fdbdef4cb1daf1","name":"should create an itinerary with default section title, empty blocks, and empty tags","time":{"start":1745254766957,"stop":1745254766961,"duration":4},"status":"passed","severity":"normal"},{"uid":"ea879e823a70b305","name":"should pass errors from service to the caller","time":{"start":1745254767084,"stop":1745254767088,"duration":4},"status":"passed","severity":"normal"},{"uid":"e480bcd6e6b98a40","name":"should be defined","time":{"start":1745254770314,"stop":1745254770325,"duration":11},"status":"passed","severity":"normal"},{"uid":"c1b35ed255b565ee","name":"should handle service errors correctly","time":{"start":1745254767131,"stop":1745254767133,"duration":2},"status":"passed","severity":"normal"},{"uid":"9a8e57f53f045c11","name":"should remove an itinerary reminder and cancel the cron job","time":{"start":1745254767842,"stop":1745254767845,"duration":3},"status":"passed","severity":"normal"},{"uid":"57af0f4f9e3d4939","name":"should throw BadRequestException when no sections are provided","time":{"start":1745254767078,"stop":1745254767081,"duration":3},"status":"passed","severity":"normal"},{"uid":"d678724ddc6f150e","name":"should be defined","time":{"start":1745254770393,"stop":1745254770402,"duration":9},"status":"passed","severity":"normal"},{"uid":"ca8c73175de67bd7","name":"should use default TRANSPORT_MODE.DRIVE when transportMode is not provided","time":{"start":1745254767102,"stop":1745254767111,"duration":9},"status":"passed","severity":"normal"},{"uid":"b144797376e6e2d8","name":"should create an itinerary reminder","time":{"start":1745254765743,"stop":1745254765751,"duration":8},"status":"passed","severity":"normal"},{"uid":"385508ae1e077b6b","name":"should update a profile","time":{"start":1745254769777,"stop":1745254769779,"duration":2},"status":"passed","severity":"normal"},{"uid":"4dc7506df02241a","name":"should correctly count LOCATION blocks","time":{"start":1745254767192,"stop":1745254767194,"duration":2},"status":"passed","severity":"normal"},{"uid":"2c5464322781f809","name":"should throw an error if placeId is not provided","time":{"start":1745254769082,"stop":1745254769086,"duration":4},"status":"passed","severity":"normal"},{"uid":"b5301493974940ee","name":"should not create route when routeToNext is undefined or null","time":{"start":1745254767023,"stop":1745254767027,"duration":4},"status":"passed","severity":"normal"},{"uid":"267dce21e217ef2a","name":"should throw ForbiddenException when user is not the owner of the itinerary","time":{"start":1745254767219,"stop":1745254767223,"duration":4},"status":"passed","severity":"normal"},{"uid":"a24913304373593d","name":"should return a string indicating a new ticket was added","time":{"start":1745254770304,"stop":1745254770317,"duration":13},"status":"passed","severity":"normal"},{"uid":"e4dd4e5aead5f857","name":"should mark itinerary as complete","time":{"start":1745254767158,"stop":1745254767159,"duration":1},"status":"passed","severity":"normal"},{"uid":"e7b753aa65923ffe","name":"should update a payment","time":{"start":1745254770144,"stop":1745254770148,"duration":4},"status":"passed","severity":"normal"},{"uid":"a561169aee405acc","name":"should return an itinerary reminder with associated itinerary id","time":{"start":1745254765776,"stop":1745254765779,"duration":3},"status":"passed","severity":"normal"},{"uid":"2e34aef323cb0074","name":"should delete expired refresh tokens","time":{"start":1745254767016,"stop":1745254767019,"duration":3},"status":"passed","severity":"normal"},{"uid":"5f41b0f768b28615","name":"should return a string indicating a payment was removed","time":{"start":1745254770150,"stop":1745254770152,"duration":2},"status":"passed","severity":"normal"},{"uid":"8b98bf9b30a96dd4","name":"should be defined","time":{"start":1745254768598,"stop":1745254768619,"duration":21},"status":"passed","severity":"normal"},{"uid":"aad41d5cbf414432","name":"should throw NotFoundException if itinerary is not found","time":{"start":1745254767068,"stop":1745254767072,"duration":4},"status":"passed","severity":"normal"},{"uid":"e6ac4c71a81e7e29","name":"should call authService.verify with correct data","time":{"start":1745254768902,"stop":1745254768905,"duration":3},"status":"passed","severity":"normal"},{"uid":"3df70bb30046e86a","name":"should handle Discord webhook errors gracefully","time":{"start":1745254768174,"stop":1745254768177,"duration":3},"status":"passed","severity":"normal"},{"uid":"a79dbae6cf443106","name":"should throw a BadRequestException on jobs with date in past","time":{"start":1745254765817,"stop":1745254765820,"duration":3},"status":"passed","severity":"normal"},{"uid":"124ef670287664d2","name":"should fetch an itinerary reminder and return OK when found","time":{"start":1745254767845,"stop":1745254767850,"duration":5},"status":"passed","severity":"normal"},{"uid":"fbfb447acd1332ef","name":"should throw UnauthorizedException if password is incorrect","time":{"start":1745254768886,"stop":1745254768889,"duration":3},"status":"passed","severity":"normal"},{"uid":"920e8745ccb890f7","name":"should return \"1 hari\" for ONE_DAY_BEFORE option","time":{"start":1745254765842,"stop":1745254765845,"duration":3},"status":"passed","severity":"normal"},{"uid":"6938643c700f6d56","name":"should throw ForbiddenException if user is not authorized","time":{"start":1745254767133,"stop":1745254767136,"duration":3},"status":"passed","severity":"normal"},{"uid":"fe7efdd35170e434","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1745254767234,"stop":1745254767236,"duration":2},"status":"passed","severity":"normal"},{"uid":"f2d576cc17a5a657","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1745254767130,"stop":1745254767132,"duration":2},"status":"passed","severity":"normal"},{"uid":"29a007010f062c2","name":"should transform page to a number","time":{"start":1745254770440,"stop":1745254770443,"duration":3},"status":"passed","severity":"normal"},{"uid":"51b39064b7a924ec","name":"should throw an error if itinerary is not found","time":{"start":1745254767188,"stop":1745254767201,"duration":13},"status":"passed","severity":"normal"},{"uid":"698d2c6453bc6c73","name":"should return an empty array when there are no completed itineraries","time":{"start":1745254767194,"stop":1745254767197,"duration":3},"status":"passed","severity":"normal"},{"uid":"98914059859dc7c1","name":"should remove a user from the itinerary successfully","time":{"start":1745254767256,"stop":1745254767258,"duration":2},"status":"passed","severity":"normal"},{"uid":"e7b14ba7d3190c05","name":"should validate user if refresh token is valid","time":{"start":1745254769648,"stop":1745254769654,"duration":6},"status":"passed","severity":"normal"},{"uid":"ec7a949e99b40a46","name":"should skip route creation when createdBlock is undefined or null","time":{"start":1745254767111,"stop":1745254767114,"duration":3},"status":"passed","severity":"normal"},{"uid":"37ba091d2f33a5ca","name":"should throw NotFoundException if itinerary not found","time":{"start":1745254767246,"stop":1745254767250,"duration":4},"status":"passed","severity":"normal"},{"uid":"c3c7c984d79f922e","name":"should update an itinerary and return a formatted response","time":{"start":1745254767172,"stop":1745254767174,"duration":2},"status":"passed","severity":"normal"},{"uid":"1b3219aec5a56f2f","name":"should schedule a sendEmail job and verify it runs","time":{"start":1745254765808,"stop":1745254765813,"duration":5},"status":"passed","severity":"normal"},{"uid":"f0c828eb94e7738","name":"should create an itinerary without tags","time":{"start":1745254767089,"stop":1745254767093,"duration":4},"status":"passed","severity":"normal"},{"uid":"463da97eabd78ca0","name":"should throw ForbiddenException if the user is not authorized to invite","time":{"start":1745254767218,"stop":1745254767221,"duration":3},"status":"passed","severity":"normal"},{"uid":"1a39cc0b46348ed2","name":"should handle errors if sending email fails","time":{"start":1745254770406,"stop":1745254770409,"duration":3},"status":"passed","severity":"normal"},{"uid":"ce2025a5fdf1859","name":"should handle overflow page numbers","time":{"start":1745254767143,"stop":1745254767145,"duration":2},"status":"passed","severity":"normal"},{"uid":"8462f202d10eb95f","name":"should allow page to be optional","time":{"start":1745254770447,"stop":1745254770448,"duration":1},"status":"passed","severity":"normal"},{"uid":"22779283e2eb6d48","name":"should throw NotFoundException if the itinerary does not exist","time":{"start":1745254767264,"stop":1745254767273,"duration":9},"status":"passed","severity":"normal"},{"uid":"39b82c3f4aae4d9c","name":"should remove a user from an itinerary and return a formatted response","time":{"start":1745254767231,"stop":1745254767234,"duration":3},"status":"passed","severity":"normal"},{"uid":"16cca8ff55e02873","name":"should throw NotFoundException if the itinerary does not exist","time":{"start":1745254767216,"stop":1745254767218,"duration":2},"status":"passed","severity":"normal"},{"uid":"b5be7cf7eacf730b","name":"should return an empty array if no tags are found","time":{"start":1745254767210,"stop":1745254767213,"duration":3},"status":"passed","severity":"normal"},{"uid":"d88985e5b4f1d380","name":"should return a string indicating a payment was updated","time":{"start":1745254770146,"stop":1745254770150,"duration":4},"status":"passed","severity":"normal"},{"uid":"43cd6f67194ebead","name":"should return a contingency plan with correctly mapped section numbers","time":{"start":1745254767330,"stop":1745254767339,"duration":9},"status":"passed","severity":"normal"},{"uid":"2266abafd5aef09b","name":"should create route when nextBlock exists","time":{"start":1745254767099,"stop":1745254767101,"duration":2},"status":"passed","severity":"normal"},{"uid":"5ddddca4fcbede4b","name":"should reschedule itinerary reminders on server restart","time":{"start":1745254765727,"stop":1745254765742,"duration":15},"status":"passed","severity":"normal"},{"uid":"5f7bc428af49066d","name":"should return all tags","time":{"start":1745254767202,"stop":1745254767210,"duration":8},"status":"passed","severity":"normal"},{"uid":"f2b8150d7b8a402","name":"should throw UnauthorizedException if emails do not match","time":{"start":1745254767051,"stop":1745254767054,"duration":3},"status":"passed","severity":"normal"},{"uid":"45d083607d08926b","name":"should call service.createPreRegister with correct data","time":{"start":1745254769384,"stop":1745254769386,"duration":2},"status":"passed","severity":"normal"},{"uid":"6d5905443e096fdf","name":"should throw BadRequestException when start date is after end date","time":{"start":1745254767071,"stop":1745254767074,"duration":3},"status":"passed","severity":"normal"},{"uid":"f83754a92ae36788","name":"should throw an error for invalid page number","time":{"start":1745254767153,"stop":1745254767156,"duration":3},"status":"passed","severity":"normal"},{"uid":"aa59f7f4e2bc65f7","name":"should allow access if token is valid","time":{"start":1745254768648,"stop":1745254768652,"duration":4},"status":"passed","severity":"normal"},{"uid":"f5fea57de7799379","name":"should return country code","time":{"start":1745254770202,"stop":1745254770204,"duration":2},"status":"passed","severity":"normal"},{"uid":"ea2e906809e910c7","name":"should return paginated itineraries","time":{"start":1745254767137,"stop":1745254767140,"duration":3},"status":"passed","severity":"normal"},{"uid":"e9f266e3ea1c7d9","name":"should throw UnauthorizedException if refresh token is invalid","time":{"start":1745254768895,"stop":1745254768898,"duration":3},"status":"passed","severity":"normal"},{"uid":"6845bc45d6340ba9","name":"should throw BadRequestException if last ticket is still valid","time":{"start":1745254768174,"stop":1745254768180,"duration":6},"status":"passed","severity":"normal"},{"uid":"6e38368cf8c6a2cb","name":"should throw BadRequestException if email is not registered","time":{"start":1745254768136,"stop":1745254768139,"duration":3},"status":"passed","severity":"normal"},{"uid":"545eeaa5602afe1e","name":"should throw BadRequestException if requesting too fast","time":{"start":1745254767036,"stop":1745254767039,"duration":3},"status":"passed","severity":"normal"},{"uid":"9a35e4076927e861","name":"should update an itinerary reminder and reschdule the cron job","time":{"start":1745254767838,"stop":1745254767841,"duration":3},"status":"passed","severity":"normal"},{"uid":"e212a087374ec0e8","name":"should throw ForbiddenException when contingency plan belongs to different itinerary","time":{"start":1745254767372,"stop":1745254767376,"duration":4},"status":"passed","severity":"normal"},{"uid":"e302429376e30636","name":"should throw ForbiddenException when contingency plan belongs to different itinerary","time":{"start":1745254767362,"stop":1745254767364,"duration":2},"status":"passed","severity":"normal"},{"uid":"744561aa0de44d3","name":"should return completed itineraries with locationCount","time":{"start":1745254767188,"stop":1745254767191,"duration":3},"status":"passed","severity":"normal"},{"uid":"fdd22e92336ea9a8","name":"should handle when section is not found in the created itinerary","time":{"start":1745254767042,"stop":1745254767045,"duration":3},"status":"passed","severity":"normal"},{"uid":"b93be7168c315031","name":"should remove an itinerary reminder","time":{"start":1745254765796,"stop":1745254765799,"duration":3},"status":"passed","severity":"normal"},{"uid":"a352c86d24474d38","name":"should remove a ticket","time":{"start":1745254769685,"stop":1745254769690,"duration":5},"status":"passed","severity":"normal"},{"uid":"97f5110f0b14cec8","name":"should handle negative page numbers","time":{"start":1745254767140,"stop":1745254767142,"duration":2},"status":"passed","severity":"normal"},{"uid":"831990cb03b1f9b2","name":"should return list of cities","time":{"start":1745254770205,"stop":1745254770207,"duration":2},"status":"passed","severity":"normal"},{"uid":"248f209f51185629","name":"should return the itinerary if user is the owner","time":{"start":1745254767121,"stop":1745254767123,"duration":2},"status":"passed","severity":"normal"},{"uid":"3c69f57d0cb29441","name":"should be defined","time":{"start":1745254769729,"stop":1745254769755,"duration":26},"status":"passed","severity":"normal"},{"uid":"72ef0d2870af25f8","name":"should throw ForbiddenException if user is not authorized","time":{"start":1745254767073,"stop":1745254767078,"duration":5},"status":"passed","severity":"normal"},{"uid":"5841cccbca6621ce","name":"should return a specific contingency plan","time":{"start":1745254767253,"stop":1745254767256,"duration":3},"status":"passed","severity":"normal"},{"uid":"d24b2913d7772cc3","name":"should throw a ConflictException on already scheduled reminders","time":{"start":1745254765813,"stop":1745254765817,"duration":4},"status":"passed","severity":"normal"},{"uid":"e8f5e0b145a32635","name":"should return a single payment","time":{"start":1745254770141,"stop":1745254770143,"duration":2},"status":"passed","severity":"normal"}]