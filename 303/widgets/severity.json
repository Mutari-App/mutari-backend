[{"uid":"4efacb445b481baa","name":"should call service and return response","time":{"start":1747766941511,"stop":1747766941514,"duration":3},"status":"passed","severity":"normal"},{"uid":"3dd6d960d24b3f23","name":"should fetch published itineraries and index them","time":{"start":1747766939950,"stop":1747766939953,"duration":3},"status":"passed","severity":"normal"},{"uid":"25d8ed95d933e92a","name":"should handle missing fields gracefully","time":{"start":1747766939930,"stop":1747766939932,"duration":2},"status":"passed","severity":"normal"},{"uid":"879642ba1e7f4445","name":"should throw UnauthorizedException if password is invalid","time":{"start":1747766938407,"stop":1747766938425,"duration":18},"status":"passed","severity":"normal"},{"uid":"bda03c6b4d9ab15b","name":"should update and return the ticket when transaction status is settlement","time":{"start":1747766940251,"stop":1747766940260,"duration":9},"status":"passed","severity":"normal"},{"uid":"cc0fd9ae9fa32699","name":"should return empty array when no recommended itineraries are found","time":{"start":1747766939561,"stop":1747766939563,"duration":2},"status":"passed","severity":"normal"},{"uid":"2558710a06d40b3","name":"should limit suggestions to top 5 results","time":{"start":1747766939504,"stop":1747766939510,"duration":6},"status":"passed","severity":"normal"},{"uid":"1f0486f560d9b64","name":"should throw BadRequestException when requesting too soon","time":{"start":1747766939706,"stop":1747766939711,"duration":5},"status":"passed","severity":"normal"},{"uid":"e78235717f63ece4","name":"should pass errors from service to the caller","time":{"start":1747766939544,"stop":1747766939546,"duration":2},"status":"passed","severity":"normal"},{"uid":"abb2df540816df72","name":"should sync tours when provided with valid API key","time":{"start":1747766941954,"stop":1747766941959,"duration":5},"status":"passed","severity":"normal"},{"uid":"728b8cf8d538dfb1","name":"should throw NotFoundException if itinerary doesnt exist","time":{"start":1747766940279,"stop":1747766940281,"duration":2},"status":"passed","severity":"normal"},{"uid":"845a71e444658ff8","name":"should throw NotFoundException if the itinerary does not exist","time":{"start":1747766939197,"stop":1747766939200,"duration":3},"status":"passed","severity":"normal"},{"uid":"cfade69edbb93c0","name":"should search tours with filters and pagination","time":{"start":1747766940178,"stop":1747766940181,"duration":3},"status":"passed","severity":"normal"},{"uid":"2163e50e32434795","name":"should update an itinerary reminder","time":{"start":1747766940276,"stop":1747766940279,"duration":3},"status":"passed","severity":"normal"},{"uid":"29c2b86be893d310","name":"should throw a NotFoundException if job doesnt exist","time":{"start":1747766940315,"stop":1747766940318,"duration":3},"status":"passed","severity":"normal"},{"uid":"2136b186eb23eddd","name":"should throw NotFoundException if the user to be removed is not a participant","time":{"start":1747766939204,"stop":1747766939210,"duration":6},"status":"passed","severity":"normal"},{"uid":"428b087f2e6f0866","name":"should return access and refresh tokens if login is successful","time":{"start":1747766938734,"stop":1747766938737,"duration":3},"status":"passed","severity":"normal"},{"uid":"377f6d5cfd6108a9","name":"should throw NotFoundException if itineraryId is not found when accepting an invitation","time":{"start":1747766939172,"stop":1747766939175,"duration":3},"status":"passed","severity":"normal"},{"uid":"270fe9fd02c486a9","name":"should search with custom sort parameters","time":{"start":1747766939351,"stop":1747766939355,"duration":4},"status":"passed","severity":"normal"},{"uid":"da4db6d3813f3009","name":"should format dates according to Indonesian time format","time":{"start":1747766941827,"stop":1747766941831,"duration":4},"status":"passed","severity":"normal"},{"uid":"16e6e6412e44daa7","name":"should mark itinerary as complete","time":{"start":1747766939124,"stop":1747766939128,"duration":4},"status":"passed","severity":"normal"},{"uid":"62eb8411ccd33606","name":"should throw ForbiddenException if the user is not authorized to remove participants","time":{"start":1747766939404,"stop":1747766939409,"duration":5},"status":"passed","severity":"normal"},{"uid":"ff715240e59d0325","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747766939423,"stop":1747766939425,"duration":2},"status":"passed","severity":"normal"},{"uid":"2cdf235c18a252b3","name":"should update a contingency plan successfully","time":{"start":1747766939282,"stop":1747766939287,"duration":5},"status":"passed","severity":"normal"},{"uid":"44fa882ddf6826ed","name":"should fetch tours and index them","time":{"start":1747766939957,"stop":1747766939962,"duration":5},"status":"passed","severity":"normal"},{"uid":"7868ce32a56ec990","name":"should return a successful response with tour data","time":{"start":1747766941541,"stop":1747766941543,"duration":2},"status":"passed","severity":"normal"},{"uid":"2663a52bf3ec05b4","name":"should calculate totalLikes from itineraries correctly","time":{"start":1747766939654,"stop":1747766939656,"duration":2},"status":"passed","severity":"normal"},{"uid":"5e337fa9a08cb33a","name":"should link a user account with Firebase and return success","time":{"start":1747766941168,"stop":1747766941171,"duration":3},"status":"passed","severity":"normal"},{"uid":"ceb983d0a3f06f8c","name":"should properly handle user without any itineraries","time":{"start":1747766939567,"stop":1747766939569,"duration":2},"status":"passed","severity":"normal"},{"uid":"3dd8bd241499184f","name":"should calculate scheduled date correctly","time":{"start":1747766940303,"stop":1747766940307,"duration":4},"status":"passed","severity":"normal"},{"uid":"23647ba3b6b4ab77","name":"should save a public itinerary for the user","time":{"start":1747766939419,"stop":1747766939422,"duration":3},"status":"passed","severity":"normal"},{"uid":"e8478bd84ed90455","name":"should return list of tour views ordered by viewedAt desc","time":{"start":1747766940144,"stop":1747766940158,"duration":14},"status":"passed","severity":"normal"},{"uid":"f2f5a095e7c141c4","name":"should select a contingency plan and unselect others","time":{"start":1747766939272,"stop":1747766939276,"duration":4},"status":"passed","severity":"normal"},{"uid":"b1d43dce5fb6cfc1","name":"should successfully change user email after verification","time":{"start":1747766939732,"stop":1747766939737,"duration":5},"status":"passed","severity":"normal"},{"uid":"e0bfa55c8ad8412f","name":"should be defined","time":{"start":1747766940980,"stop":1747766941009,"duration":29},"status":"passed","severity":"normal"},{"uid":"b2996b766f4e3e19","name":"should call service.validateLogin with correct ticketId","time":{"start":1747766942597,"stop":1747766942599,"duration":2},"status":"passed","severity":"normal"},{"uid":"d178ac39b09562ad","name":"should handle undefined tour gracefully","time":{"start":1747766939993,"stop":1747766939995,"duration":2},"status":"passed","severity":"normal"},{"uid":"caee3f74c1a6e8ab","name":"should not create index if it already exists","time":{"start":1747766939918,"stop":1747766939921,"duration":3},"status":"passed","severity":"normal"},{"uid":"3a5807fbddefc549","name":"should pass user object directly to service","time":{"start":1747766939570,"stop":1747766939574,"duration":4},"status":"passed","severity":"normal"},{"uid":"d96632d3a06aee07","name":"should throw BadRequestException if user does not exist","time":{"start":1747766938696,"stop":1747766938699,"duration":3},"status":"passed","severity":"normal"},{"uid":"41503b3b795e2fba","name":"should call authService.sendPasswordResetVerification with correct data","time":{"start":1747766941123,"stop":1747766941126,"duration":3},"status":"passed","severity":"normal"},{"uid":"296f7159b221463a","name":"should delete oldest ticket when there are 5 or more existing tickets","time":{"start":1747766939711,"stop":1747766939714,"duration":3},"status":"passed","severity":"normal"},{"uid":"65453387374c3ab0","name":"should return completed itineraries with response formatting","time":{"start":1747766939340,"stop":1747766939343,"duration":3},"status":"passed","severity":"normal"},{"uid":"6bad41be6a63bbb2","name":"should handle missing price range data","time":{"start":1747766942166,"stop":1747766942167,"duration":1},"status":"passed","severity":"normal"},{"uid":"cdea8091129a06d3","name":"should propagate errors from _verifyChangeEmailTicket","time":{"start":1747766939738,"stop":1747766939740,"duration":2},"status":"passed","severity":"normal"},{"uid":"ff346f6504aa794c","name":"should throw BadRequestException when no sections are provided","time":{"start":1747766939000,"stop":1747766939005,"duration":5},"status":"passed","severity":"normal"},{"uid":"2c4688e8fb46219a","name":"should throw BadRequestException when duplicate section numbers are provided","time":{"start":1747766938908,"stop":1747766938911,"duration":3},"status":"passed","severity":"normal"},{"uid":"5f2f4bbcda0eba6b","name":"should update user profile with valid data","time":{"start":1747766939681,"stop":1747766939684,"duration":3},"status":"passed","severity":"normal"},{"uid":"3fc90e89a2b3b26a","name":"should throw an error for invalid page number","time":{"start":1747766939083,"stop":1747766939086,"duration":3},"status":"passed","severity":"normal"},{"uid":"7d6a4c6a6c947742","name":"should return the correct start and end timestamps for the previous month","time":{"start":1747766941583,"stop":1747766941586,"duration":3},"status":"passed","severity":"normal"},{"uid":"7f8a4310d5685680","name":"should throw NotFoundException when contingency plan does not exist","time":{"start":1747766939265,"stop":1747766939268,"duration":3},"status":"passed","severity":"normal"},{"uid":"b63bea269e037da3","name":"should correctly calculate totalDestinations when sections is empty","time":{"start":1747766939666,"stop":1747766939669,"duration":3},"status":"passed","severity":"normal"},{"uid":"fa97917bfc8c4d1a","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747766939128,"stop":1747766939131,"duration":3},"status":"passed","severity":"normal"},{"uid":"d1c121e39c19e5be","name":"should handle Discord webhook errors gracefully","time":{"start":1747766941589,"stop":1747766941590,"duration":1},"status":"passed","severity":"normal"},{"uid":"7b3ad48dee1e3ce9","name":"should parse JSON even if AI returns extra text","time":{"start":1747766941795,"stop":1747766941798,"duration":3},"status":"passed","severity":"normal"},{"uid":"169b955b45cb526e","name":"should throw BadRequestException if user does not have the itinerary saved","time":{"start":1747766939454,"stop":1747766939456,"duration":2},"status":"passed","severity":"normal"},{"uid":"f54ecb8dc060ee36","name":"should still return even if user has not liked any itinerary on the list","time":{"start":1747766939460,"stop":1747766939462,"duration":2},"status":"passed","severity":"normal"},{"uid":"93a68bc653368d3b","name":"should throw BadRequestException if requesting too fast","time":{"start":1747766938499,"stop":1747766938503,"duration":4},"status":"passed","severity":"normal"},{"uid":"696769d2f9cf60ac","name":"should return tour with null itinerary if itinerary not found","time":{"start":1747766940216,"stop":1747766940218,"duration":2},"status":"passed","severity":"normal"},{"uid":"82d3af41b7d0aab1","name":"should throw NotFoundException if the pending invitation does not exist","time":{"start":1747766939168,"stop":1747766939171,"duration":3},"status":"passed","severity":"normal"},{"uid":"60e53c7c43f5767d","name":"should throw BadRequestException when there are already 2 contingency plans","time":{"start":1747766939231,"stop":1747766939240,"duration":9},"status":"passed","severity":"normal"},{"uid":"ba773c2d7c3dc08a","name":"should handle service errors correctly","time":{"start":1747766939262,"stop":1747766939268,"duration":6},"status":"passed","severity":"normal"},{"uid":"719b5bfd9dca3807","name":"should add isPublished filter when no other filters","time":{"start":1747766939977,"stop":1747766939979,"duration":2},"status":"passed","severity":"normal"},{"uid":"aca3d70891b54cc4","name":"should return an empty array when there are no completed itineraries","time":{"start":1747766939120,"stop":1747766939123,"duration":3},"status":"passed","severity":"normal"},{"uid":"2831e5d4dbcdf7aa","name":"should add a published itinerary to the index","time":{"start":1747766939982,"stop":1747766939985,"duration":3},"status":"passed","severity":"normal"},{"uid":"b92b3e82d0538c07","name":"should handle user not found","time":{"start":1747766939751,"stop":1747766939757,"duration":6},"status":"passed","severity":"normal"},{"uid":"2cf08a9fb54a82f","name":"should call updatePhotoProfile service with correct parameters","time":{"start":1747766941060,"stop":1747766941062,"duration":2},"status":"passed","severity":"normal"},{"uid":"8f5607b9c78da16c","name":"should handle optional fields in the DTO correctly","time":{"start":1747766939227,"stop":1747766939235,"duration":8},"status":"passed","severity":"normal"},{"uid":"e8d55ba56f03913a","name":"should throw InternalServerErrorException on AI error","time":{"start":1747766941798,"stop":1747766941807,"duration":9},"status":"passed","severity":"normal"},{"uid":"998009d0ffeea4a7","name":"should handle errors from service and propagate them","time":{"start":1747766939563,"stop":1747766939566,"duration":3},"status":"passed","severity":"normal"},{"uid":"3b6a55b2cca85e7a","name":"should correctly count LOCATION blocks","time":{"start":1747766939116,"stop":1747766939119,"duration":3},"status":"passed","severity":"normal"},{"uid":"90e6fff75a637775","name":"should not create route when routeToNext is undefined or null","time":{"start":1747766938917,"stop":1747766938921,"duration":4},"status":"passed","severity":"normal"},{"uid":"a9ad1c6dfe120a41","name":"should call service.getReferralCode with the correct userId","time":{"start":1747766942600,"stop":1747766942602,"duration":2},"status":"passed","severity":"normal"},{"uid":"dd5b2a0102dde5de","name":"should return all itineraries with default parameters","time":{"start":1747766939249,"stop":1747766939255,"duration":6},"status":"passed","severity":"normal"},{"uid":"5cc7c96310b61d88","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747766939396,"stop":1747766939399,"duration":3},"status":"passed","severity":"normal"},{"uid":"cebd99d089890db3","name":"should search itineraries with filters","time":{"start":1747766939345,"stop":1747766939351,"duration":6},"status":"passed","severity":"normal"},{"uid":"4e67306e5a1daed7","name":"should handle user with no liked itineraries","time":{"start":1747766939676,"stop":1747766939678,"duration":2},"status":"passed","severity":"normal"},{"uid":"fc955f6f782d00f7","name":"should successfully generate a change email ticket","time":{"start":1747766939700,"stop":1747766939703,"duration":3},"status":"passed","severity":"normal"},{"uid":"de8fbd07f35b1239","name":"should search itineraries with combined filters and custom sorting","time":{"start":1747766939481,"stop":1747766939483,"duration":2},"status":"passed","severity":"normal"},{"uid":"697d3bc17ab3be7a","name":"should send login email if user exists","time":{"start":1747766941058,"stop":1747766941061,"duration":3},"status":"passed","severity":"normal"},{"uid":"9fbe55afab011a7e","name":"should call authService.register with correct data","time":{"start":1747766941108,"stop":1747766941111,"duration":3},"status":"passed","severity":"normal"},{"uid":"b519ea5aaf234b06","name":"should validate login ticket and return access token","time":{"start":1747766941064,"stop":1747766941069,"duration":5},"status":"passed","severity":"normal"},{"uid":"3074e728c3db89ee","name":"should throw BadRequestException when user is not authorized","time":{"start":1747766940246,"stop":1747766940248,"duration":2},"status":"passed","severity":"normal"},{"uid":"63c69a5909128bfb","name":"should return access and refresh tokens on successful login","time":{"start":1747766941050,"stop":1747766941080,"duration":30},"status":"passed","severity":"normal"},{"uid":"4afafc3334a93c11","name":"should search itineraries with custom pagination","time":{"start":1747766939342,"stop":1747766939344,"duration":2},"status":"passed","severity":"normal"},{"uid":"1cd0669609cea300","name":"should only update specified fields","time":{"start":1747766939684,"stop":1747766939689,"duration":5},"status":"passed","severity":"normal"},{"uid":"9f8be957397eb50b","name":"should calculate days count from date range","time":{"start":1747766939965,"stop":1747766939967,"duration":2},"status":"passed","severity":"normal"},{"uid":"22b963d2bfc09164","name":"should successfully verify a valid ticket","time":{"start":1747766939715,"stop":1747766939721,"duration":6},"status":"passed","severity":"normal"},{"uid":"7d122d085472094","name":"should throw ForbiddenException if user does not own the itinerary","time":{"start":1747766939252,"stop":1747766939255,"duration":3},"status":"passed","severity":"normal"},{"uid":"ae18fed15d3eea1","name":"should update only the fields provided in the DTO","time":{"start":1747766941021,"stop":1747766941025,"duration":4},"status":"passed","severity":"normal"},{"uid":"d7631c87f97d577f","name":"should throw NotFoundException if itinerary is not found","time":{"start":1747766939188,"stop":1747766939192,"duration":4},"status":"passed","severity":"normal"},{"uid":"762ee144a3bfdef3","name":"should handle search with no results","time":{"start":1747766939359,"stop":1747766939361,"duration":2},"status":"passed","severity":"normal"},{"uid":"f8c28c1ea3d54cfb","name":"should return a string indicating a payment was updated","time":{"start":1747766942942,"stop":1747766942944,"duration":2},"status":"passed","severity":"normal"},{"uid":"2ffceadcf7181289","name":"should create an itinerary reminder and schedule the cron job","time":{"start":1747766941677,"stop":1747766941690,"duration":13},"status":"passed","severity":"normal"},{"uid":"fe5aeb3cef6a7521","name":"should be defined","time":{"start":1747766938732,"stop":1747766938859,"duration":127},"status":"passed","severity":"normal"},{"uid":"d30c3028390c7872","name":"should return empty array when user has no transactions","time":{"start":1747766941070,"stop":1747766941072,"duration":2},"status":"passed","severity":"normal"},{"uid":"7979dbe8f0057f94","name":"should handle empty createdBlocks and use default TRANSPORT_MODE.DRIVE when transportMode is not provided","time":{"start":1747766938931,"stop":1747766938935,"duration":4},"status":"passed","severity":"normal"},{"uid":"f276ef5c0e678793","name":"should throw ForbiddenException if user is not authorized","time":{"start":1747766939422,"stop":1747766939424,"duration":2},"status":"passed","severity":"normal"},{"uid":"352a8c07a0561039","name":"should return success response when email change request is successful","time":{"start":1747766941030,"stop":1747766941040,"duration":10},"status":"passed","severity":"normal"},{"uid":"a3375303804b2c9","name":"should throw BadRequestException if last ticket is still valid","time":{"start":1747766941099,"stop":1747766941102,"duration":3},"status":"passed","severity":"normal"},{"uid":"3d88129ee8cc7b24","name":"should successfully buy a tour ticket","time":{"start":1747766940220,"stop":1747766940226,"duration":6},"status":"passed","severity":"normal"},{"uid":"5e22ec9ad4fbb16d","name":"should throw NotFoundException when ticket not found","time":{"start":1747766940242,"stop":1747766940245,"duration":3},"status":"passed","severity":"normal"},{"uid":"130676b566550e5e","name":"should handle string dates","time":{"start":1747766939970,"stop":1747766939972,"duration":2},"status":"passed","severity":"normal"},{"uid":"fade2a93c336ffa1","name":"should throw BadRequestException if passwords do not match","time":{"start":1747766938715,"stop":1747766938718,"duration":3},"status":"passed","severity":"normal"},{"uid":"7a12aea9afc883cf","name":"should create a contingency plan with sections and blocks","time":{"start":1747766939244,"stop":1747766939247,"duration":3},"status":"passed","severity":"normal"},{"uid":"a504ade497324bfa","name":"should update user password and send success password reset email if verification is successful","time":{"start":1747766938710,"stop":1747766938714,"duration":4},"status":"passed","severity":"normal"},{"uid":"2fff1357f4b41d8b","name":"should transform page to a number","time":{"start":1747766943046,"stop":1747766943049,"duration":3},"status":"passed","severity":"normal"},{"uid":"b04e2480a2efab8f","name":"should throw UnauthorizedException if ticket is expired","time":{"start":1747766941086,"stop":1747766941089,"duration":3},"status":"passed","severity":"normal"},{"uid":"373b361a5e76a648","name":"should throw InternalServerErrorException if Firebase verification fails","time":{"start":1747766938760,"stop":1747766938763,"duration":3},"status":"passed","severity":"normal"},{"uid":"a53fa9801d94b564","name":"should throw BadRequestException if user does not exist","time":{"start":1747766938494,"stop":1747766938498,"duration":4},"status":"passed","severity":"normal"},{"uid":"ffffb50990724339","name":"should throw NotFoundException if user does not exist","time":{"start":1747766938731,"stop":1747766938734,"duration":3},"status":"passed","severity":"normal"},{"uid":"4aa830feb9ac487a","name":"should create a properly formatted prompt with all data types","time":{"start":1747766941807,"stop":1747766941816,"duration":9},"status":"passed","severity":"normal"},{"uid":"6e4b9d995666bdaf","name":"should include all transaction fields in the result","time":{"start":1747766939769,"stop":1747766939772,"duration":3},"status":"passed","severity":"normal"},{"uid":"e19dcca1ea0ffecc","name":"should throw other errors","time":{"start":1747766940002,"stop":1747766940004,"duration":2},"status":"passed","severity":"normal"},{"uid":"32c49d5c0ec5abc","name":"should handle search with complex filters and sorting","time":{"start":1747766939355,"stop":1747766939358,"duration":3},"status":"passed","severity":"normal"},{"uid":"14e32884cb30e8c2","name":"should create a payment","time":{"start":1747766942849,"stop":1747766942852,"duration":3},"status":"passed","severity":"normal"},{"uid":"88b036ed00e0d0b8","name":"should return new access and refresh tokens","time":{"start":1747766941091,"stop":1747766941095,"duration":4},"status":"passed","severity":"normal"},{"uid":"a7681586e7fc2a7a","name":"should be defined","time":{"start":1747766942656,"stop":1747766942666,"duration":10},"status":"passed","severity":"normal"},{"uid":"95346338c9131188","name":"should throw a BadRequestException on jobs with date in past","time":{"start":1747766940299,"stop":1747766940302,"duration":3},"status":"passed","severity":"normal"},{"uid":"47ae93da7ec789f9","name":"should return success response when password change is successful","time":{"start":1747766941048,"stop":1747766941050,"duration":2},"status":"passed","severity":"normal"},{"uid":"436acb4f7f6e460c","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747766939031,"stop":1747766939034,"duration":3},"status":"passed","severity":"normal"},{"uid":"d6102d46078b9250","name":"should remove a user from an itinerary and return a formatted response","time":{"start":1747766939387,"stop":1747766939389,"duration":2},"status":"passed","severity":"normal"},{"uid":"7a22186ad36917f2","name":"should be defined","time":{"start":1747766942927,"stop":1747766942936,"duration":9},"status":"passed","severity":"normal"},{"uid":"7460de1cea5ba4fa","name":"should return an empty array if there are no tags","time":{"start":1747766939148,"stop":1747766939150,"duration":2},"status":"passed","severity":"normal"},{"uid":"d4c9cc08b5b6913b","name":"should return place details when placeId is valid","time":{"start":1747766942779,"stop":1747766942791,"duration":12},"status":"passed","severity":"normal"},{"uid":"9c011286d01399e5","name":"should log an error and return if UMAMI_DISCORD_WEBHOOK_URL is not set","time":{"start":1747766941590,"stop":1747766941591,"duration":1},"status":"passed","severity":"normal"},{"uid":"1d15f6f4a97adbc6","name":"should throw ForbiddenException when user is not the owner of the itinerary","time":{"start":1747766939141,"stop":1747766939145,"duration":4},"status":"passed","severity":"normal"},{"uid":"38135b2d178bbe7d","name":"should handle duration with durationType correctly","time":{"start":1747766940193,"stop":1747766940195,"duration":2},"status":"passed","severity":"normal"},{"uid":"aef203e9a57d80c6","name":"should find itineraries by tags from user's latest and recently viewed itineraries","time":{"start":1747766939466,"stop":1747766939472,"duration":6},"status":"passed","severity":"normal"},{"uid":"5154d1c15b74ee7a","name":"should handle user with no itineraries","time":{"start":1747766939664,"stop":1747766939666,"duration":2},"status":"passed","severity":"normal"},{"uid":"1901ab4bbcbf44e6","name":"should throw BadRequestException if email is the same as current email","time":{"start":1747766939694,"stop":1747766939697,"duration":3},"status":"passed","severity":"normal"},{"uid":"9fc1b31c0d31ca29","name":"should throw BadRequestException if user already saved the itinerary","time":{"start":1747766939438,"stop":1747766939441,"duration":3},"status":"passed","severity":"normal"},{"uid":"4a410eb7cb06be29","name":"should return an array of payments","time":{"start":1747766942852,"stop":1747766942854,"duration":2},"status":"passed","severity":"normal"},{"uid":"1f5022e226d7d2e1","name":"should be defined","time":{"start":1747766942328,"stop":1747766942339,"duration":11},"status":"passed","severity":"normal"},{"uid":"1d3b9e8d25a0f9d9","name":"should update an itinerary with defaults for deleted/missing fields","time":{"start":1747766938952,"stop":1747766938956,"duration":4},"status":"passed","severity":"normal"},{"uid":"2c7bb8fc9e1e2851","name":"should throw NotFoundException if associated itinerary's reminder does not exist","time":{"start":1747766940274,"stop":1747766940276,"duration":2},"status":"passed","severity":"normal"},{"uid":"4f939fb7fde112df","name":"should be defined","time":{"start":1747766942425,"stop":1747766942437,"duration":12},"status":"passed","severity":"normal"},{"uid":"e127656095a3c42e","name":"should handle errors if fetch fails","time":{"start":1747766941120,"stop":1747766941123,"duration":3},"status":"passed","severity":"normal"},{"uid":"72ed6b4c30f60ff2","name":"should clear refreshToken cookie","time":{"start":1747766941111,"stop":1747766941117,"duration":6},"status":"passed","severity":"normal"},{"uid":"8a049685558d7380","name":"should update an itinerary and return a formatted response","time":{"start":1747766939346,"stop":1747766939349,"duration":3},"status":"passed","severity":"normal"},{"uid":"704278e4a4882b4d","name":"should throw NotFoundException if verification code is not found","time":{"start":1747766938699,"stop":1747766938703,"duration":4},"status":"passed","severity":"normal"},{"uid":"f4e298dd525d9c88","name":"should unpublish the itinerary and remove from search index","time":{"start":1747766939320,"stop":1747766939330,"duration":10},"status":"passed","severity":"normal"},{"uid":"bea0e3f0aa9f5bac","name":"should throw an error if placeId is not provided","time":{"start":1747766942140,"stop":1747766942154,"duration":14},"status":"passed","severity":"normal"},{"uid":"23a526fbdbcddd6d","name":"should throw BadRequestException when ticket has expired","time":{"start":1747766938523,"stop":1747766938526,"duration":3},"status":"passed","severity":"normal"},{"uid":"70d7fd8e6972f8b4","name":"should return a contingency plan with correctly mapped section numbers","time":{"start":1747766939255,"stop":1747766939264,"duration":9},"status":"passed","severity":"normal"},{"uid":"586e3033de9f5ff7","name":"should pass errors from service to the caller","time":{"start":1747766939550,"stop":1747766939552,"duration":2},"status":"passed","severity":"normal"},{"uid":"2651f648725575c9","name":"should return transaction history when getTransactionHistory is called with a valid user","time":{"start":1747766941065,"stop":1747766941069,"duration":4},"status":"passed","severity":"normal"},{"uid":"5a4c59efe63d3d7a","name":"should update viewedAt if tour already viewed","time":{"start":1747766940160,"stop":1747766940163,"duration":3},"status":"passed","severity":"normal"},{"uid":"7d48640512d88ea4","name":"should throw BadRequestException if user was created recently and is not confirmed","time":{"start":1747766938478,"stop":1747766938483,"duration":5},"status":"passed","severity":"normal"},{"uid":"47dc66b3eb0537cd","name":"should return list of countries","time":{"start":1747766942918,"stop":1747766942920,"duration":2},"status":"passed","severity":"normal"},{"uid":"6fb887986d95be82","name":"should throw ForbiddenException if user is not authorized","time":{"start":1747766939195,"stop":1747766939201,"duration":6},"status":"passed","severity":"normal"},{"uid":"d6501e61675d7abd","name":"should handle when no tags are found in combined itineraries","time":{"start":1747766939481,"stop":1747766939488,"duration":7},"status":"passed","severity":"normal"},{"uid":"167551efcd92a0c","name":"should update user and send registration email if verification is successful","time":{"start":1747766938684,"stop":1747766938691,"duration":7},"status":"passed","severity":"normal"},{"uid":"8c7d05f8368507fe","name":"should return country details based on placeId","time":{"start":1747766942343,"stop":1747766942344,"duration":1},"status":"passed","severity":"normal"},{"uid":"e87b39edaf39bcb0","name":"should unsave the itinerary for the user","time":{"start":1747766939547,"stop":1747766939549,"duration":2},"status":"passed","severity":"normal"},{"uid":"1c07498735a9a81e","name":"should return a specific contingency plan","time":{"start":1747766939425,"stop":1747766939427,"duration":2},"status":"passed","severity":"normal"},{"uid":"784dc58290d44ebe","name":"should return list of cities","time":{"start":1747766942923,"stop":1747766942925,"duration":2},"status":"passed","severity":"normal"},{"uid":"414dac219c52972b","name":"should throw BadRequestException if email is not registered","time":{"start":1747766941061,"stop":1747766941064,"duration":3},"status":"passed","severity":"normal"},{"uid":"1d85724c044bd00b","name":"should return country code response","time":{"start":1747766942345,"stop":1747766942353,"duration":8},"status":"passed","severity":"normal"},{"uid":"bda0e3c5ef43b52e","name":"should handle various duration filters correctly","time":{"start":1747766940183,"stop":1747766940186,"duration":3},"status":"passed","severity":"normal"},{"uid":"2668037503fe2bb9","name":"should return itineraries shared with the user","time":{"start":1747766939093,"stop":1747766939097,"duration":4},"status":"passed","severity":"normal"},{"uid":"d6762c94b408e168","name":"should throw ForbiddenException when user is not the owner","time":{"start":1747766939016,"stop":1747766939019,"duration":3},"status":"passed","severity":"normal"},{"uid":"db7588936fef791f","name":"should throw UnauthorizedException when provided with invalid API key","time":{"start":1747766941959,"stop":1747766941962,"duration":3},"status":"passed","severity":"normal"},{"uid":"796f3e70665f3ff6","name":"should correctly calculate totalDestinations when sections is empty","time":{"start":1747766939679,"stop":1747766939681,"duration":2},"status":"passed","severity":"normal"},{"uid":"1723be223f0d37b6","name":"should return an empty array of itinerary reminders if none found","time":{"start":1747766940268,"stop":1747766940271,"duration":3},"status":"passed","severity":"normal"},{"uid":"5cc8dbde96d7e5a8","name":"should return success on successful Google registration","time":{"start":1747766941159,"stop":1747766941162,"duration":3},"status":"passed","severity":"normal"},{"uid":"de157e946a2bd573","name":"should duplicate an itinerary contingency","time":{"start":1747766939403,"stop":1747766939406,"duration":3},"status":"passed","severity":"normal"},{"uid":"f1e48d3b4e612313","name":"should return itineraries recommended based on user tags","time":{"start":1747766939558,"stop":1747766939560,"duration":2},"status":"passed","severity":"normal"},{"uid":"dd2d335e1fadc1a5","name":"should handle service errors properly","time":{"start":1747766942795,"stop":1747766942798,"duration":3},"status":"passed","severity":"normal"},{"uid":"1f7270fdc1c2d0ac","name":"should throw NotFoundException if referral code is not found","time":{"start":1747766941051,"stop":1747766941055,"duration":4},"status":"passed","severity":"normal"},{"uid":"90941a1b99baad","name":"should call changePassword service with correct parameters","time":{"start":1747766941044,"stop":1747766941047,"duration":3},"status":"passed","severity":"normal"},{"uid":"adefa01baf4c77c2","name":"should select a contingency plan and return a formatted response","time":{"start":1747766939437,"stop":1747766939440,"duration":3},"status":"passed","severity":"normal"},{"uid":"48bcf3af9b16eb2c","name":"should return price range when API call is successful","time":{"start":1747766942164,"stop":1747766942165,"duration":1},"status":"passed","severity":"normal"},{"uid":"8e3a99ec3001716b","name":"should throw BadRequestException if passwords do not match","time":{"start":1747766938527,"stop":1747766938530,"duration":3},"status":"passed","severity":"normal"},{"uid":"f4d19a8b93e7c0fb","name":"should return a string indicating all payments were returned","time":{"start":1747766942939,"stop":1747766942941,"duration":2},"status":"passed","severity":"normal"},{"uid":"201551e801063c80","name":"should throw UnauthorizedException if user is not found","time":{"start":1747766938253,"stop":1747766938399,"duration":146},"status":"passed","severity":"normal"},{"uid":"27d0e9f6619656a9","name":"should handle negative page numbers","time":{"start":1747766939042,"stop":1747766939045,"duration":3},"status":"passed","severity":"normal"},{"uid":"acfc91f5afd0b87f","name":"should return empty data when there are no shared itineraries","time":{"start":1747766939274,"stop":1747766939289,"duration":15},"status":"passed","severity":"normal"},{"uid":"cc62a7339808e512","name":"should search itineraries with default parameters","time":{"start":1747766939338,"stop":1747766939341,"duration":3},"status":"passed","severity":"normal"},{"uid":"790bd3068821f5c9","name":"should throw NotFoundException when tour is not found","time":{"start":1747766940232,"stop":1747766940235,"duration":3},"status":"passed","severity":"normal"},{"uid":"fc03fff28743413f","name":"should get transaction status","time":{"start":1747766942450,"stop":1747766942452,"duration":2},"status":"passed","severity":"normal"},{"uid":"faf92c3ab7082639","name":"should throw BadRequestException when start date is after end date","time":{"start":1747766938898,"stop":1747766938904,"duration":6},"status":"passed","severity":"normal"},{"uid":"d91c8b218e69bb83","name":"should handle when section is not found in the created itinerary","time":{"start":1747766938935,"stop":1747766938938,"duration":3},"status":"passed","severity":"normal"},{"uid":"6e8fe5cf5d6e024a","name":"should search itineraries with query and page parameters","time":{"start":1747766939465,"stop":1747766939467,"duration":2},"status":"passed","severity":"normal"},{"uid":"b39ece0338ebb129","name":"should delete a tour from the index","time":{"start":1747766940005,"stop":1747766940007,"duration":2},"status":"passed","severity":"normal"},{"uid":"1ecc554a9cbf3720","name":"should send verification email if user exists","time":{"start":1747766938508,"stop":1747766938511,"duration":3},"status":"passed","severity":"normal"},{"uid":"56fffa5cc80be922","name":"should return \"Hello World!\"","time":{"start":1747766943071,"stop":1747766943076,"duration":5},"status":"passed","severity":"normal"},{"uid":"5a8dad593a991365","name":"should allow page to be optional","time":{"start":1747766943051,"stop":1747766943052,"duration":1},"status":"passed","severity":"normal"},{"uid":"edc6aac9795e249f","name":"should throw NotFoundException if contingency not found","time":{"start":1747766939440,"stop":1747766939442,"duration":2},"status":"passed","severity":"normal"},{"uid":"cc13cec54b0f8699","name":"should throw NotFoundException when contingency plan does not exist","time":{"start":1747766939288,"stop":1747766939291,"duration":3},"status":"passed","severity":"normal"},{"uid":"3b1bb7ed256be185","name":"should return itineraries successfully","time":{"start":1747766939323,"stop":1747766939326,"duration":3},"status":"passed","severity":"normal"},{"uid":"c33af95a4badb0ca","name":"should remove a payment","time":{"start":1747766942860,"stop":1747766942871,"duration":11},"status":"passed","severity":"normal"},{"uid":"f3636ef39d30868","name":"should return the authenticated user","time":{"start":1747766941118,"stop":1747766941123,"duration":5},"status":"passed","severity":"normal"},{"uid":"a7fa81ae6ba62167","name":"should throw NotFoundException if itinerary not found","time":{"start":1747766939417,"stop":1747766939421,"duration":4},"status":"passed","severity":"normal"},{"uid":"7649e1f83dd9b0a2","name":"should throw ForbiddenException if user is not authorized","time":{"start":1747766939449,"stop":1747766939451,"duration":2},"status":"passed","severity":"normal"},{"uid":"3cf459e3a925976a","name":"should return 0 when there are no contingency plans","time":{"start":1747766939217,"stop":1747766939222,"duration":5},"status":"passed","severity":"normal"},{"uid":"365eb5ad797509a6","name":"should throw UnauthorizedException if token has expired","time":{"start":1747766942028,"stop":1747766942031,"duration":3},"status":"passed","severity":"normal"},{"uid":"5aa91ffc26993cb1","name":"should throw NotFoundException if user is not found during Google login","time":{"start":1747766941156,"stop":1747766941159,"duration":3},"status":"passed","severity":"normal"},{"uid":"4f5e27250d8f6ece","name":"should return an array of itinerary reminders","time":{"start":1747766940264,"stop":1747766940266,"duration":2},"status":"passed","severity":"normal"},{"uid":"35746f872e163b7c","name":"should be defined","time":{"start":1747766941652,"stop":1747766941675,"duration":23},"status":"passed","severity":"normal"},{"uid":"376e8038047eedba","name":"should return a single payment","time":{"start":1747766942855,"stop":1747766942857,"duration":2},"status":"passed","severity":"normal"},{"uid":"d0c88425a5a1f619","name":"should search tours with default parameters","time":{"start":1747766940175,"stop":1747766940178,"duration":3},"status":"passed","severity":"normal"},{"uid":"8b7a70ccd679d683","name":"should search tours with default parameters","time":{"start":1747766941518,"stop":1747766941533,"duration":15},"status":"passed","severity":"normal"},{"uid":"d46bff698b05d053","name":"should handle document not found gracefully","time":{"start":1747766940007,"stop":1747766940009,"duration":2},"status":"passed","severity":"normal"},{"uid":"aeb92fc772d7b1f0","name":"should throw InternalServerErrorException if email is missing","time":{"start":1747766938757,"stop":1747766938760,"duration":3},"status":"passed","severity":"normal"},{"uid":"98228347e6af12cc","name":"should schedule a sendEmail job and verify it runs","time":{"start":1747766940289,"stop":1747766940295,"duration":6},"status":"passed","severity":"normal"},{"uid":"d64088f84e5d33ad","name":"should call remove() in the service and delete an itinerary","time":{"start":1747766939353,"stop":1747766939356,"duration":3},"status":"passed","severity":"normal"},{"uid":"4cbdd8d2acdf3e22","name":"should return empty list if user has no itineraries","time":{"start":1747766939050,"stop":1747766939055,"duration":5},"status":"passed","severity":"normal"},{"uid":"a1cb83da86679d78","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747766939412,"stop":1747766939415,"duration":3},"status":"passed","severity":"normal"},{"uid":"d821f01c5a6ae823","name":"should return list of countries","time":{"start":1747766942339,"stop":1747766942341,"duration":2},"status":"passed","severity":"normal"},{"uid":"83a24231f40a633d","name":"should return a user profile by id","time":{"start":1747766939641,"stop":1747766939645,"duration":4},"status":"passed","severity":"normal"},{"uid":"3c58b8104bbcd3a4","name":"should call service and return response","time":{"start":1747766939515,"stop":1747766939518,"duration":3},"status":"passed","severity":"normal"},{"uid":"30ca8827cc94c0a","name":"should throw UnauthorizedException if password is incorrect","time":{"start":1747766941087,"stop":1747766941091,"duration":4},"status":"passed","severity":"normal"},{"uid":"f63a03c9ed3ee081","name":"should create an itinerary without tags","time":{"start":1747766939220,"stop":1747766939227,"duration":7},"status":"passed","severity":"normal"},{"uid":"5bb8cfc9fe0892fd","name":"should duplicate an itinerary with default fields succesfully","time":{"start":1747766939392,"stop":1747766939395,"duration":3},"status":"passed","severity":"normal"},{"uid":"c8050cf8835667f2","name":"should be defined","time":{"start":1747766941553,"stop":1747766941570,"duration":17},"status":"passed","severity":"normal"},{"uid":"42c39eb86caa849d","name":"should successfully generate and send verification code","time":{"start":1747766939690,"stop":1747766939693,"duration":3},"status":"passed","severity":"normal"},{"uid":"c92cab320f0f055f","name":"should be defined","time":{"start":1747766941768,"stop":1747766941791,"duration":23},"status":"passed","severity":"normal"},{"uid":"277e66f64e330eb","name":"should return itinerary likes when getListItineraryLikes is called with a valid ID","time":{"start":1747766941014,"stop":1747766941015,"duration":1},"status":"passed","severity":"normal"},{"uid":"5b5d954bfe6775e5","name":"should create routes across multiple sections","time":{"start":1747766938922,"stop":1747766938926,"duration":4},"status":"passed","severity":"normal"},{"uid":"74ac22a7e9ca2471","name":"should return an array of tags","time":{"start":1747766939145,"stop":1747766939147,"duration":2},"status":"passed","severity":"normal"},{"uid":"be7d1b5712fc153a","name":"should be defined","time":{"start":1747766942575,"stop":1747766942588,"duration":13},"status":"passed","severity":"normal"},{"uid":"1c600b7a59420811","name":"should reschedule itinerary reminders on server restart","time":{"start":1747766940235,"stop":1747766940241,"duration":6},"status":"passed","severity":"normal"},{"uid":"4847c578cfe4130","name":"should create a new user if user does not exist","time":{"start":1747766938486,"stop":1747766938494,"duration":8},"status":"passed","severity":"normal"},{"uid":"58fb2ed7ba22c722","name":"should throw NotFoundException when tags do not exist","time":{"start":1747766938912,"stop":1747766938916,"duration":4},"status":"passed","severity":"normal"},{"uid":"d6aabf9f1560fa0e","name":"should be defined","time":{"start":1747766940201,"stop":1747766940234,"duration":33},"status":"passed","severity":"normal"},{"uid":"50c276038e0859ba","name":"should fetch analytics data and send to Discord","time":{"start":1747766941571,"stop":1747766941577,"duration":6},"status":"passed","severity":"normal"},{"uid":"73b5678f0154648a","name":"should be defined","time":{"start":1747766941481,"stop":1747766941510,"duration":29},"status":"passed","severity":"normal"},{"uid":"7c1890e515743d94","name":"should throw ConflictException if itinerary reminder already exist","time":{"start":1747766940261,"stop":1747766940263,"duration":2},"status":"passed","severity":"normal"},{"uid":"eac28b40c5cf2e14","name":"should throw NotFound if user email is not found to accept the invitation","time":{"start":1747766939175,"stop":1747766939190,"duration":15},"status":"passed","severity":"normal"},{"uid":"be1af152947bef5e","name":"should throw BadRequestException when no sections are provided","time":{"start":1747766938904,"stop":1747766938908,"duration":4},"status":"passed","severity":"normal"},{"uid":"801db414b9efea5e","name":"should throw an error for invalid page number","time":{"start":1747766939102,"stop":1747766939105,"duration":3},"status":"passed","severity":"normal"},{"uid":"41c0b0c24f349786","name":"should throw BadRequestException if already published","time":{"start":1747766939537,"stop":1747766939540,"duration":3},"status":"passed","severity":"normal"},{"uid":"33f48c917668f2f6","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747766938970,"stop":1747766938973,"duration":3},"status":"passed","severity":"normal"},{"uid":"97fe482d834388b7","name":"should delete the oldest ticket if more than 5 exist","time":{"start":1747766941102,"stop":1747766941105,"duration":3},"status":"passed","severity":"normal"},{"uid":"995ef76ef678a7be","name":"should allow user to see itinerary if invited","time":{"start":1747766939027,"stop":1747766939031,"duration":4},"status":"passed","severity":"normal"},{"uid":"bf0ead80c02c74e6","name":"should return itineraryId if user already has access to the itinerary","time":{"start":1747766939165,"stop":1747766939168,"duration":3},"status":"passed","severity":"normal"},{"uid":"d33dad82f6d14c9f","name":"should add a tour to the index","time":{"start":1747766939990,"stop":1747766939993,"duration":3},"status":"passed","severity":"normal"},{"uid":"d8e6c70382552128","name":"should handle null or undefined tour and return null","time":{"start":1747766939946,"stop":1747766939949,"duration":3},"status":"passed","severity":"normal"},{"uid":"6ebc35f1a4303325","name":"should throw ForbiddenException if user is not the owner","time":{"start":1747766939131,"stop":1747766939134,"duration":3},"status":"passed","severity":"normal"},{"uid":"e3b1cfc1578b3b5","name":"should handle service errors properly","time":{"start":1747766941950,"stop":1747766941953,"duration":3},"status":"passed","severity":"normal"},{"uid":"abb511ce8bdd86ff","name":"should handle no filters correctly","time":{"start":1747766940191,"stop":1747766940193,"duration":2},"status":"passed","severity":"normal"},{"uid":"77dac2cdc4733db5","name":"should update an itinerary reminder and reschdule the cron job","time":{"start":1747766941691,"stop":1747766941694,"duration":3},"status":"passed","severity":"normal"},{"uid":"a1d8bc22b9b4dfe2","name":"should throw BadRequestException if user's email is not registered","time":{"start":1747766938725,"stop":1747766938728,"duration":3},"status":"passed","severity":"normal"},{"uid":"cb34db2c65e30070","name":"should return validation error if page is negative","time":{"start":1747766943049,"stop":1747766943051,"duration":2},"status":"passed","severity":"normal"},{"uid":"e36e10a6f6324314","name":"should return a list of liked itineraries for a user","time":{"start":1747766939669,"stop":1747766939675,"duration":6},"status":"passed","severity":"normal"},{"uid":"ee660c7584782be5","name":"should create transaction redirect URL","time":{"start":1747766942445,"stop":1747766942447,"duration":2},"status":"passed","severity":"normal"},{"uid":"1707f475edcd3394","name":"should invite a user to an itinerary and return a formatted response","time":{"start":1747766939364,"stop":1747766939367,"duration":3},"status":"passed","severity":"normal"},{"uid":"b56f2382b8335d30","name":"should throw an error if placeId is not provided","time":{"start":1747766942161,"stop":1747766942163,"duration":2},"status":"passed","severity":"normal"},{"uid":"d66480da4030f053","name":"should create a new user and send confirmation email","time":{"start":1747766941010,"stop":1747766941042,"duration":32},"status":"passed","severity":"normal"},{"uid":"b4d890599c7ecac3","name":"should cancel an existing scheduled email job","time":{"start":1747766940312,"stop":1747766940315,"duration":3},"status":"passed","severity":"normal"},{"uid":"e5cfe68263373485","name":"should delete oldest view if already 10 and add new","time":{"start":1747766940169,"stop":1747766940172,"duration":3},"status":"passed","severity":"normal"},{"uid":"f1360cd0a6197870","name":"should mark itinerary as complete","time":{"start":1747766939332,"stop":1747766939334,"duration":2},"status":"passed","severity":"normal"},{"uid":"7d265ce7d15afa76","name":"should return empty data when user has no shared itineraries","time":{"start":1747766939097,"stop":1747766939102,"duration":5},"status":"passed","severity":"normal"},{"uid":"2d7eebf5cda19817","name":"should delete oldest view if already 10 and add new","time":{"start":1747766939369,"stop":1747766939372,"duration":3},"status":"passed","severity":"normal"},{"uid":"fe5b331cfcee7885","name":"should throw ForbiddenException if user doesnt have access to itinerary","time":{"start":1747766939426,"stop":1747766939434,"duration":8},"status":"passed","severity":"normal"},{"uid":"f09844b99ba9e242","name":"should create transaction","time":{"start":1747766942440,"stop":1747766942443,"duration":3},"status":"passed","severity":"normal"},{"uid":"91a17c45646dd09a","name":"should throw BadRequestException when block start time is after end time","time":{"start":1747766938996,"stop":1747766938999,"duration":3},"status":"passed","severity":"normal"},{"uid":"a71321b68c71ecdc","name":"should throw NotFoundException if itinerary not found","time":{"start":1747766939434,"stop":1747766939436,"duration":2},"status":"passed","severity":"normal"},{"uid":"65e50b6cd55820db","name":"should return an empty array when user has no transactions","time":{"start":1747766939766,"stop":1747766939768,"duration":2},"status":"passed","severity":"normal"},{"uid":"75d947f7550d743c","name":"should handle empty search results","time":{"start":1747766940181,"stop":1747766940183,"duration":2},"status":"passed","severity":"normal"},{"uid":"72e59bb18c72234","name":"should throw UnauthorizedException when API key is missing","time":{"start":1747766941962,"stop":1747766941965,"duration":3},"status":"passed","severity":"normal"},{"uid":"49531d1a26f35ca4","name":"should return tour title suggestions","time":{"start":1747766941538,"stop":1747766941540,"duration":2},"status":"passed","severity":"normal"},{"uid":"ba6b2383c45ee4e9","name":"should throw an error if itineraryData.sections is empty","time":{"start":1747766942667,"stop":1747766942671,"duration":4},"status":"passed","severity":"normal"},{"uid":"be2f1f4cf2c8c284","name":"should throw NotFoundException if itinerary reminder does not exist","time":{"start":1747766940281,"stop":1747766940283,"duration":2},"status":"passed","severity":"normal"},{"uid":"4dd1254f61a7a946","name":"should throw ForbiddenException if user does not own the itinerary","time":{"start":1747766938976,"stop":1747766938982,"duration":6},"status":"passed","severity":"normal"},{"uid":"632bcafdefeaf75f","name":"should call setupIndexes on module init","time":{"start":1747766939909,"stop":1747766939912,"duration":3},"status":"passed","severity":"normal"},{"uid":"8372a0ac9ad72084","name":"should throw BadRequestException when start date is after end date","time":{"start":1747766938989,"stop":1747766938996,"duration":7},"status":"passed","severity":"normal"},{"uid":"ba47986450f413c2","name":"should throw BadRequestException if user is not found","time":{"start":1747766941093,"stop":1747766941095,"duration":2},"status":"passed","severity":"normal"},{"uid":"b5d65b81468c80bd","name":"should publish the itinerary if all checks pass","time":{"start":1747766939314,"stop":1747766939318,"duration":4},"status":"passed","severity":"normal"},{"uid":"cf076734565d2025","name":"should return a string indicating a payment was removed","time":{"start":1747766942944,"stop":1747766942946,"duration":2},"status":"passed","severity":"normal"},{"uid":"5663c28552029b40","name":"should throw UnauthorizedException if user has no access to the itinerary","time":{"start":1747766939382,"stop":1747766939385,"duration":3},"status":"passed","severity":"normal"},{"uid":"b2f529d1249b0dd8","name":"should call authService.verifyPasswordReset with correct data","time":{"start":1747766941126,"stop":1747766941146,"duration":20},"status":"passed","severity":"normal"},{"uid":"5258dd6440a5b4e3","name":"should unsave the itinerary for the user","time":{"start":1747766939442,"stop":1747766939445,"duration":3},"status":"passed","severity":"normal"},{"uid":"c3953477ab3db41f","name":"should throw NotFoundException if user is not found","time":{"start":1747766939646,"stop":1747766939654,"duration":8},"status":"passed","severity":"normal"},{"uid":"aa18444c9aecfb6f","name":"should throw NotFoundException if contingency not found","time":{"start":1747766939446,"stop":1747766939448,"duration":2},"status":"passed","severity":"normal"},{"uid":"bac874c39018b8c2","name":"should return user referral code and count","time":{"start":1747766941090,"stop":1747766941092,"duration":2},"status":"passed","severity":"normal"},{"uid":"3431880460c2b748","name":"should throw BadRequestException if email is already registered","time":{"start":1747766941042,"stop":1747766941051,"duration":9},"status":"passed","severity":"normal"},{"uid":"25e944a5e5226054","name":"should accept an itinerary invitation","time":{"start":1747766939377,"stop":1747766939380,"duration":3},"status":"passed","severity":"normal"},{"uid":"79879cd405908aed","name":"should throw UnauthorizedException for invalid ticket","time":{"start":1747766941078,"stop":1747766941086,"duration":8},"status":"passed","severity":"normal"},{"uid":"e81e71390b13bfb5","name":"should throw an error if placeId is not provided","time":{"start":1747766942791,"stop":1747766942795,"duration":4},"status":"passed","severity":"normal"},{"uid":"39874ae10f511f95","name":"should return \"tidak diketahui\" for unknown option","time":{"start":1747766940329,"stop":1747766940332,"duration":3},"status":"passed","severity":"normal"},{"uid":"fb8c2ca752532245","name":"should delete an unpublished itinerary from the index","time":{"start":1747766939985,"stop":1747766939988,"duration":3},"status":"passed","severity":"normal"},{"uid":"3b45e0e73b08a9d3","name":"should return \"1 jam\" for ONE_HOUR_BEFORE option","time":{"start":1747766940321,"stop":1747766940323,"duration":2},"status":"passed","severity":"normal"},{"uid":"bfaa4b49f0ecde91","name":"should send analytics data to Discord","time":{"start":1747766941586,"stop":1747766941588,"duration":2},"status":"passed","severity":"normal"},{"uid":"9f28790bb5afcb3c","name":"should throw NotFoundException if the itinerary does not exist","time":{"start":1747766939390,"stop":1747766939395,"duration":5},"status":"passed","severity":"normal"},{"uid":"c8fe302e4bd3d49f","name":"should return place details with price range when successful","time":{"start":1747766942158,"stop":1747766942161,"duration":3},"status":"passed","severity":"normal"},{"uid":"a9c463d298f89ebd","name":"should return an empty array if no tags are found","time":{"start":1747766939362,"stop":1747766939364,"duration":2},"status":"passed","severity":"normal"},{"uid":"7db01f953514942b","name":"should handle missing fields gracefully","time":{"start":1747766939944,"stop":1747766939946,"duration":2},"status":"passed","severity":"normal"},{"uid":"289d09c004aa48ff","name":"should throw NotFoundException if itinerary doesnt exist","time":{"start":1747766939375,"stop":1747766939378,"duration":3},"status":"passed","severity":"normal"},{"uid":"2abe2b33d639d095","name":"should return a string indicating a new payment was added","time":{"start":1747766942937,"stop":1747766942939,"duration":2},"status":"passed","severity":"normal"},{"uid":"f63018274dcbfcb4","name":"should throw NotFoundException when contingency plan does not exist","time":{"start":1747766939277,"stop":1747766939279,"duration":2},"status":"passed","severity":"normal"},{"uid":"fa5e362adcce189f","name":"should use existing admin instance when apps.length > 0","time":{"start":1747766938764,"stop":1747766938877,"duration":113},"status":"passed","severity":"normal"},{"uid":"4a8e6d4e79b7f07e","name":"should search itineraries with tags filter","time":{"start":1747766939468,"stop":1747766939477,"duration":9},"status":"passed","severity":"normal"},{"uid":"6ea12d0b0b501013","name":"should check saved status of public itinerary ids for the user and return success response","time":{"start":1747766939553,"stop":1747766939557,"duration":4},"status":"passed","severity":"normal"},{"uid":"750283b80a6785c1","name":"should return \"1 hari\" for ONE_DAY_BEFORE option","time":{"start":1747766940319,"stop":1747766940321,"duration":2},"status":"passed","severity":"normal"},{"uid":"13d44d68cbbb0cea","name":"should throw ForbiddenException if the user is not the owner of the itinerary","time":{"start":1747766939201,"stop":1747766939204,"duration":3},"status":"passed","severity":"normal"},{"uid":"e2b9c648dff28a9a","name":"should throw NotFoundException when itinerary does not exist","time":{"start":1747766939012,"stop":1747766939015,"duration":3},"status":"passed","severity":"normal"},{"uid":"2b4f4f979d3d73ee","name":"should throw ForbiddenException if the user is not authorized to accept the invitation","time":{"start":1747766939384,"stop":1747766939386,"duration":2},"status":"passed","severity":"normal"},{"uid":"6236d477ed1b9383","name":"should return only shared itineraries when sharedBool is true","time":{"start":1747766939066,"stop":1747766939077,"duration":11},"status":"passed","severity":"normal"},{"uid":"78aa9a46c14510aa","name":"should create an itinerary reminder","time":{"start":1747766940243,"stop":1747766940253,"duration":10},"status":"passed","severity":"normal"},{"uid":"74b8e8cd8a7c9ca","name":"should call service and return viewed tours","time":{"start":1747766941515,"stop":1747766941517,"duration":2},"status":"passed","severity":"normal"},{"uid":"4bc72be497eb45ce","name":"should use email prefix if no name is provided","time":{"start":1747766938749,"stop":1747766938753,"duration":4},"status":"passed","severity":"normal"},{"uid":"e26e0e7864f0a29b","name":"should initialize Snap and CoreApi with correct configuration","time":{"start":1747766942437,"stop":1747766942440,"duration":3},"status":"passed","severity":"normal"},{"uid":"1527f0645b256334","name":"should verify a Firebase token and return user data","time":{"start":1747766938753,"stop":1747766938756,"duration":3},"status":"passed","severity":"normal"},{"uid":"7f5999735ff87fba","name":"should throw BadRequestException when not enough tickets available","time":{"start":1747766940239,"stop":1747766940241,"duration":2},"status":"passed","severity":"normal"},{"uid":"a47462e00af305cf","name":"should return empty suggestions for short queries","time":{"start":1747766941536,"stop":1747766941538,"duration":2},"status":"passed","severity":"normal"},{"uid":"ff7c96728b4dc38a","name":"should return itinerary when found and user has access to it","time":{"start":1747766939024,"stop":1747766939027,"duration":3},"status":"passed","severity":"normal"},{"uid":"b317021f3b28b9c","name":"should throw ForbiddenException when contingency plan belongs to different itinerary","time":{"start":1747766939269,"stop":1747766939272,"duration":3},"status":"passed","severity":"normal"},{"uid":"c470680f0a6530c1","name":"should throw NotFoundException if tour not found","time":{"start":1747766940202,"stop":1747766940213,"duration":11},"status":"passed","severity":"normal"},{"uid":"ba6d351658527ea2","name":"should throw BadRequestException if user owns the itinerary its trying to save","time":{"start":1747766939435,"stop":1747766939437,"duration":2},"status":"passed","severity":"normal"},{"uid":"bea36bb5fe88706c","name":"should return all tags","time":{"start":1747766939359,"stop":1747766939362,"duration":3},"status":"passed","severity":"normal"},{"uid":"bbda83132fd39bb2","name":"should handle undefined itinerary gracefully","time":{"start":1747766939988,"stop":1747766939990,"duration":2},"status":"passed","severity":"normal"},{"uid":"5c7e96a79fa249f7","name":"should throw NotFoundException if user does not exist","time":{"start":1747766938886,"stop":1747766938889,"duration":3},"status":"passed","severity":"normal"},{"uid":"5527cca55ea01884","name":"should update photo profile when called with valid URL","time":{"start":1747766941051,"stop":1747766941059,"duration":8},"status":"passed","severity":"normal"},{"uid":"316fd97f47284e9f","name":"should return empty array if the list is empty","time":{"start":1747766939463,"stop":1747766939465,"duration":2},"status":"passed","severity":"normal"},{"uid":"2452a73e2982bff7","name":"should return completed itineraries with locationCount","time":{"start":1747766939109,"stop":1747766939116,"duration":7},"status":"passed","severity":"normal"},{"uid":"982fb5a3c2a62dd","name":"should throw BadRequestException if user owns the itinerary its trying to unsave","time":{"start":1747766939448,"stop":1747766939454,"duration":6},"status":"passed","severity":"normal"},{"uid":"8dace38b21a2df8c","name":"should return parsed feedback array from AI response","time":{"start":1747766941791,"stop":1747766941795,"duration":4},"status":"passed","severity":"normal"},{"uid":"d46275f1da3c917","name":"should return empty array when user has no itinerary likes","time":{"start":1747766941015,"stop":1747766941017,"duration":2},"status":"passed","severity":"normal"},{"uid":"22002184be058dc0","name":"should return list of itinerary views ordered by viewedAt desc","time":{"start":1747766939362,"stop":1747766939365,"duration":3},"status":"passed","severity":"normal"},{"uid":"4a5867b296414c06","name":"should correctly format an itinerary for indexing","time":{"start":1747766939923,"stop":1747766939929,"duration":6},"status":"passed","severity":"normal"},{"uid":"579da378a2df2605","name":"should throw InternalServerErrorException if Firebase token verification fails","time":{"start":1747766941165,"stop":1747766941168,"duration":3},"status":"passed","severity":"normal"},{"uid":"67645fabf8d0117a","name":"should update a profile when called with valid ID and data","time":{"start":1747766941018,"stop":1747766941020,"duration":2},"status":"passed","severity":"normal"},{"uid":"e0ed36e486dbce44","name":"should throw NotFoundException if verification code is not found","time":{"start":1747766938512,"stop":1747766938515,"duration":3},"status":"passed","severity":"normal"},{"uid":"3c98e2a8cc6536cf","name":"should return the pre-register count","time":{"start":1747766942591,"stop":1747766942594,"duration":3},"status":"passed","severity":"normal"},{"uid":"8ec7bfab53d94dd5","name":"should remove an itinerary successfully","time":{"start":1747766939134,"stop":1747766939138,"duration":4},"status":"passed","severity":"normal"},{"uid":"329e8aefeb2aca15","name":"should update a payment","time":{"start":1747766942857,"stop":1747766942859,"duration":2},"status":"passed","severity":"normal"},{"uid":"44d6e41745f1a4fe","name":"should be defined","time":{"start":1747766939574,"stop":1747766939640,"duration":66},"status":"passed","severity":"normal"},{"uid":"2655f3c9ef4df7fa","name":"should handle empty sections","time":{"start":1747766941819,"stop":1747766941827,"duration":8},"status":"passed","severity":"normal"},{"uid":"f19be2430e22ca95","name":"should throw BadRequestException when date format is invalid","time":{"start":1747766938983,"stop":1747766938988,"duration":5},"status":"passed","severity":"normal"},{"uid":"7e1acff55790d588","name":"should return empty data when there are no itineraries","time":{"start":1747766939330,"stop":1747766939332,"duration":2},"status":"passed","severity":"normal"},{"uid":"f4861cc847900480","name":"should handle names from Firebase correctly","time":{"start":1747766938745,"stop":1747766938749,"duration":4},"status":"passed","severity":"normal"},{"uid":"5f483d213ef8641","name":"should update viewedAt if itinerary already viewed","time":{"start":1747766939366,"stop":1747766939368,"duration":2},"status":"passed","severity":"normal"},{"uid":"ed6e22b5167d58a6","name":"should handle empty results when user has no itineraries or views","time":{"start":1747766939472,"stop":1747766939480,"duration":8},"status":"passed","severity":"normal"},{"uid":"98a572edaab08090","name":"should throw BadRequestException when sections validation fails","time":{"start":1747766939306,"stop":1747766939314,"duration":8},"status":"passed","severity":"normal"},{"uid":"80eaf417507d0722","name":"should process tour ticket payment successfully","time":{"start":1747766941546,"stop":1747766941549,"duration":3},"status":"passed","severity":"normal"},{"uid":"f663e2e01a22fe69","name":"should successfully change password when all validations pass","time":{"start":1747766939749,"stop":1747766939751,"duration":2},"status":"passed","severity":"normal"},{"uid":"d982575d66ac27f9","name":"should return \"10 menit\" for TEN_MINUTES_BEFORE option","time":{"start":1747766940324,"stop":1747766940329,"duration":5},"status":"passed","severity":"normal"},{"uid":"f80154f894bf7fe2","name":"should allow access if the route is public","time":{"start":1747766941998,"stop":1747766942001,"duration":3},"status":"passed","severity":"normal"},{"uid":"63181da8af49a2bb","name":"should throw ForbiddenException if user does not own the itinerary and the itinerary is not public","time":{"start":1747766939416,"stop":1747766939419,"duration":3},"status":"passed","severity":"normal"},{"uid":"b964fe268e8d010","name":"should throw ConflictException if user already exists","time":{"start":1747766938738,"stop":1747766938741,"duration":3},"status":"passed","severity":"normal"},{"uid":"d6a09473900e1931","name":"should send webhook for pre-registration","time":{"start":1747766941108,"stop":1747766941115,"duration":7},"status":"passed","severity":"normal"},{"uid":"44c71e8f9e698990","name":"should return only completed itineraries when finishedBool is true","time":{"start":1747766939078,"stop":1747766939083,"duration":5},"status":"passed","severity":"normal"},{"uid":"823b0474c756a02c","name":"should handle null result from itineraryTag.findMany","time":{"start":1747766939489,"stop":1747766939491,"duration":2},"status":"passed","severity":"normal"},{"uid":"64916608e1297ffb","name":"should return paginated itineraries for both owned and shared when sharedBool is false","time":{"start":1747766939056,"stop":1747766939062,"duration":6},"status":"passed","severity":"normal"},{"uid":"33dc03c77ffa74b3","name":"should be defined","time":{"start":1747766942906,"stop":1747766942917,"duration":11},"status":"passed","severity":"normal"},{"uid":"3e83afb30563c34f","name":"should throw ConflictException if user already exists and is confirmed","time":{"start":1747766938471,"stop":1747766938478,"duration":7},"status":"passed","severity":"normal"},{"uid":"8f70ccea6c3e5de1","name":"should be defined","time":{"start":1747766940101,"stop":1747766940143,"duration":42},"status":"passed","severity":"normal"},{"uid":"3d1f42f464f8402","name":"should throw BadRequestException if email is already in use","time":{"start":1747766939698,"stop":1747766939700,"duration":2},"status":"passed","severity":"normal"},{"uid":"cdd1b2a29253aaf1","name":"should throw NotFoundException if the user to be removed does not exist","time":{"start":1747766939398,"stop":1747766939404,"duration":6},"status":"passed","severity":"normal"},{"uid":"dd454b321007e69c","name":"should throw ConflictException if user is already linked","time":{"start":1747766938890,"stop":1747766938893,"duration":3},"status":"passed","severity":"normal"},{"uid":"edbaa21287e32e12","name":"should pass errors from service to the caller","time":{"start":1747766939349,"stop":1747766939352,"duration":3},"status":"passed","severity":"normal"},{"uid":"1518f58ec1c6e3f8","name":"should return a list of itineraries for a user","time":{"start":1747766939659,"stop":1747766939663,"duration":4},"status":"passed","severity":"normal"},{"uid":"2a7110c2323b9e89","name":"should throw an error if itinerary is not found","time":{"start":1747766939356,"stop":1747766939359,"duration":3},"status":"passed","severity":"normal"},{"uid":"485762ddfc87df2","name":"should return country code","time":{"start":1747766942920,"stop":1747766942922,"duration":2},"status":"passed","severity":"normal"},{"uid":"d823faa9fdb5af9a","name":"should handle non-consecutive block positions when creating routes","time":{"start":1747766938927,"stop":1747766938930,"duration":3},"status":"passed","severity":"normal"},{"uid":"68a95f363f95ead8","name":"should pass search parameters to the service","time":{"start":1747766941533,"stop":1747766941535,"duration":2},"status":"passed","severity":"normal"},{"uid":"43a4c531acead284","name":"should throw ForbiddenException if user is not authorized","time":{"start":1747766939035,"stop":1747766939038,"duration":3},"status":"passed","severity":"normal"},{"uid":"97fc52cf6d61528a","name":"should accept an itinerary invitation and link the user to the itinerary using itineraryId","time":{"start":1747766939161,"stop":1747766939165,"duration":4},"status":"passed","severity":"normal"},{"uid":"c2722c80ea915982","name":"should create itinerary and tour indexes if they do not exist","time":{"start":1747766939913,"stop":1747766939916,"duration":3},"status":"passed","severity":"normal"},{"uid":"19e82e3d2f4d4068","name":"should throw ForbiddenException when contingency plan belongs to different itinerary","time":{"start":1747766939294,"stop":1747766939297,"duration":3},"status":"passed","severity":"normal"},{"uid":"9cdc65ea2a692c63","name":"should register a new user and return tokens","time":{"start":1747766938741,"stop":1747766938744,"duration":3},"status":"passed","severity":"normal"},{"uid":"8804708a6c4e7cff","name":"should call service.login with the correct email","time":{"start":1747766942594,"stop":1747766942596,"duration":2},"status":"passed","severity":"normal"},{"uid":"750a958fe2146691","name":"should update an itinerary with defaults for missing block fields","time":{"start":1747766938959,"stop":1747766938966,"duration":7},"status":"passed","severity":"normal"},{"uid":"875fa7a3e7a24a8c","name":"should throw ForbiddenException if the user is not authorized to invite","time":{"start":1747766939370,"stop":1747766939377,"duration":7},"status":"passed","severity":"normal"},{"uid":"26f17e336f81dcc8","name":"should throw BadRequestException when duplicate section numbers are provided","time":{"start":1747766939006,"stop":1747766939008,"duration":2},"status":"passed","severity":"normal"},{"uid":"529c052f5d69b253","name":"should throw BadRequestException when visitors exceed tour max capacity","time":{"start":1747766940236,"stop":1747766940238,"duration":2},"status":"passed","severity":"normal"},{"uid":"2386a7ba1701027a","name":"should call authService.verify with correct data","time":{"start":1747766941104,"stop":1747766941107,"duration":3},"status":"passed","severity":"normal"},{"uid":"3bb931151310f87b","name":"should return a string indicating a specific payment was returned","time":{"start":1747766942941,"stop":1747766942942,"duration":1},"status":"passed","severity":"normal"},{"uid":"38d4fd306fc34727","name":"should throw UnauthorizedException when provided with invalid API key","time":{"start":1747766941943,"stop":1747766941947,"duration":4},"status":"passed","severity":"normal"},{"uid":"e309d484c27ef429","name":"should throw UnauthorizedException if emails do not match","time":{"start":1747766938703,"stop":1747766938706,"duration":3},"status":"passed","severity":"normal"},{"uid":"5414691a5fc323ac","name":"should throw UnauthorizedException if refresh token is invalid","time":{"start":1747766941095,"stop":1747766941099,"duration":4},"status":"passed","severity":"normal"},{"uid":"6802462aae8d22db","name":"should throw BadRequestException if emails do not match","time":{"start":1747766938882,"stop":1747766938886,"duration":4},"status":"passed","severity":"normal"},{"uid":"e8df897fe4225ddc","name":"should handle missing description","time":{"start":1747766941817,"stop":1747766941819,"duration":2},"status":"passed","severity":"normal"},{"uid":"7230deaf392845c0","name":"should be defined","time":{"start":1747766939877,"stop":1747766939909,"duration":32},"status":"passed","severity":"normal"},{"uid":"3c006957a731c64","name":"should throw an error when API call fails","time":{"start":1747766942168,"stop":1747766942171,"duration":3},"status":"passed","severity":"normal"},{"uid":"9e9b4bbd48f7ff6c","name":"should call service and return viewed itineraries","time":{"start":1747766939518,"stop":1747766939521,"duration":3},"status":"passed","severity":"normal"},{"uid":"3da07cdc68456062","name":"should search tours with the provided query and options","time":{"start":1747766939980,"stop":1747766939982,"duration":2},"status":"passed","severity":"normal"},{"uid":"42a7366c6d130ab2","name":"should handle time components correctly","time":{"start":1747766939967,"stop":1747766939970,"duration":3},"status":"passed","severity":"normal"},{"uid":"1d81ff723487e293","name":"should throw ForbiddenException if user does not own the itinerary and the itinerary is not public","time":{"start":1747766939399,"stop":1747766939402,"duration":3},"status":"passed","severity":"normal"},{"uid":"b5a35d38ee6ba9c5","name":"should return success response when email change verification is successful","time":{"start":1747766941043,"stop":1747766941044,"duration":1},"status":"passed","severity":"normal"},{"uid":"35df2623150dbec0","name":"should throw UnauthorizedException if emails do not match","time":{"start":1747766938516,"stop":1747766938519,"duration":3},"status":"passed","severity":"normal"},{"uid":"5c0f1a9d5e99f98f","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747766939138,"stop":1747766939141,"duration":3},"status":"passed","severity":"normal"},{"uid":"6fcff38a71299534","name":"should send invitations to the provided emails","time":{"start":1747766939151,"stop":1747766939154,"duration":3},"status":"passed","severity":"normal"},{"uid":"811361e328bf276","name":"should remove an itinerary reminder","time":{"start":1747766940283,"stop":1747766940285,"duration":2},"status":"passed","severity":"normal"},{"uid":"fef3c257e49d3b5e","name":"should throw an exception if linking fails","time":{"start":1747766941171,"stop":1747766941174,"duration":3},"status":"passed","severity":"normal"},{"uid":"a8d348f406884d45","name":"should create a new ticket for the user","time":{"start":1747766941096,"stop":1747766941099,"duration":3},"status":"passed","severity":"normal"},{"uid":"638f17b090ce6c9a","name":"should link an existing user account with Firebase","time":{"start":1747766938878,"stop":1747766938882,"duration":4},"status":"passed","severity":"normal"},{"uid":"569ea7e8d7dab758","name":"should not send webhook if DISCORD_WEBHOOK_URL is not set","time":{"start":1747766941105,"stop":1747766941108,"duration":3},"status":"passed","severity":"normal"},{"uid":"9b7bc538ce153fa8","name":"should handle null or undefined itinerary and return null","time":{"start":1747766939932,"stop":1747766939936,"duration":4},"status":"passed","severity":"normal"},{"uid":"8dff01541b34117e","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747766939445,"stop":1747766939448,"duration":3},"status":"passed","severity":"normal"},{"uid":"f13f9e21fe913580","name":"should throw NotFoundException if tour doesnt exist","time":{"start":1747766939379,"stop":1747766939382,"duration":3},"status":"passed","severity":"normal"},{"uid":"c625a8c0edc0aff3","name":"should update an itinerary with new details, tags, sections, and blocks","time":{"start":1747766938939,"stop":1747766938952,"duration":13},"status":"passed","severity":"normal"},{"uid":"f108cd61082fc85a","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747766939334,"stop":1747766939337,"duration":3},"status":"passed","severity":"normal"},{"uid":"56c5c30ced2c1eb","name":"should correctly format a tour for indexing","time":{"start":1747766939936,"stop":1747766939944,"duration":8},"status":"passed","severity":"normal"},{"uid":"2f0f00d3cc9c7a80","name":"should return 401 Unauthorized if UMAMI_API_KEY is not set","time":{"start":1747766941580,"stop":1747766941583,"duration":3},"status":"passed","severity":"normal"},{"uid":"953766fc41fcb7f2","name":"should call verifyEmailChange service with correct parameters","time":{"start":1747766941041,"stop":1747766941042,"duration":1},"status":"passed","severity":"normal"},{"uid":"ad7a46011a2793c3","name":"should throw an error when API call fails","time":{"start":1747766942155,"stop":1747766942158,"duration":3},"status":"passed","severity":"normal"},{"uid":"2260bcd9a6c484d5","name":"should throw UnauthorizedException when API key is missing","time":{"start":1747766941947,"stop":1747766941950,"duration":3},"status":"passed","severity":"normal"},{"uid":"736f60f9b5b9a053","name":"should throw ForbiddenException when contingency plan belongs to different itinerary","time":{"start":1747766939280,"stop":1747766939282,"duration":2},"status":"passed","severity":"normal"},{"uid":"359119af375e664d","name":"should create an itinerary with default section title, empty blocks, and empty tags","time":{"start":1747766938868,"stop":1747766938871,"duration":3},"status":"passed","severity":"normal"},{"uid":"de08478026ab66b1","name":"should throw UnauthorizedException when ticket does not belong to the user","time":{"start":1747766939724,"stop":1747766939726,"duration":2},"status":"passed","severity":"normal"},{"uid":"8d12cfd086790ff4","name":"should be defined","time":{"start":1747766943013,"stop":1747766943018,"duration":5},"status":"passed","severity":"normal"},{"uid":"107e7881a9af47e0","name":"should throw BadRequestException when there are more than 2 contingency plans","time":{"start":1747766939240,"stop":1747766939243,"duration":3},"status":"passed","severity":"normal"},{"uid":"fffb47ac7751a552","name":"should throw BadRequestException when ticket has expired","time":{"start":1747766938707,"stop":1747766938710,"duration":3},"status":"passed","severity":"normal"},{"uid":"7f4728e8bc3edadc","name":"should allow access if token is valid","time":{"start":1747766942017,"stop":1747766942028,"duration":11},"status":"passed","severity":"normal"},{"uid":"b8b04b2291634c18","name":"should return empty suggestions for short queries","time":{"start":1747766939500,"stop":1747766939503,"duration":3},"status":"passed","severity":"normal"},{"uid":"31b628f69c4d9792","name":"should throw BadRequestException when new password and confirmation do not match","time":{"start":1747766939744,"stop":1747766939748,"duration":4},"status":"passed","severity":"normal"},{"uid":"e02bd9d4adbcb623","name":"should throw a ConflictException on already scheduled reminders","time":{"start":1747766940295,"stop":1747766940299,"duration":4},"status":"passed","severity":"normal"},{"uid":"2b6c4f6de0dede98","name":"should throw UnauthorizedException if user not found","time":{"start":1747766942013,"stop":1747766942016,"duration":3},"status":"passed","severity":"normal"},{"uid":"bbc048008de7bc72","name":"should return all contingency plans for the given itinerary","time":{"start":1747766939210,"stop":1747766939216,"duration":6},"status":"passed","severity":"normal"},{"uid":"d108b1c6c93b9ccd","name":"should return shared itineraries successfully","time":{"start":1747766939268,"stop":1747766939274,"duration":6},"status":"passed","severity":"normal"},{"uid":"4c5d651a85209c88","name":"should be defined","time":{"start":1747766942833,"stop":1747766942849,"duration":16},"status":"passed","severity":"normal"},{"uid":"15191ad529cc2f3d","name":"should duplicate an itinerary with no contingencies and return a formatted response","time":{"start":1747766939456,"stop":1747766939459,"duration":3},"status":"passed","severity":"normal"},{"uid":"8875b3a644824bc5","name":"should return a list of transactions for a user","time":{"start":1747766939763,"stop":1747766939766,"duration":3},"status":"passed","severity":"normal"},{"uid":"daf4ecaf38c096a9","name":"should handle errors if sending email fails","time":{"start":1747766943027,"stop":1747766943029,"duration":2},"status":"passed","severity":"normal"},{"uid":"462ed76767728d71","name":"should return an itinerary reminder with associated itinerary id","time":{"start":1747766940271,"stop":1747766940274,"duration":3},"status":"passed","severity":"normal"},{"uid":"399196bfe017f6f2","name":"should throw NotFoundException if itinerary not found","time":{"start":1747766939331,"stop":1747766939334,"duration":3},"status":"passed","severity":"normal"},{"uid":"69b34311d7fc4ea7","name":"should throw NotFoundException if itinerary doesnt exist","time":{"start":1747766940254,"stop":1747766940260,"duration":6},"status":"passed","severity":"normal"},{"uid":"f0fffd701bdcc299","name":"should create transaction token","time":{"start":1747766942443,"stop":1747766942445,"duration":2},"status":"passed","severity":"normal"},{"uid":"8901d430f92f30fe","name":"should throw an error when page number exceeds total pages","time":{"start":1747766939087,"stop":1747766939089,"duration":2},"status":"passed","severity":"normal"},{"uid":"72163b73d13250fc","name":"should throw an error when page number exceeds total pages","time":{"start":1747766939106,"stop":1747766939108,"duration":2},"status":"passed","severity":"normal"},{"uid":"822adae02ac82343","name":"should return new access and refresh tokens if refresh token is valid","time":{"start":1747766938455,"stop":1747766938463,"duration":8},"status":"passed","severity":"normal"},{"uid":"9157f2acb80163a4","name":"should throw NotFoundException if itinerary doesnt exist","time":{"start":1747766940286,"stop":1747766940289,"duration":3},"status":"passed","severity":"normal"},{"uid":"f6973b6c95db45e","name":"should duplicate an itinerary succesfully","time":{"start":1747766939386,"stop":1747766939390,"duration":4},"status":"passed","severity":"normal"},{"uid":"e65110371d77923c","name":"should throw ConflictException if user already exists during Google registration","time":{"start":1747766941162,"stop":1747766941165,"duration":3},"status":"passed","severity":"normal"},{"uid":"70b00cdf36bf90f","name":"should handle notification","time":{"start":1747766942448,"stop":1747766942450,"duration":2},"status":"passed","severity":"normal"},{"uid":"2c4139eed481287","name":"should throw BadRequestException when quantity does not match visitors count","time":{"start":1747766940229,"stop":1747766940232,"duration":3},"status":"passed","severity":"normal"},{"uid":"63db7156608e3dcd","name":"should handle duplicate titles in results","time":{"start":1747766939513,"stop":1747766939515,"duration":2},"status":"passed","severity":"normal"},{"uid":"ef6a56fc6adadaad","name":"should throw BadRequestException when ticket has expired","time":{"start":1747766939726,"stop":1747766939728,"duration":2},"status":"passed","severity":"normal"},{"uid":"deec2431522b4927","name":"should duplicate an itinerary and its contingencies and return a formatted response","time":{"start":1747766939452,"stop":1747766939455,"duration":3},"status":"passed","severity":"normal"},{"uid":"36339422164527ee","name":"should throw NotFoundException when tags do not exist","time":{"start":1747766939009,"stop":1747766939012,"duration":3},"status":"passed","severity":"normal"},{"uid":"e855658e9b50621f","name":"should return empty itinerary array if no completed itineraries found","time":{"start":1747766939344,"stop":1747766939346,"duration":2},"status":"passed","severity":"normal"},{"uid":"ee8e2f027bea84de","name":"should throw NotFoundException if the invitation does not exist","time":{"start":1747766939380,"stop":1747766939383,"duration":3},"status":"passed","severity":"normal"},{"uid":"9e96866f8b49037c","name":"should call authService.createUser and authService.sendVerification with correct data","time":{"start":1747766941099,"stop":1747766941103,"duration":4},"status":"passed","severity":"normal"},{"uid":"decba44674e5ae33","name":"should return a profile when findOne is called with a valid ID","time":{"start":1747766941005,"stop":1747766941008,"duration":3},"status":"passed","severity":"normal"},{"uid":"cb819f90ef808364","name":"should send password reset verification email if user exists and has email registered","time":{"start":1747766938692,"stop":1747766938695,"duration":3},"status":"passed","severity":"normal"},{"uid":"bdb82dcefc2e2d60","name":"should create an itinerary and return a formatted response","time":{"start":1747766939202,"stop":1747766939209,"duration":7},"status":"passed","severity":"normal"},{"uid":"dbe19fc9177649f8","name":"should return contingency plans for an itinerary","time":{"start":1747766939410,"stop":1747766939416,"duration":6},"status":"passed","severity":"normal"},{"uid":"d547bd37ebead96e","name":"should be defined","time":{"start":1747766941982,"stop":1747766941997,"duration":15},"status":"passed","severity":"normal"},{"uid":"4ac10458add05fd0","name":"should throw ForbiddenException if user is not the owner","time":{"start":1747766939337,"stop":1747766939340,"duration":3},"status":"passed","severity":"normal"},{"uid":"7f27299a4663d379","name":"should be defined","time":{"start":1747766941919,"stop":1747766941938,"duration":19},"status":"passed","severity":"normal"},{"uid":"e0b4f2e2827b5efd","name":"should throw NotFoundException if tour doesnt exist","time":{"start":1747766940164,"stop":1747766940169,"duration":5},"status":"passed","severity":"normal"},{"uid":"79845d405a9a9b75","name":"should throw BadRequestException when new password is same as old password","time":{"start":1747766939757,"stop":1747766939760,"duration":3},"status":"passed","severity":"normal"},{"uid":"9962eab2694d0102","name":"should search itineraries with day count range filters","time":{"start":1747766939477,"stop":1747766939479,"duration":2},"status":"passed","severity":"normal"},{"uid":"99f658a188c5cddc","name":"should publish an itinerary and return success response","time":{"start":1747766939522,"stop":1747766939524,"duration":2},"status":"passed","severity":"normal"},{"uid":"5fb05421c46c0407","name":"should throw UnauthorizedException if email is not registered","time":{"start":1747766941081,"stop":1747766941087,"duration":6},"status":"passed","severity":"normal"},{"uid":"291b63872d46815d","name":"should return total pre-registered users count","time":{"start":1747766941055,"stop":1747766941058,"duration":3},"status":"passed","severity":"normal"},{"uid":"9e8cd26810edef6c","name":"should handle document not found gracefully","time":{"start":1747766939999,"stop":1747766940001,"duration":2},"status":"passed","severity":"normal"},{"uid":"d76822fa0e8721c7","name":"should call service.createPreRegister with correct data","time":{"start":1747766942588,"stop":1747766942591,"duration":3},"status":"passed","severity":"normal"},{"uid":"ebca5c904a1f4c0e","name":"should filter itineraries with shared=true and finished=true","time":{"start":1747766939256,"stop":1747766939258,"duration":2},"status":"passed","severity":"normal"},{"uid":"a6d53c78a45a6fdc","name":"should handle overflow page numbers","time":{"start":1747766939045,"stop":1747766939048,"duration":3},"status":"passed","severity":"normal"},{"uid":"26ec11a86b8a95ea","name":"should throw UnauthorizedException if user not found","time":{"start":1747766942552,"stop":1747766942554,"duration":2},"status":"passed","severity":"normal"},{"uid":"9242386fae3fff9b","name":"should delete the oldest ticket if there are too many","time":{"start":1747766938503,"stop":1747766938507,"duration":4},"status":"passed","severity":"normal"},{"uid":"4026f49f73cf4f69","name":"should check saved status of public itinerary ids for the user","time":{"start":1747766939457,"stop":1747766939459,"duration":2},"status":"passed","severity":"normal"},{"uid":"c6abcfa64fbd4dee","name":"should fetch an itinerary reminder and return OK when found","time":{"start":1747766941697,"stop":1747766941700,"duration":3},"status":"passed","severity":"normal"},{"uid":"e0415fcffc51730f","name":"should pass errors from service to the caller","time":{"start":1747766941700,"stop":1747766941703,"duration":3},"status":"passed","severity":"normal"},{"uid":"68d3f8af5b821024","name":"should just create view if less than 10 views","time":{"start":1747766939372,"stop":1747766939375,"duration":3},"status":"passed","severity":"normal"},{"uid":"9c61a1924c4abe82","name":"should return 1 for missing dates","time":{"start":1747766939972,"stop":1747766939975,"duration":3},"status":"passed","severity":"normal"},{"uid":"7c70773bd18634f1","name":"should throw NotFoundException when ticket is not found","time":{"start":1747766939722,"stop":1747766939724,"duration":2},"status":"passed","severity":"normal"},{"uid":"eb749615fa7425ec","name":"should throw UnauthorizedException if token is not provided","time":{"start":1747766942001,"stop":1747766942006,"duration":5},"status":"passed","severity":"normal"},{"uid":"702f4c33cc4a34da","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747766939154,"stop":1747766939157,"duration":3},"status":"passed","severity":"normal"},{"uid":"1ceac9ec9e4da0ff","name":"should send webhook for login-validation","time":{"start":1747766941115,"stop":1747766941120,"duration":5},"status":"passed","severity":"normal"},{"uid":"29cd0e29a08ae9b0","name":"should create a contingency plan and return a formatted response","time":{"start":1747766939431,"stop":1747766939434,"duration":3},"status":"passed","severity":"normal"},{"uid":"98a14482a72e69cc","name":"should return success on successful Google login","time":{"start":1747766941151,"stop":1747766941156,"duration":5},"status":"passed","severity":"normal"},{"uid":"a0eebd5288eab821","name":"should delete expired refresh tokens","time":{"start":1747766938465,"stop":1747766938470,"duration":5},"status":"passed","severity":"normal"},{"uid":"c6ea149aaf8813d8","name":"should be defined","time":{"start":1747766940977,"stop":1747766941004,"duration":27},"status":"passed","severity":"normal"},{"uid":"fdf66e4926f00e48","name":"should throw BadRequestException when ticket is already paid","time":{"start":1747766940248,"stop":1747766940251,"duration":3},"status":"passed","severity":"normal"},{"uid":"1826ddf0461fc1aa","name":"should search itineraries with the provided query and options","time":{"start":1747766939975,"stop":1747766939977,"duration":2},"status":"passed","severity":"normal"},{"uid":"4b09ac0548a4a84d","name":"should throw NotFoundException if the itinerary does not exist","time":{"start":1747766939367,"stop":1747766939370,"duration":3},"status":"passed","severity":"normal"},{"uid":"1c350d37736a70f2","name":"should delete an itinerary from the index","time":{"start":1747766939996,"stop":1747766939999,"duration":3},"status":"passed","severity":"normal"},{"uid":"9882b55f42873b6b","name":"should not index if no tours","time":{"start":1747766939962,"stop":1747766939964,"duration":2},"status":"passed","severity":"normal"},{"uid":"b49719c07fa18a63","name":"should return list of cities based on country","time":{"start":1747766942341,"stop":1747766942343,"duration":2},"status":"passed","severity":"normal"},{"uid":"dd45679ecd305d1b","name":"should save a public itinerary for the user and return success response","time":{"start":1747766939541,"stop":1747766939543,"duration":2},"status":"passed","severity":"normal"},{"uid":"9d2c095e16bbc865","name":"should generate the correct signature","time":{"start":1747766942250,"stop":1747766942254,"duration":4},"status":"passed","severity":"normal"},{"uid":"39de02e7001d42e2","name":"should return search suggestions based on query","time":{"start":1747766939494,"stop":1747766939499,"duration":5},"status":"passed","severity":"normal"},{"uid":"c3073f9e999cabf9","name":"should just create view if less than 10 views","time":{"start":1747766940172,"stop":1747766940175,"duration":3},"status":"passed","severity":"normal"},{"uid":"6ac6af5ee6aae840","name":"should throw NotFoundException if user is not found","time":{"start":1747766938718,"stop":1747766938722,"duration":4},"status":"passed","severity":"normal"},{"uid":"9a25ce1dbd4aacd9","name":"should return tour with itinerary when found","time":{"start":1747766940196,"stop":1747766940202,"duration":6},"status":"passed","severity":"normal"},{"uid":"6afc4173144c33a9","name":"should throw ForbiddenException if user is not owner","time":{"start":1747766939525,"stop":1747766939537,"duration":12},"status":"passed","severity":"normal"},{"uid":"7e66c4e510dab817","name":"should throw UnauthorizedException if refresh token is blacklisted","time":{"start":1747766938442,"stop":1747766938452,"duration":10},"status":"passed","severity":"normal"},{"uid":"30f268209a1f2b98","name":"should not index if no published itineraries","time":{"start":1747766939953,"stop":1747766939955,"duration":2},"status":"passed","severity":"normal"},{"uid":"739b548aa59ed5b5","name":"should return access and refresh tokens if login is successful","time":{"start":1747766938425,"stop":1747766938441,"duration":16},"status":"passed","severity":"normal"},{"uid":"cb8cf8ba617ec368","name":"should throw NotFoundException if user is not found","time":{"start":1747766938530,"stop":1747766938683,"duration":153},"status":"passed","severity":"normal"},{"uid":"5464dc99ca5cb991","name":"should be defined","time":{"start":1747766942540,"stop":1747766942546,"duration":6},"status":"passed","severity":"normal"},{"uid":"f1100ef355d5dfd3","name":"should pass errors from service to the caller","time":{"start":1747766939459,"stop":1747766939462,"duration":3},"status":"passed","severity":"normal"},{"uid":"64d8494d3285bcba","name":"should throw ForbiddenException if user is not the owner of the itinerary","time":{"start":1747766939158,"stop":1747766939161,"duration":3},"status":"passed","severity":"normal"},{"uid":"125326cc79eefd1a","name":"should handle fetch errors gracefully","time":{"start":1747766941577,"stop":1747766941580,"duration":3},"status":"passed","severity":"normal"},{"uid":"d26e14008c52921a","name":"should validate user if refresh token is valid","time":{"start":1747766942549,"stop":1747766942551,"duration":2},"status":"passed","severity":"normal"},{"uid":"69dbbf3815af877e","name":"should create an itinerary with sections and blocks","time":{"start":1747766938861,"stop":1747766938868,"duration":7},"status":"passed","severity":"normal"},{"uid":"9b8da08f41f62027","name":"should extract refresh token from cookies","time":{"start":1747766942555,"stop":1747766942556,"duration":1},"status":"passed","severity":"normal"},{"uid":"6ef80b99f7d928a0","name":"should pass errors from service to the caller","time":{"start":1747766939210,"stop":1747766939220,"duration":10},"status":"passed","severity":"normal"},{"uid":"c1027bd16bd7ab15","name":"should throw UnauthorizedException if token is invalid","time":{"start":1747766942007,"stop":1747766942010,"duration":3},"status":"passed","severity":"normal"},{"uid":"62ed7e35ddb882cf","name":"should handle errors from the search service","time":{"start":1747766939488,"stop":1747766939494,"duration":6},"status":"passed","severity":"normal"},{"uid":"9e125868a8aaa0a5","name":"should return the itinerary if user is the owner","time":{"start":1747766939020,"stop":1747766939023,"duration":3},"status":"passed","severity":"normal"},{"uid":"a22420af3e675826","name":"should throw UnauthorizedException when old password is incorrect","time":{"start":1747766939741,"stop":1747766939744,"duration":3},"status":"passed","severity":"normal"},{"uid":"69651f884e71cac4","name":"should call authService.resetPassword with correct data","time":{"start":1747766941146,"stop":1747766941150,"duration":4},"status":"passed","severity":"normal"},{"uid":"df9fbf81f4915c2b","name":"should remove an itinerary reminder and cancel the cron job","time":{"start":1747766941694,"stop":1747766941697,"duration":3},"status":"passed","severity":"normal"},{"uid":"15e7ba6b4c0c6e25","name":"should throw an error for invalid page number","time":{"start":1747766939326,"stop":1747766939329,"duration":3},"status":"passed","severity":"normal"},{"uid":"f60d7554a8ee922f","name":"should call sendVerificationCode service with correct parameters","time":{"start":1747766941027,"stop":1747766941029,"duration":2},"status":"passed","severity":"normal"},{"uid":"27aafe6b53c329a3","name":"should return an itinerary when found","time":{"start":1747766939179,"stop":1747766939188,"duration":9},"status":"passed","severity":"normal"},{"uid":"34f7e1dc82e377c0","name":"should throw BadRequestException when date format is invalid","time":{"start":1747766938871,"stop":1747766938898,"duration":27},"status":"passed","severity":"normal"},{"uid":"b1274fd3d781334f","name":"should return paginated itineraries","time":{"start":1747766939038,"stop":1747766939041,"duration":3},"status":"passed","severity":"normal"},{"uid":"dc10340666262dd4","name":"should remove a user from the itinerary successfully","time":{"start":1747766939190,"stop":1747766939197,"duration":7},"status":"passed","severity":"normal"},{"uid":"8690a16d4104b691","name":"should handle a single filter correctly","time":{"start":1747766940187,"stop":1747766940189,"duration":2},"status":"passed","severity":"normal"},{"uid":"4b37d800f4864b50","name":"should throw ForbiddenException if user is not the owner","time":{"start":1747766939334,"stop":1747766939337,"duration":3},"status":"passed","severity":"normal"},{"uid":"420871187dcf30a0","name":"should handle service errors properly","time":{"start":1747766941965,"stop":1747766941968,"duration":3},"status":"passed","severity":"normal"},{"uid":"308dcc4d469fd952","name":"should buy a tour ticket successfully","time":{"start":1747766941543,"stop":1747766941546,"duration":3},"status":"passed","severity":"normal"},{"uid":"31b0206338d0601f","name":"should sync itineraries when provided with valid API key","time":{"start":1747766941939,"stop":1747766941942,"duration":3},"status":"passed","severity":"normal"},{"uid":"40e7c6bf7fa4b754","name":"should throw other errors","time":{"start":1747766940010,"stop":1747766940012,"duration":2},"status":"passed","severity":"normal"},{"uid":"59074a6272f723c1","name":"should filter itineraries with shared=false and finished=false","time":{"start":1747766939259,"stop":1747766939261,"duration":2},"status":"passed","severity":"normal"},{"uid":"f63739d53b7b12a0","name":"should successfully update user photo profile","time":{"start":1747766939760,"stop":1747766939763,"duration":3},"status":"passed","severity":"normal"},{"uid":"24b949b50a980f32","name":"should handle NotFoundException if service throws it","time":{"start":1747766941072,"stop":1747766941079,"duration":7},"status":"passed","severity":"normal"},{"uid":"257b5d557e33da3b","name":"should return empty array when user has no itineraries","time":{"start":1747766941011,"stop":1747766941013,"duration":2},"status":"passed","severity":"normal"},{"uid":"2fdb830be41f53b4","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747766939248,"stop":1747766939251,"duration":3},"status":"passed","severity":"normal"},{"uid":"8058d067ae0b1b2d","name":"should be defined","time":{"start":1747766939081,"stop":1747766939177,"duration":96},"status":"passed","severity":"normal"},{"uid":"27ee2045b3bfa5dc","name":"should return itineraries when getListItineraries is called with a valid ID","time":{"start":1747766941009,"stop":1747766941011,"duration":2},"status":"passed","severity":"normal"},{"uid":"cab0d946b81b29dc","name":"should send an email successfully","time":{"start":1747766943019,"stop":1747766943027,"duration":8},"status":"passed","severity":"normal"},{"uid":"1c89f6f1314f5ea1","name":"should handle user with no itineraries","time":{"start":1747766939657,"stop":1747766939659,"duration":2},"status":"passed","severity":"normal"},{"uid":"80efdecec5d72a32","name":"should update a contingency plan and return a formatted response","time":{"start":1747766939443,"stop":1747766939445,"duration":2},"status":"passed","severity":"normal"},{"uid":"d4d376505031055b","name":"should throw UnauthorizedException if firstNames do not match","time":{"start":1747766938519,"stop":1747766938522,"duration":3},"status":"passed","severity":"normal"},{"uid":"278c1c1f98e8a777","name":"should return 1 when there is one contingency plan","time":{"start":1747766939225,"stop":1747766939227,"duration":2},"status":"passed","severity":"normal"},{"uid":"2b4ea01d0802c45","name":"should search itineraries with default parameters","time":{"start":1747766939462,"stop":1747766939464,"duration":2},"status":"passed","severity":"normal"},{"uid":"33997ae2e6aed668","name":"should call geminiService.generateFeedback with valid dto","time":{"start":1747766942671,"stop":1747766942673,"duration":2},"status":"passed","severity":"normal"},{"uid":"4dba7d450ae84240","name":"should throw BadRequestException on improper reminder option","time":{"start":1747766940309,"stop":1747766940311,"duration":2},"status":"passed","severity":"normal"},{"uid":"a5d80fa42575bc5","name":"should handle service errors for shared itineraries","time":{"start":1747766939290,"stop":1747766939293,"duration":3},"status":"passed","severity":"normal"},{"uid":"2db895486a08eff6","name":"should throw NotFoundException if contingency does not exist","time":{"start":1747766939407,"stop":1747766939412,"duration":5},"status":"passed","severity":"normal"},{"uid":"bc81116be08058d8","name":"should throw NotFoundException if contingency plan not found","time":{"start":1747766939428,"stop":1747766939431,"duration":3},"status":"passed","severity":"normal"}]