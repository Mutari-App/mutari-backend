[{"uid":"17dfbb9ec23e92f9","name":"should throw BadRequestException when not enough tickets available","time":{"start":1747665846049,"stop":1747665846063,"duration":14},"status":"passed","severity":"normal"},{"uid":"5adaba7d54a196e4","name":"should successfully buy a tour ticket","time":{"start":1747665846034,"stop":1747665846037,"duration":3},"status":"passed","severity":"normal"},{"uid":"c628bebb77789919","name":"should throw NotFoundException if itinerary doesnt exist","time":{"start":1747665846410,"stop":1747665846419,"duration":9},"status":"passed","severity":"normal"},{"uid":"9e87741f7c952cd3","name":"should return an empty array of itinerary reminders if none found","time":{"start":1747665846433,"stop":1747665846437,"duration":4},"status":"passed","severity":"normal"},{"uid":"620704dd9fcd4cfd","name":"should throw UnauthorizedException when provided with invalid API key","time":{"start":1747665848114,"stop":1747665848117,"duration":3},"status":"passed","severity":"normal"},{"uid":"f33b679363300e78","name":"should duplicate an itinerary contingency","time":{"start":1747665845666,"stop":1747665845673,"duration":7},"status":"passed","severity":"normal"},{"uid":"77ec51c9a0cd81df","name":"should handle optional fields in the DTO correctly","time":{"start":1747665844981,"stop":1747665844985,"duration":4},"status":"passed","severity":"normal"},{"uid":"779efae766324631","name":"should throw an error for invalid page number","time":{"start":1747665845353,"stop":1747665845356,"duration":3},"status":"passed","severity":"normal"},{"uid":"577aeb118550cbaf","name":"should throw ForbiddenException if user is not authorized","time":{"start":1747665844960,"stop":1747665844965,"duration":5},"status":"passed","severity":"normal"},{"uid":"7519a9cbd64637b","name":"should format dates according to Indonesian time format","time":{"start":1747665848180,"stop":1747665848182,"duration":2},"status":"passed","severity":"normal"},{"uid":"e2841074436f8445","name":"should throw ForbiddenException if user does not own the itinerary and the itinerary is not public","time":{"start":1747665845698,"stop":1747665845703,"duration":5},"status":"passed","severity":"normal"},{"uid":"b80818eaf30af490","name":"should delete oldest view if already 10 and add new","time":{"start":1747665845629,"stop":1747665845632,"duration":3},"status":"passed","severity":"normal"},{"uid":"4d02a1e1ab874bbe","name":"should return success on successful Google registration","time":{"start":1747665847315,"stop":1747665847320,"duration":5},"status":"passed","severity":"normal"},{"uid":"7891f0dc61a1e8fe","name":"should throw an error for invalid page number","time":{"start":1747665845084,"stop":1747665845087,"duration":3},"status":"passed","severity":"normal"},{"uid":"8a37aea4e7221ccb","name":"should return success response when email change request is successful","time":{"start":1747665846692,"stop":1747665846694,"duration":2},"status":"passed","severity":"normal"},{"uid":"3861abba7d7e8ff5","name":"should throw ForbiddenException when contingency plan belongs to different itinerary","time":{"start":1747665845547,"stop":1747665845549,"duration":2},"status":"passed","severity":"normal"},{"uid":"400c295b151b8695","name":"should create a contingency plan and return a formatted response","time":{"start":1747665845200,"stop":1747665845203,"duration":3},"status":"passed","severity":"normal"},{"uid":"1401a13f8a56b781","name":"should throw ForbiddenException if user is not owner","time":{"start":1747665845301,"stop":1747665845314,"duration":13},"status":"passed","severity":"normal"},{"uid":"11f84258d31a88d6","name":"should not index if no tours","time":{"start":1747665845980,"stop":1747665845982,"duration":2},"status":"passed","severity":"normal"},{"uid":"4975ed6b6eeaf088","name":"should call sendVerificationCode service with correct parameters","time":{"start":1747665846690,"stop":1747665846692,"duration":2},"status":"passed","severity":"normal"},{"uid":"62cd39fabb9add29","name":"should search itineraries with combined filters and custom sorting","time":{"start":1747665845246,"stop":1747665845248,"duration":2},"status":"passed","severity":"normal"},{"uid":"aca2521438685fc4","name":"should return list of tour views ordered by viewedAt desc","time":{"start":1747665845973,"stop":1747665845979,"duration":6},"status":"passed","severity":"normal"},{"uid":"22a25181e7ac1c2c","name":"should be defined","time":{"start":1747665849273,"stop":1747665849280,"duration":7},"status":"passed","severity":"normal"},{"uid":"8fdd87dfb0e009de","name":"should sync itineraries when provided with valid API key","time":{"start":1747665848092,"stop":1747665848095,"duration":3},"status":"passed","severity":"normal"},{"uid":"aef40972701a9be0","name":"should return paginated itineraries for both owned and shared when sharedBool is false","time":{"start":1747665845340,"stop":1747665845347,"duration":7},"status":"passed","severity":"normal"},{"uid":"e7a170c690ef2511","name":"should create an itinerary reminder and schedule the cron job","time":{"start":1747665847840,"stop":1747665847842,"duration":2},"status":"passed","severity":"normal"},{"uid":"6aa13ac25d1e1b4e","name":"should call verifyEmailChange service with correct parameters","time":{"start":1747665846695,"stop":1747665846696,"duration":1},"status":"passed","severity":"normal"},{"uid":"fa9208c603866d59","name":"should log an error and return if UMAMI_DISCORD_WEBHOOK_URL is not set","time":{"start":1747665847896,"stop":1747665847898,"duration":2},"status":"passed","severity":"normal"},{"uid":"c33f5bd38e292dd3","name":"should delete a tour from the index","time":{"start":1747665846053,"stop":1747665846055,"duration":2},"status":"passed","severity":"normal"},{"uid":"4d2b0e5f4786b7a","name":"should return list of countries","time":{"start":1747665849150,"stop":1747665849152,"duration":2},"status":"passed","severity":"normal"},{"uid":"9d29e50b5c19a918","name":"should return an array of itinerary reminders","time":{"start":1747665846426,"stop":1747665846432,"duration":6},"status":"passed","severity":"normal"},{"uid":"7cfba61fb74addc2","name":"should call authService.createUser and authService.sendVerification with correct data","time":{"start":1747665847266,"stop":1747665847269,"duration":3},"status":"passed","severity":"normal"},{"uid":"4efdc592b73bd3a2","name":"should get transaction status","time":{"start":1747665848718,"stop":1747665848720,"duration":2},"status":"passed","severity":"normal"},{"uid":"2933d3c5c682531","name":"should return a contingency plan with correctly mapped section numbers","time":{"start":1747665845527,"stop":1747665845530,"duration":3},"status":"passed","severity":"normal"},{"uid":"e3f0e270bfe857d4","name":"should return an array of payments","time":{"start":1747665849122,"stop":1747665849125,"duration":3},"status":"passed","severity":"normal"},{"uid":"4da1995a2a0f0e3a","name":"should allow page to be optional","time":{"start":1747665849252,"stop":1747665849253,"duration":1},"status":"passed","severity":"normal"},{"uid":"fee8931b8e1fde8","name":"should return an empty array if no tags are found","time":{"start":1747665845131,"stop":1747665845133,"duration":2},"status":"passed","severity":"normal"},{"uid":"7f5f77fdc2e23fb1","name":"should throw InternalServerErrorException on AI error","time":{"start":1747665848166,"stop":1747665848171,"duration":5},"status":"passed","severity":"normal"},{"uid":"5b20a0c7d444e7ad","name":"should return price range when API call is successful","time":{"start":1747665848429,"stop":1747665848432,"duration":3},"status":"passed","severity":"normal"},{"uid":"17bdc919feeaf418","name":"should throw UnauthorizedException if refresh token is invalid","time":{"start":1747665847262,"stop":1747665847266,"duration":4},"status":"passed","severity":"normal"},{"uid":"b074d5a4c9cc7b1e","name":"should return empty suggestions for short queries","time":{"start":1747665845255,"stop":1747665845273,"duration":18},"status":"passed","severity":"normal"},{"uid":"d4f06b54293222a2","name":"should throw an error when page number exceeds total pages","time":{"start":1747665845373,"stop":1747665845376,"duration":3},"status":"passed","severity":"normal"},{"uid":"a9a9f6480a327f6b","name":"should throw NotFoundException if the invitation does not exist","time":{"start":1747665845146,"stop":1747665845149,"duration":3},"status":"passed","severity":"normal"},{"uid":"3298f0e3a42a3b1","name":"should send login email if user exists","time":{"start":1747665847814,"stop":1747665847817,"duration":3},"status":"passed","severity":"normal"},{"uid":"9fc71a637202da0f","name":"should throw BadRequestException when sections validation fails","time":{"start":1747665845560,"stop":1747665845564,"duration":4},"status":"passed","severity":"normal"},{"uid":"e522762d91de5522","name":"should return a specific contingency plan","time":{"start":1747665845193,"stop":1747665845197,"duration":4},"status":"passed","severity":"normal"},{"uid":"7d2aabc4e454f7aa","name":"should be defined","time":{"start":1747665848826,"stop":1747665848841,"duration":15},"status":"passed","severity":"normal"},{"uid":"d3fd8e7488caf119","name":"should send invitations to the provided emails","time":{"start":1747665845420,"stop":1747665845422,"duration":2},"status":"passed","severity":"normal"},{"uid":"51921541d7946fdd","name":"should throw ForbiddenException if user is not the owner","time":{"start":1747665845582,"stop":1747665845585,"duration":3},"status":"passed","severity":"normal"},{"uid":"64224b317bba870e","name":"should throw BadRequestException if requesting too fast","time":{"start":1747665844267,"stop":1747665844275,"duration":8},"status":"passed","severity":"normal"},{"uid":"fb17c6733bfd3d78","name":"should send verification email if user exists","time":{"start":1747665844282,"stop":1747665844285,"duration":3},"status":"passed","severity":"normal"},{"uid":"9160351b863b884c","name":"should throw ForbiddenException if user is not the owner of the itinerary","time":{"start":1747665845424,"stop":1747665845427,"duration":3},"status":"passed","severity":"normal"},{"uid":"5c080a6eba0c8354","name":"should throw ForbiddenException if the user is not authorized to remove participants","time":{"start":1747665845178,"stop":1747665845183,"duration":5},"status":"passed","severity":"normal"},{"uid":"5934ed7bd8cd93da","name":"should search itineraries with the provided query and options","time":{"start":1747665846017,"stop":1747665846020,"duration":3},"status":"passed","severity":"normal"},{"uid":"171bd658db5d7a53","name":"should throw BadRequestException when date format is invalid","time":{"start":1747665845249,"stop":1747665845271,"duration":22},"status":"passed","severity":"normal"},{"uid":"59d2dceb2b4f2ce5","name":"should create an itinerary and return a formatted response","time":{"start":1747665844966,"stop":1747665844970,"duration":4},"status":"passed","severity":"normal"},{"uid":"3d0315411169baa0","name":"should handle missing fields gracefully","time":{"start":1747665845959,"stop":1747665845961,"duration":2},"status":"passed","severity":"normal"},{"uid":"a105c6900b18b70d","name":"should throw NotFoundException if itinerary is not found","time":{"start":1747665844955,"stop":1747665844959,"duration":4},"status":"passed","severity":"normal"},{"uid":"d08bdaa78f9f5983","name":"should return parsed feedback array from AI response","time":{"start":1747665848159,"stop":1747665848162,"duration":3},"status":"passed","severity":"normal"},{"uid":"a09ca0b7c69cb2ce","name":"should throw BadRequestException when duplicate section numbers are provided","time":{"start":1747665845192,"stop":1747665845196,"duration":4},"status":"passed","severity":"normal"},{"uid":"f4840b53faaf7f1d","name":"should throw NotFoundException if itinerary doesnt exist","time":{"start":1747665846462,"stop":1747665846465,"duration":3},"status":"passed","severity":"normal"},{"uid":"87538e0bab5a4b5d","name":"should return new access and refresh tokens if refresh token is valid","time":{"start":1747665844198,"stop":1747665844214,"duration":16},"status":"passed","severity":"normal"},{"uid":"fd9199f4975a07bb","name":"should throw InternalServerErrorException if Firebase token verification fails","time":{"start":1747665847324,"stop":1747665847332,"duration":8},"status":"passed","severity":"normal"},{"uid":"3ade69793758d352","name":"should handle empty sections","time":{"start":1747665848177,"stop":1747665848180,"duration":3},"status":"passed","severity":"normal"},{"uid":"b873af424a720b21","name":"should properly handle user without any itineraries","time":{"start":1747665845354,"stop":1747665845356,"duration":2},"status":"passed","severity":"normal"},{"uid":"5de76d642d7ec1c7","name":"should throw NotFoundException if contingency not found","time":{"start":1747665845215,"stop":1747665845218,"duration":3},"status":"passed","severity":"normal"},{"uid":"3508aee84ef39575","name":"should return 0 when there are no contingency plans","time":{"start":1747665845482,"stop":1747665845490,"duration":8},"status":"passed","severity":"normal"},{"uid":"e7b38dac3984b91e","name":"should return empty array when user has no itineraries","time":{"start":1747665846662,"stop":1747665846668,"duration":6},"status":"passed","severity":"normal"},{"uid":"91040a07d04908d3","name":"should return a single payment","time":{"start":1747665849125,"stop":1747665849128,"duration":3},"status":"passed","severity":"normal"},{"uid":"119a7c9b007e9f84","name":"should handle service errors correctly","time":{"start":1747665845036,"stop":1747665845038,"duration":2},"status":"passed","severity":"normal"},{"uid":"55b12896270823e2","name":"should return itinerary likes when getListItineraryLikes is called with a valid ID","time":{"start":1747665846668,"stop":1747665846673,"duration":5},"status":"passed","severity":"normal"},{"uid":"2146cec79bd2b89e","name":"should return \"Hello World!\"","time":{"start":1747665849298,"stop":1747665849303,"duration":5},"status":"passed","severity":"normal"},{"uid":"b79ec51440bf2d8b","name":"should invite a user to an itinerary and return a formatted response","time":{"start":1747665845134,"stop":1747665845136,"duration":2},"status":"passed","severity":"normal"},{"uid":"7a0e5997b0632cc1","name":"should be defined","time":{"start":1747665845884,"stop":1747665845928,"duration":44},"status":"passed","severity":"normal"},{"uid":"a25549296027b48f","name":"should throw ForbiddenException if user is not authorized","time":{"start":1747665845218,"stop":1747665845221,"duration":3},"status":"passed","severity":"normal"},{"uid":"b473c32c7eb66445","name":"should handle errors from the search service","time":{"start":1747665845250,"stop":1747665845252,"duration":2},"status":"passed","severity":"normal"},{"uid":"5c77a600ba209459","name":"should return empty itinerary array if no completed itineraries found","time":{"start":1747665845104,"stop":1747665845106,"duration":2},"status":"passed","severity":"normal"},{"uid":"88991465090cc13b","name":"should throw ForbiddenException when user is not the owner","time":{"start":1747665845302,"stop":1747665845304,"duration":2},"status":"passed","severity":"normal"},{"uid":"a8ef5a38049d0768","name":"should handle user with no itineraries","time":{"start":1747665845371,"stop":1747665845374,"duration":3},"status":"passed","severity":"normal"},{"uid":"4e3260fec751e472","name":"should throw BadRequestException when no sections are provided","time":{"start":1747665845186,"stop":1747665845191,"duration":5},"status":"passed","severity":"normal"},{"uid":"c2e6219c219e84c0","name":"should throw ForbiddenException if the user is not authorized to invite","time":{"start":1747665845140,"stop":1747665845142,"duration":2},"status":"passed","severity":"normal"},{"uid":"26dc1643dabcc83b","name":"should update a contingency plan and return a formatted response","time":{"start":1747665845212,"stop":1747665845215,"duration":3},"status":"passed","severity":"normal"},{"uid":"12c74ef059047ab9","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747665845408,"stop":1747665845412,"duration":4},"status":"passed","severity":"normal"},{"uid":"bda83cf7b1e4dd08","name":"should unsave the itinerary for the user","time":{"start":1747665845722,"stop":1747665845724,"duration":2},"status":"passed","severity":"normal"},{"uid":"f4096f424b3823a1","name":"should throw UnauthorizedException if token has expired","time":{"start":1747665848210,"stop":1747665848213,"duration":3},"status":"passed","severity":"normal"},{"uid":"8be6bda65c0f36b9","name":"should throw NotFoundException if contingency does not exist","time":{"start":1747665845682,"stop":1747665845691,"duration":9},"status":"passed","severity":"normal"},{"uid":"d4b0224d5ad94c42","name":"should throw an error when API call fails","time":{"start":1747665848435,"stop":1747665848437,"duration":2},"status":"passed","severity":"normal"},{"uid":"30aaf8830626e6a5","name":"should throw NotFoundException if itinerary doesnt exist","time":{"start":1747665846475,"stop":1747665846481,"duration":6},"status":"passed","severity":"normal"},{"uid":"dcc9dde64557934","name":"should add a tour to the index","time":{"start":1747665846040,"stop":1747665846042,"duration":2},"status":"passed","severity":"normal"},{"uid":"88a8ebc9ba2ba22","name":"should throw ForbiddenException if user is not the owner","time":{"start":1747665845097,"stop":1747665845100,"duration":3},"status":"passed","severity":"normal"},{"uid":"9883f4a889ccb680","name":"should return a list of transactions for a user","time":{"start":1747665845464,"stop":1747665845469,"duration":5},"status":"passed","severity":"normal"},{"uid":"a96af42db397a49f","name":"should throw BadRequestException if passwords do not match","time":{"start":1747665844300,"stop":1747665844303,"duration":3},"status":"passed","severity":"normal"},{"uid":"1be4f083955471a1","name":"should return 1 for missing dates","time":{"start":1747665846012,"stop":1747665846017,"duration":5},"status":"passed","severity":"normal"},{"uid":"307d4765b1a19569","name":"should update a contingency plan successfully","time":{"start":1747665845549,"stop":1747665845552,"duration":3},"status":"passed","severity":"normal"},{"uid":"e2287c92411549b1","name":"should be defined","time":{"start":1747665848894,"stop":1747665848905,"duration":11},"status":"passed","severity":"normal"},{"uid":"ecbe3fd9812e4cbc","name":"should cancel an existing scheduled email job","time":{"start":1747665846505,"stop":1747665846508,"duration":3},"status":"passed","severity":"normal"},{"uid":"6fb04dba5e82f3bd","name":"should throw UnauthorizedException for invalid ticket","time":{"start":1747665847826,"stop":1747665847829,"duration":3},"status":"passed","severity":"normal"},{"uid":"24d67584f97cfe7b","name":"should throw an error if placeId is not provided","time":{"start":1747665848403,"stop":1747665848418,"duration":15},"status":"passed","severity":"normal"},{"uid":"c3125729501d59d6","name":"should schedule a sendEmail job and verify it runs","time":{"start":1747665846482,"stop":1747665846486,"duration":4},"status":"passed","severity":"normal"},{"uid":"488c348891ed99ff","name":"should be defined","time":{"start":1747665849107,"stop":1747665849119,"duration":12},"status":"passed","severity":"normal"},{"uid":"abadf2ec7fcea41d","name":"should return itineraries shared with the user","time":{"start":1747665845359,"stop":1747665845366,"duration":7},"status":"passed","severity":"normal"},{"uid":"526ecc55f28a8037","name":"should return access and refresh tokens if login is successful","time":{"start":1747665844500,"stop":1747665844507,"duration":7},"status":"passed","severity":"normal"},{"uid":"129a8afa570a7f49","name":"should throw ForbiddenException when user is not the owner of the itinerary","time":{"start":1747665845412,"stop":1747665845415,"duration":3},"status":"passed","severity":"normal"},{"uid":"a42e8c4ef948ab7b","name":"should throw UnauthorizedException if firstNames do not match","time":{"start":1747665844293,"stop":1747665844296,"duration":3},"status":"passed","severity":"normal"},{"uid":"583b9ae2020f418b","name":"should handle when section is not found in the created itinerary","time":{"start":1747665845223,"stop":1747665845226,"duration":3},"status":"passed","severity":"normal"},{"uid":"b3f648d97eeba453","name":"should correctly count LOCATION blocks","time":{"start":1747665845384,"stop":1747665845390,"duration":6},"status":"passed","severity":"normal"},{"uid":"4342f3c146fa2a77","name":"should handle service errors for shared itineraries","time":{"start":1747665845045,"stop":1747665845048,"duration":3},"status":"passed","severity":"normal"},{"uid":"c41c7c08d2ecbe23","name":"should call service and return response","time":{"start":1747665847313,"stop":1747665847317,"duration":4},"status":"passed","severity":"normal"},{"uid":"43dac1168d50d2aa","name":"should return \"tidak diketahui\" for unknown option","time":{"start":1747665846523,"stop":1747665846525,"duration":2},"status":"passed","severity":"normal"},{"uid":"6f0055c016442915","name":"should mark itinerary as complete","time":{"start":1747665845396,"stop":1747665845399,"duration":3},"status":"passed","severity":"normal"},{"uid":"487688ad79a957b1","name":"should throw UnauthorizedException if token is invalid","time":{"start":1747665848197,"stop":1747665848200,"duration":3},"status":"passed","severity":"normal"},{"uid":"9a162a1cc0e24bfb","name":"should publish an itinerary and return success response","time":{"start":1747665845298,"stop":1747665845301,"duration":3},"status":"passed","severity":"normal"},{"uid":"c5e7a8826a83cb24","name":"should use existing admin instance when apps.length > 0","time":{"start":1747665844539,"stop":1747665844647,"duration":108},"status":"passed","severity":"normal"},{"uid":"9c602168cb680dcf","name":"should handle string dates","time":{"start":1747665846006,"stop":1747665846011,"duration":5},"status":"passed","severity":"normal"},{"uid":"a8b7050e43f9ea17","name":"should throw NotFoundException if the itinerary does not exist","time":{"start":1747665845453,"stop":1747665845459,"duration":6},"status":"passed","severity":"normal"},{"uid":"2adf80a2c2aaef57","name":"should throw BadRequestException when date format is invalid","time":{"start":1747665845132,"stop":1747665845180,"duration":48},"status":"passed","severity":"normal"},{"uid":"f07a00fb51fb42b9","name":"should return search suggestions based on query","time":{"start":1747665845253,"stop":1747665845255,"duration":2},"status":"passed","severity":"normal"},{"uid":"b73b8068eabf5b4c","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747665845422,"stop":1747665845424,"duration":2},"status":"passed","severity":"normal"},{"uid":"12442b8f35864f1e","name":"should return place details when placeId is valid","time":{"start":1747665848947,"stop":1747665848955,"duration":8},"status":"passed","severity":"normal"},{"uid":"707fe853c8335f11","name":"should search tours with the provided query and options","time":{"start":1747665846024,"stop":1747665846026,"duration":2},"status":"passed","severity":"normal"},{"uid":"e5409a6b3c9db658","name":"should throw BadRequestException if user does not exist","time":{"start":1747665844466,"stop":1747665844469,"duration":3},"status":"passed","severity":"normal"},{"uid":"f3f196cbb4c8df21","name":"should return success on successful Google login","time":{"start":1747665847306,"stop":1747665847309,"duration":3},"status":"passed","severity":"normal"},{"uid":"26a3d971c1a51ca3","name":"should transform page to a number","time":{"start":1747665849243,"stop":1747665849247,"duration":4},"status":"passed","severity":"normal"},{"uid":"87d44ae2318abd2f","name":"should return \"1 hari\" for ONE_DAY_BEFORE option","time":{"start":1747665846514,"stop":1747665846517,"duration":3},"status":"passed","severity":"normal"},{"uid":"9907b3f0fb161a01","name":"should handle various duration filters correctly","time":{"start":1747665846008,"stop":1747665846011,"duration":3},"status":"passed","severity":"normal"},{"uid":"c0862d630475cb1e","name":"should throw NotFoundException if itinerary reminder does not exist","time":{"start":1747665846465,"stop":1747665846468,"duration":3},"status":"passed","severity":"normal"},{"uid":"65ad141c6143693","name":"should return empty list if user has no itineraries","time":{"start":1747665845335,"stop":1747665845340,"duration":5},"status":"passed","severity":"normal"},{"uid":"6b344b74e332e79d","name":"should throw NotFoundException when contingency plan does not exist","time":{"start":1747665845531,"stop":1747665845534,"duration":3},"status":"passed","severity":"normal"},{"uid":"bc39fb711116eeab","name":"should create an itinerary with sections and blocks","time":{"start":1747665845116,"stop":1747665845125,"duration":9},"status":"passed","severity":"normal"},{"uid":"2ed8b83159fe7e24","name":"should return a user profile by id","time":{"start":1747665845356,"stop":1747665845360,"duration":4},"status":"passed","severity":"normal"},{"uid":"baa886dbf57c6f2a","name":"should throw BadRequestException if user already saved the itinerary","time":{"start":1747665845717,"stop":1747665845719,"duration":2},"status":"passed","severity":"normal"},{"uid":"fafca3ec1077d3f5","name":"should search tours with default parameters","time":{"start":1747665845999,"stop":1747665846001,"duration":2},"status":"passed","severity":"normal"},{"uid":"c0d44e73c30c3bd8","name":"should successfully change user email after verification","time":{"start":1747665845438,"stop":1747665845441,"duration":3},"status":"passed","severity":"normal"},{"uid":"90de152d3ec4b277","name":"should throw BadRequestException when new password and confirmation do not match","time":{"start":1747665845447,"stop":1747665845450,"duration":3},"status":"passed","severity":"normal"},{"uid":"12be76db0be3d5d7","name":"should throw NotFoundException if the user to be removed is not a participant","time":{"start":1747665845469,"stop":1747665845475,"duration":6},"status":"passed","severity":"normal"},{"uid":"9f9efc3cb87aa79","name":"should return a string indicating a new payment was added","time":{"start":1747665849108,"stop":1747665849110,"duration":2},"status":"passed","severity":"normal"},{"uid":"d77254e957029e86","name":"should create a payment","time":{"start":1747665849120,"stop":1747665849122,"duration":2},"status":"passed","severity":"normal"},{"uid":"8d80d20754e91930","name":"should handle service errors properly","time":{"start":1747665848120,"stop":1747665848123,"duration":3},"status":"passed","severity":"normal"},{"uid":"842d5b198facbf79","name":"should return empty data when there are no shared itineraries","time":{"start":1747665845042,"stop":1747665845044,"duration":2},"status":"passed","severity":"normal"},{"uid":"ae4e6bccab9fbdf0","name":"should handle document not found gracefully","time":{"start":1747665846056,"stop":1747665846058,"duration":2},"status":"passed","severity":"normal"},{"uid":"bf4659af207e2c0a","name":"should parse JSON even if AI returns extra text","time":{"start":1747665848163,"stop":1747665848166,"duration":3},"status":"passed","severity":"normal"},{"uid":"d6d3476af23a429c","name":"should publish the itinerary if all checks pass","time":{"start":1747665845565,"stop":1747665845574,"duration":9},"status":"passed","severity":"normal"},{"uid":"451978036336b1b6","name":"should create a new user if user does not exist","time":{"start":1747665844249,"stop":1747665844254,"duration":5},"status":"passed","severity":"normal"},{"uid":"7b4ded759f79dd6a","name":"should pass search parameters to the service","time":{"start":1747665847333,"stop":1747665847338,"duration":5},"status":"passed","severity":"normal"},{"uid":"24f155ef9f893d91","name":"should return access and refresh tokens if login is successful","time":{"start":1747665844167,"stop":1747665844185,"duration":18},"status":"passed","severity":"normal"},{"uid":"a1d6aa2c12d0fb9d","name":"should handle null result from itineraryTag.findMany","time":{"start":1747665845758,"stop":1747665845761,"duration":3},"status":"passed","severity":"normal"},{"uid":"cf4025625e09c5e","name":"should update an itinerary with defaults for deleted/missing fields","time":{"start":1747665845233,"stop":1747665845237,"duration":4},"status":"passed","severity":"normal"},{"uid":"e98074dff9cef3fc","name":"should return validation error if page is negative","time":{"start":1747665849248,"stop":1747665849252,"duration":4},"status":"passed","severity":"normal"},{"uid":"e6e10be19fd42ee8","name":"should send analytics data to Discord","time":{"start":1747665847891,"stop":1747665847894,"duration":3},"status":"passed","severity":"normal"},{"uid":"c00505b6443d976f","name":"should throw a BadRequestException on jobs with date in past","time":{"start":1747665846494,"stop":1747665846498,"duration":4},"status":"passed","severity":"normal"},{"uid":"ebf43aa122133fcf","name":"should return a string indicating a payment was removed","time":{"start":1747665849117,"stop":1747665849119,"duration":2},"status":"passed","severity":"normal"},{"uid":"1d12938609999b6b","name":"should throw NotFoundException if verification code is not found","time":{"start":1747665844470,"stop":1747665844473,"duration":3},"status":"passed","severity":"normal"},{"uid":"34d2ac131c2b7987","name":"should return shared itineraries successfully","time":{"start":1747665845039,"stop":1747665845041,"duration":2},"status":"passed","severity":"normal"},{"uid":"980f9c6a4e5bc5","name":"should search itineraries with custom pagination","time":{"start":1747665845592,"stop":1747665845597,"duration":5},"status":"passed","severity":"normal"},{"uid":"6b021cf5ddf9f8d","name":"should successfully generate and send verification code","time":{"start":1747665845401,"stop":1747665845404,"duration":3},"status":"passed","severity":"normal"},{"uid":"53dc58c4b4d0caf5","name":"should fetch an itinerary reminder and return OK when found","time":{"start":1747665847848,"stop":1747665847850,"duration":2},"status":"passed","severity":"normal"},{"uid":"7f6d442117a1c2fb","name":"should propagate errors from _verifyChangeEmailTicket","time":{"start":1747665845441,"stop":1747665845444,"duration":3},"status":"passed","severity":"normal"},{"uid":"1f81024330ca23aa","name":"should calculate scheduled date correctly","time":{"start":1747665846498,"stop":1747665846501,"duration":3},"status":"passed","severity":"normal"},{"uid":"5d0e4faf1729f2c1","name":"should throw UnauthorizedException if user is not found","time":{"start":1747665843994,"stop":1747665844149,"duration":155},"status":"passed","severity":"normal"},{"uid":"2d8451061b87400f","name":"should throw NotFoundException if tour doesnt exist","time":{"start":1747665845639,"stop":1747665845642,"duration":3},"status":"passed","severity":"normal"},{"uid":"3278264eedf9545","name":"should be defined","time":{"start":1747665848076,"stop":1747665848091,"duration":15},"status":"passed","severity":"normal"},{"uid":"bb3a85cd7afb4c74","name":"should update user and send registration email if verification is successful","time":{"start":1747665844449,"stop":1747665844458,"duration":9},"status":"passed","severity":"normal"},{"uid":"810232728c4bad5f","name":"should check saved status of public itinerary ids for the user","time":{"start":1747665845734,"stop":1747665845736,"duration":2},"status":"passed","severity":"normal"},{"uid":"9e2b1dde4f2daac3","name":"should select a contingency plan and unselect others","time":{"start":1747665845540,"stop":1747665845543,"duration":3},"status":"passed","severity":"normal"},{"uid":"f3f7d057757f3135","name":"should pass errors from service to the caller","time":{"start":1747665845337,"stop":1747665845341,"duration":4},"status":"passed","severity":"normal"},{"uid":"79fe3b8c727b3d49","name":"should throw UnauthorizedException if user not found","time":{"start":1747665848758,"stop":1747665848762,"duration":4},"status":"passed","severity":"normal"},{"uid":"359476627180dca1","name":"should be defined","time":{"start":1747665848684,"stop":1747665848696,"duration":12},"status":"passed","severity":"normal"},{"uid":"32f9909f70d1bb3e","name":"should throw NotFoundException if referral code is not found","time":{"start":1747665847799,"stop":1747665847803,"duration":4},"status":"passed","severity":"normal"},{"uid":"8c44046c804df091","name":"should return a profile when findOne is called with a valid ID","time":{"start":1747665846656,"stop":1747665846659,"duration":3},"status":"passed","severity":"normal"},{"uid":"9d4c57cce50c8c57","name":"should return itineraries successfully","time":{"start":1747665845081,"stop":1747665845083,"duration":2},"status":"passed","severity":"normal"},{"uid":"856b70398051488a","name":"should update user password and send success password reset email if verification is successful","time":{"start":1747665844480,"stop":1747665844484,"duration":4},"status":"passed","severity":"normal"},{"uid":"541d64baee0dd0","name":"should return a string indicating a payment was updated","time":{"start":1747665849115,"stop":1747665849117,"duration":2},"status":"passed","severity":"normal"},{"uid":"f6c9e87a6689ac2e","name":"should throw BadRequestException when requesting too soon","time":{"start":1747665845414,"stop":1747665845417,"duration":3},"status":"passed","severity":"normal"},{"uid":"d39db08c499a1766","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747665845707,"stop":1747665845710,"duration":3},"status":"passed","severity":"normal"},{"uid":"2d3dceeba6fddfd0","name":"should handle document not found gracefully","time":{"start":1747665846048,"stop":1747665846050,"duration":2},"status":"passed","severity":"normal"},{"uid":"a3214355fa74ea32","name":"should throw BadRequestException when ticket has expired","time":{"start":1747665844296,"stop":1747665844300,"duration":4},"status":"passed","severity":"normal"},{"uid":"23094d713aecc89d","name":"should fetch tours and index them","time":{"start":1747665845977,"stop":1747665845980,"duration":3},"status":"passed","severity":"normal"},{"uid":"5c9b37c819c7a9ce","name":"should throw UnauthorizedException if password is incorrect","time":{"start":1747665847255,"stop":1747665847258,"duration":3},"status":"passed","severity":"normal"},{"uid":"8069c5f0bce565b","name":"should be defined","time":{"start":1747665847735,"stop":1747665847759,"duration":24},"status":"passed","severity":"normal"},{"uid":"9e324e342b35c4e8","name":"should throw BadRequestException if emails do not match","time":{"start":1747665844652,"stop":1747665844654,"duration":2},"status":"passed","severity":"normal"},{"uid":"ccce0e7966243f70","name":"should return the pre-register count","time":{"start":1747665848846,"stop":1747665848848,"duration":2},"status":"passed","severity":"normal"},{"uid":"b128a4482f0c043b","name":"should return 1 when there is one contingency plan","time":{"start":1747665845491,"stop":1747665845501,"duration":10},"status":"passed","severity":"normal"},{"uid":"494d914cc870f416","name":"should remove an itinerary reminder","time":{"start":1747665846468,"stop":1747665846475,"duration":7},"status":"passed","severity":"normal"},{"uid":"faae7b6dc8a598ef","name":"should delete the oldest ticket if more than 5 exist","time":{"start":1747665847845,"stop":1747665847848,"duration":3},"status":"passed","severity":"normal"},{"uid":"5b563558376a2b49","name":"should call authService.sendPasswordResetVerification with correct data","time":{"start":1747665847287,"stop":1747665847292,"duration":5},"status":"passed","severity":"normal"},{"uid":"f47ac2a21c0d5fc1","name":"should throw UnauthorizedException if emails do not match","time":{"start":1747665844473,"stop":1747665844476,"duration":3},"status":"passed","severity":"normal"},{"uid":"9e0676626122f0de","name":"should call authService.resetPassword with correct data","time":{"start":1747665847303,"stop":1747665847306,"duration":3},"status":"passed","severity":"normal"},{"uid":"24a1b69e7f32c4f5","name":"should throw ConflictException if user already exists","time":{"start":1747665844508,"stop":1747665844511,"duration":3},"status":"passed","severity":"normal"},{"uid":"43f195d04ae3a9bc","name":"should throw BadRequestException if email is already registered","time":{"start":1747665847788,"stop":1747665847799,"duration":11},"status":"passed","severity":"normal"},{"uid":"49d049f77e696de5","name":"should pass user object directly to service","time":{"start":1747665845357,"stop":1747665845359,"duration":2},"status":"passed","severity":"normal"},{"uid":"ab563175ede7473d","name":"should throw NotFoundException if the user to be removed does not exist","time":{"start":1747665845169,"stop":1747665845177,"duration":8},"status":"passed","severity":"normal"},{"uid":"82a02822469b07fb","name":"should unsave the itinerary for the user","time":{"start":1747665845334,"stop":1747665845337,"duration":3},"status":"passed","severity":"normal"},{"uid":"437818912d252868","name":"should throw UnauthorizedException if token is not provided","time":{"start":1747665848189,"stop":1747665848196,"duration":7},"status":"passed","severity":"normal"},{"uid":"de8bd642a5d3e4f5","name":"should handle undefined tour gracefully","time":{"start":1747665846043,"stop":1747665846045,"duration":2},"status":"passed","severity":"normal"},{"uid":"197d03a3799c331e","name":"should unpublish the itinerary and remove from search index","time":{"start":1747665845575,"stop":1747665845578,"duration":3},"status":"passed","severity":"normal"},{"uid":"33e4f5ec46a8e4d3","name":"should not create route when routeToNext is undefined or null","time":{"start":1747665845203,"stop":1747665845207,"duration":4},"status":"passed","severity":"normal"},{"uid":"768e40f3ce1ad4cd","name":"should throw NotFoundException if the itinerary does not exist","time":{"start":1747665845137,"stop":1747665845139,"duration":2},"status":"passed","severity":"normal"},{"uid":"9ce8a05e46693476","name":"should return tour title suggestions","time":{"start":1747665847344,"stop":1747665847363,"duration":19},"status":"passed","severity":"normal"},{"uid":"dcf7539dd234e7aa","name":"should handle names from Firebase correctly","time":{"start":1747665844516,"stop":1747665844520,"duration":4},"status":"passed","severity":"normal"},{"uid":"f75519f62972bf51","name":"should throw NotFoundException if itinerary not found","time":{"start":1747665845203,"stop":1747665845206,"duration":3},"status":"passed","severity":"normal"},{"uid":"64b82d9593c36519","name":"should return user referral code and count","time":{"start":1747665847832,"stop":1747665847835,"duration":3},"status":"passed","severity":"normal"},{"uid":"7e231922fe3ca986","name":"should throw ForbiddenException if user does not own the itinerary and the itinerary is not public","time":{"start":1747665845661,"stop":1747665845666,"duration":5},"status":"passed","severity":"normal"},{"uid":"b003802e1d8a8001","name":"should remove a payment","time":{"start":1747665849133,"stop":1747665849135,"duration":2},"status":"passed","severity":"normal"},{"uid":"7863132d4b8da8ea","name":"should throw NotFoundException if associated itinerary's reminder does not exist","time":{"start":1747665846443,"stop":1747665846458,"duration":15},"status":"passed","severity":"normal"},{"uid":"eb19ce54d78f85b4","name":"should accept an itinerary invitation","time":{"start":1747665845143,"stop":1747665845146,"duration":3},"status":"passed","severity":"normal"},{"uid":"1078b38fd1fb7e68","name":"should search itineraries with tags filter","time":{"start":1747665845238,"stop":1747665845240,"duration":2},"status":"passed","severity":"normal"},{"uid":"b71a14a9e46de7f6","name":"should create an itinerary without tags","time":{"start":1747665844977,"stop":1747665844981,"duration":4},"status":"passed","severity":"normal"},{"uid":"74605b0f2d3fb3e3","name":"should search itineraries with query and page parameters","time":{"start":1747665845235,"stop":1747665845237,"duration":2},"status":"passed","severity":"normal"},{"uid":"86e4825e73fc12ca","name":"should return completed itineraries with locationCount","time":{"start":1747665845376,"stop":1747665845384,"duration":8},"status":"passed","severity":"normal"},{"uid":"3abdad85f046b5e1","name":"should return list of countries","time":{"start":1747665848515,"stop":1747665848518,"duration":3},"status":"passed","severity":"normal"},{"uid":"50428b96162d9e0a","name":"should throw BadRequestException when no sections are provided","time":{"start":1747665845289,"stop":1747665845292,"duration":3},"status":"passed","severity":"normal"},{"uid":"333744ff3bed05e9","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747665845094,"stop":1747665845096,"duration":2},"status":"passed","severity":"normal"},{"uid":"ff044961464ed31a","name":"should throw UnauthorizedException when API key is missing","time":{"start":1747665848103,"stop":1747665848107,"duration":4},"status":"passed","severity":"normal"},{"uid":"3f66d15c5d8aec41","name":"should call geminiService.generateFeedback with valid dto","time":{"start":1747665848909,"stop":1747665848912,"duration":3},"status":"passed","severity":"normal"},{"uid":"407091105b83763a","name":"should handle null or undefined tour and return null","time":{"start":1747665845961,"stop":1747665845965,"duration":4},"status":"passed","severity":"normal"},{"uid":"e0e826f3618445d3","name":"should throw BadRequestException when ticket has expired","time":{"start":1747665844477,"stop":1747665844479,"duration":2},"status":"passed","severity":"normal"},{"uid":"173ca331cb627b3f","name":"should throw UnauthorizedException if user has no access to the itinerary","time":{"start":1747665845643,"stop":1747665845649,"duration":6},"status":"passed","severity":"normal"},{"uid":"ad402bacd86ad1a","name":"should send password reset verification email if user exists and has email registered","time":{"start":1747665844462,"stop":1747665844465,"duration":3},"status":"passed","severity":"normal"},{"uid":"865a519542cfddfc","name":"should throw other errors","time":{"start":1747665846058,"stop":1747665846061,"duration":3},"status":"passed","severity":"normal"},{"uid":"2b34df94ceb2b2c5","name":"should throw NotFoundException when ticket is not found","time":{"start":1747665845423,"stop":1747665845432,"duration":9},"status":"passed","severity":"normal"},{"uid":"8753b9bc188d8ec2","name":"should throw ConflictException if user already exists and is confirmed","time":{"start":1747665844229,"stop":1747665844239,"duration":10},"status":"passed","severity":"normal"},{"uid":"37380b87fa3e0e91","name":"should return \"1 jam\" for ONE_HOUR_BEFORE option","time":{"start":1747665846518,"stop":1747665846520,"duration":2},"status":"passed","severity":"normal"},{"uid":"a8623690937b82c","name":"should still return even if user has not liked any itinerary on the list","time":{"start":1747665845737,"stop":1747665845739,"duration":2},"status":"passed","severity":"normal"},{"uid":"64f1a0cf9b9f7c54","name":"should update an itinerary with defaults for missing block fields","time":{"start":1747665845237,"stop":1747665845241,"duration":4},"status":"passed","severity":"normal"},{"uid":"151aa627438dd392","name":"should throw NotFoundException if verification code is not found","time":{"start":1747665844286,"stop":1747665844289,"duration":3},"status":"passed","severity":"normal"},{"uid":"77112a61afbcbc65","name":"should create itinerary and tour indexes if they do not exist","time":{"start":1747665845932,"stop":1747665845937,"duration":5},"status":"passed","severity":"normal"},{"uid":"82d292a7b84c4b27","name":"should return the authenticated user","time":{"start":1747665847283,"stop":1747665847286,"duration":3},"status":"passed","severity":"normal"},{"uid":"7f8d585f98f0b761","name":"should return tour with itinerary when found","time":{"start":1747665846019,"stop":1747665846023,"duration":4},"status":"passed","severity":"normal"},{"uid":"2431960e29127591","name":"should send an email successfully","time":{"start":1747665849280,"stop":1747665849282,"duration":2},"status":"passed","severity":"normal"},{"uid":"f21d27324de5021a","name":"should generate the correct signature","time":{"start":1747665848486,"stop":1747665848488,"duration":2},"status":"passed","severity":"normal"},{"uid":"fd2dec45ca66ed47","name":"should search itineraries with day count range filters","time":{"start":1747665845240,"stop":1747665845243,"duration":3},"status":"passed","severity":"normal"},{"uid":"eed4e98fcee086b5","name":"should throw BadRequestException if user does not have the itinerary saved","time":{"start":1747665845731,"stop":1747665845733,"duration":2},"status":"passed","severity":"normal"},{"uid":"a4c927d6c05c075c","name":"should filter itineraries with shared=false and finished=false","time":{"start":1747665845034,"stop":1747665845035,"duration":1},"status":"passed","severity":"normal"},{"uid":"38a8e1a3b2dc3803","name":"should correctly calculate totalDestinations when sections is empty","time":{"start":1747665845391,"stop":1747665845393,"duration":2},"status":"passed","severity":"normal"},{"uid":"6fbcffa978b8cfa9","name":"should only update specified fields","time":{"start":1747665845395,"stop":1747665845398,"duration":3},"status":"passed","severity":"normal"},{"uid":"af70841667f84b49","name":"should search itineraries with filters","time":{"start":1747665845598,"stop":1747665845600,"duration":2},"status":"passed","severity":"normal"},{"uid":"af223f15f9a1c3b","name":"should not index if no published itineraries","time":{"start":1747665845972,"stop":1747665845975,"duration":3},"status":"passed","severity":"normal"},{"uid":"3a64b90df436949a","name":"should throw UnauthorizedException when provided with invalid API key","time":{"start":1747665848095,"stop":1747665848102,"duration":7},"status":"passed","severity":"normal"},{"uid":"d27a10d182a9d40d","name":"should return \"10 menit\" for TEN_MINUTES_BEFORE option","time":{"start":1747665846520,"stop":1747665846522,"duration":2},"status":"passed","severity":"normal"},{"uid":"cf42fa47de58c261","name":"should update only the fields provided in the DTO","time":{"start":1747665846685,"stop":1747665846687,"duration":2},"status":"passed","severity":"normal"},{"uid":"86b4fcbf76132949","name":"should throw BadRequestException when user is not authorized","time":{"start":1747665846070,"stop":1747665846073,"duration":3},"status":"passed","severity":"normal"},{"uid":"73103020f57a8c12","name":"should validate user if refresh token is valid","time":{"start":1747665848755,"stop":1747665848758,"duration":3},"status":"passed","severity":"normal"},{"uid":"4e8d3ed2bda5855c","name":"should handle service errors properly","time":{"start":1747665848107,"stop":1747665848110,"duration":3},"status":"passed","severity":"normal"},{"uid":"fb51e8b9739b0b14","name":"should throw ConflictException if user already exists during Google registration","time":{"start":1747665847320,"stop":1747665847324,"duration":4},"status":"passed","severity":"normal"},{"uid":"a634c6e09a426574","name":"should call remove() in the service and delete an itinerary","time":{"start":1747665845120,"stop":1747665845122,"duration":2},"status":"passed","severity":"normal"},{"uid":"2a7b16ce08656de0","name":"should throw ForbiddenException if user is not the owner","time":{"start":1747665845402,"stop":1747665845405,"duration":3},"status":"passed","severity":"normal"},{"uid":"1219c263cae3cd52","name":"should return transaction history when getTransactionHistory is called with a valid user","time":{"start":1747665846719,"stop":1747665846721,"duration":2},"status":"passed","severity":"normal"},{"uid":"282118b0745e1fa1","name":"should update an itinerary reminder","time":{"start":1747665846459,"stop":1747665846462,"duration":3},"status":"passed","severity":"normal"},{"uid":"944af89a60d86476","name":"should throw BadRequestException if email is already in use","time":{"start":1747665845408,"stop":1747665845410,"duration":2},"status":"passed","severity":"normal"},{"uid":"5e451eff5827a7db","name":"should throw BadRequestException when there are more than 2 contingency plans","time":{"start":1747665845509,"stop":1747665845512,"duration":3},"status":"passed","severity":"normal"},{"uid":"da3dadc3fcaef5c7","name":"should handle time components correctly","time":{"start":1747665846004,"stop":1747665846006,"duration":2},"status":"passed","severity":"normal"},{"uid":"b3b3856680eee572","name":"should handle undefined itinerary gracefully","time":{"start":1747665846037,"stop":1747665846040,"duration":3},"status":"passed","severity":"normal"},{"uid":"a7bdde5dbd4e02fa","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747665845399,"stop":1747665845401,"duration":2},"status":"passed","severity":"normal"},{"uid":"b457b0efb59d52c8","name":"should throw ForbiddenException if user does not own the itinerary","time":{"start":1747665845523,"stop":1747665845526,"duration":3},"status":"passed","severity":"normal"},{"uid":"e5e3c2985493b956","name":"should initialize Snap and CoreApi with correct configuration","time":{"start":1747665848697,"stop":1747665848699,"duration":2},"status":"passed","severity":"normal"},{"uid":"af0a9a6fbb62600a","name":"should throw ForbiddenException if the user is not authorized to accept the invitation","time":{"start":1747665845149,"stop":1747665845152,"duration":3},"status":"passed","severity":"normal"},{"uid":"ee0ec59f27be1419","name":"should return itinerary when found and user has access to it","time":{"start":1747665845310,"stop":1747665845314,"duration":4},"status":"passed","severity":"normal"},{"uid":"4106ba35afd2a61a","name":"should throw BadRequestException if user's email is not registered","time":{"start":1747665844491,"stop":1747665844494,"duration":3},"status":"passed","severity":"normal"},{"uid":"b1964cf0788ef70a","name":"should throw NotFoundException when tags do not exist","time":{"start":1747665845197,"stop":1747665845202,"duration":5},"status":"passed","severity":"normal"},{"uid":"39cad5301489f1c0","name":"should return access and refresh tokens on successful login","time":{"start":1747665847199,"stop":1747665847250,"duration":51},"status":"passed","severity":"normal"},{"uid":"5e1e95540b53157d","name":"should throw NotFoundException when itinerary does not exist","time":{"start":1747665845300,"stop":1747665845302,"duration":2},"status":"passed","severity":"normal"},{"uid":"d5dbb8f4d765474e","name":"should return new access and refresh tokens","time":{"start":1747665847258,"stop":1747665847262,"duration":4},"status":"passed","severity":"normal"},{"uid":"b86420e12127225","name":"should search itineraries with default parameters","time":{"start":1747665845232,"stop":1747665845234,"duration":2},"status":"passed","severity":"normal"},{"uid":"9c7585cd6e028b73","name":"should throw ForbiddenException if user doesnt have access to itinerary","time":{"start":1747665845711,"stop":1747665845713,"duration":2},"status":"passed","severity":"normal"},{"uid":"711cca02d7072650","name":"should throw an error if itinerary is not found","time":{"start":1747665845123,"stop":1747665845126,"duration":3},"status":"passed","severity":"normal"},{"uid":"c93c6766d256ccd6","name":"should return only completed itineraries when finishedBool is true","time":{"start":1747665845351,"stop":1747665845353,"duration":2},"status":"passed","severity":"normal"},{"uid":"84a4e2eaacee0efa","name":"should update a profile when called with valid ID and data","time":{"start":1747665846679,"stop":1747665846685,"duration":6},"status":"passed","severity":"normal"},{"uid":"9dda9d3700f1d77f","name":"should throw BadRequestException on improper reminder option","time":{"start":1747665846502,"stop":1747665846504,"duration":2},"status":"passed","severity":"normal"},{"uid":"5abb537f315e9fee","name":"should handle negative page numbers","time":{"start":1747665845329,"stop":1747665845331,"duration":2},"status":"passed","severity":"normal"},{"uid":"27c9362cc11b310","name":"should call authService.verify with correct data","time":{"start":1747665847270,"stop":1747665847273,"duration":3},"status":"passed","severity":"normal"},{"uid":"f3ed620e8b9ef9e1","name":"should duplicate an itinerary with default fields succesfully","time":{"start":1747665845654,"stop":1747665845657,"duration":3},"status":"passed","severity":"normal"},{"uid":"46baa7a5091377a8","name":"should throw BadRequestException when duplicate section numbers are provided","time":{"start":1747665845293,"stop":1747665845296,"duration":3},"status":"passed","severity":"normal"},{"uid":"4dfb92458e5f0029","name":"should be defined","time":{"start":1747665848140,"stop":1747665848158,"duration":18},"status":"passed","severity":"normal"},{"uid":"7e3a2d9eca1a8c30","name":"should throw UnauthorizedException if refresh token is blacklisted","time":{"start":1747665844189,"stop":1747665844195,"duration":6},"status":"passed","severity":"normal"},{"uid":"76b4a44b7747478c","name":"should throw NotFoundException when tour is not found","time":{"start":1747665846042,"stop":1747665846046,"duration":4},"status":"passed","severity":"normal"},{"uid":"c7738dfdc90581b9","name":"should update a payment","time":{"start":1747665849128,"stop":1747665849133,"duration":5},"status":"passed","severity":"normal"},{"uid":"7b6edce41842c690","name":"should be defined","time":{"start":1747665847846,"stop":1747665847876,"duration":30},"status":"passed","severity":"normal"},{"uid":"df0d09cbf9a2cff1","name":"should successfully generate a change email ticket","time":{"start":1747665845411,"stop":1747665845414,"duration":3},"status":"passed","severity":"normal"},{"uid":"3e856b0fb115eb","name":"should handle missing price range data","time":{"start":1747665848432,"stop":1747665848434,"duration":2},"status":"passed","severity":"normal"},{"uid":"baf0b9a54c514f53","name":"should return tour with null itinerary if itinerary not found","time":{"start":1747665846031,"stop":1747665846033,"duration":2},"status":"passed","severity":"normal"},{"uid":"e30c39a802c3a31a","name":"should throw ForbiddenException if the user is not the owner of the itinerary","time":{"start":1747665845462,"stop":1747665845468,"duration":6},"status":"passed","severity":"normal"},{"uid":"b11de92b5c9cfa3a","name":"should throw ConflictException if itinerary reminder already exist","time":{"start":1747665846419,"stop":1747665846425,"duration":6},"status":"passed","severity":"normal"},{"uid":"c551433ba16f25f8","name":"should fetch analytics data and send to Discord","time":{"start":1747665847877,"stop":1747665847882,"duration":5},"status":"passed","severity":"normal"},{"uid":"13b7735485e8045b","name":"should be defined","time":{"start":1747665848162,"stop":1747665848181,"duration":19},"status":"passed","severity":"normal"},{"uid":"87ca2f227f60efa0","name":"should handle NotFoundException if service throws it","time":{"start":1747665846724,"stop":1747665846727,"duration":3},"status":"passed","severity":"normal"},{"uid":"3bc3e7c1df990f22","name":"should return paginated itineraries","time":{"start":1747665845325,"stop":1747665845328,"duration":3},"status":"passed","severity":"normal"},{"uid":"a329062e2cf97611","name":"should throw UnauthorizedException if user not found","time":{"start":1747665848203,"stop":1747665848206,"duration":3},"status":"passed","severity":"normal"},{"uid":"9f110c08b7f24bc6","name":"should return success response when email change verification is successful","time":{"start":1747665846697,"stop":1747665846707,"duration":10},"status":"passed","severity":"normal"},{"uid":"d88f274c7ba7a61e","name":"should filter itineraries with shared=true and finished=true","time":{"start":1747665845031,"stop":1747665845033,"duration":2},"status":"passed","severity":"normal"},{"uid":"7df44509b8807d42","name":"should link a user account with Firebase and return success","time":{"start":1747665847333,"stop":1747665847346,"duration":13},"status":"passed","severity":"normal"},{"uid":"a6c7d819ae4fa3b9","name":"should return empty data when user has no shared itineraries","time":{"start":1747665845367,"stop":1747665845369,"duration":2},"status":"passed","severity":"normal"},{"uid":"b3ccf890ebfb8d84","name":"should be defined","time":{"start":1747665848741,"stop":1747665848752,"duration":11},"status":"passed","severity":"normal"},{"uid":"632943f044bfc492","name":"should return empty suggestions for short queries","time":{"start":1747665847339,"stop":1747665847343,"duration":4},"status":"passed","severity":"normal"},{"uid":"7ce4b988c1e3007e","name":"should throw NotFoundException if itineraryId is not found when accepting an invitation","time":{"start":1747665845436,"stop":1747665845439,"duration":3},"status":"passed","severity":"normal"},{"uid":"eec79dd84064a9c","name":"should create a properly formatted prompt with all data types","time":{"start":1747665848171,"stop":1747665848174,"duration":3},"status":"passed","severity":"normal"},{"uid":"6ab1aaed2b23a789","name":"should remove a user from an itinerary and return a formatted response","time":{"start":1747665845152,"stop":1747665845155,"duration":3},"status":"passed","severity":"normal"},{"uid":"ee33c39c388672da","name":"should return place details with price range when successful","time":{"start":1747665848422,"stop":1747665848425,"duration":3},"status":"passed","severity":"normal"},{"uid":"95c9df9223708540","name":"should call service.getReferralCode with the correct userId","time":{"start":1747665848855,"stop":1747665848859,"duration":4},"status":"passed","severity":"normal"},{"uid":"89bf49318e781e13","name":"should handle empty results when user has no itineraries or views","time":{"start":1747665845751,"stop":1747665845754,"duration":3},"status":"passed","severity":"normal"},{"uid":"43bafd0a31b1764f","name":"should be defined","time":{"start":1747665848503,"stop":1747665848515,"duration":12},"status":"passed","severity":"normal"},{"uid":"76ab5ae0016f9da0","name":"should mark itinerary as complete","time":{"start":1747665845091,"stop":1747665845093,"duration":2},"status":"passed","severity":"normal"},{"uid":"d0a4986869550ebf","name":"should return empty array when no recommended itineraries are found","time":{"start":1747665845347,"stop":1747665845350,"duration":3},"status":"passed","severity":"normal"},{"uid":"a225fe78ba3d9ed0","name":"should throw BadRequestException if user is not found","time":{"start":1747665847836,"stop":1747665847838,"duration":2},"status":"passed","severity":"normal"},{"uid":"13af82f1cb52e7d5","name":"should return an array of tags","time":{"start":1747665845416,"stop":1747665845418,"duration":2},"status":"passed","severity":"normal"},{"uid":"d5642ea83aa5c905","name":"should be defined","time":{"start":1747665845929,"stop":1747665845972,"duration":43},"status":"passed","severity":"normal"},{"uid":"dff0e750e01593f","name":"should throw NotFoundException if user does not exist","time":{"start":1747665844494,"stop":1747665844500,"duration":6},"status":"passed","severity":"normal"},{"uid":"246949bae2a9ff2b","name":"should correctly format an itinerary for indexing","time":{"start":1747665845940,"stop":1747665845943,"duration":3},"status":"passed","severity":"normal"},{"uid":"1ad43bc3d9f80146","name":"should verify a Firebase token and return user data","time":{"start":1747665844524,"stop":1747665844529,"duration":5},"status":"passed","severity":"normal"},{"uid":"df0d9297fa37893d","name":"should call changePassword service with correct parameters","time":{"start":1747665846708,"stop":1747665846710,"duration":2},"status":"passed","severity":"normal"},{"uid":"ced5b3c8c995364a","name":"should throw NotFoundException if user does not exist","time":{"start":1747665844655,"stop":1747665844657,"duration":2},"status":"passed","severity":"normal"},{"uid":"e449ba3fdddd27b4","name":"should search with custom sort parameters","time":{"start":1747665845601,"stop":1747665845604,"duration":3},"status":"passed","severity":"normal"},{"uid":"7d09fddc60c157b5","name":"should throw UnauthorizedException when ticket does not belong to the user","time":{"start":1747665845432,"stop":1747665845434,"duration":2},"status":"passed","severity":"normal"},{"uid":"9cfdd81e3b7530e7","name":"should throw NotFoundException if itinerary doesnt exist","time":{"start":1747665845636,"stop":1747665845638,"duration":2},"status":"passed","severity":"normal"},{"uid":"262791874f950010","name":"should allow access if the route is public","time":{"start":1747665848182,"stop":1747665848185,"duration":3},"status":"passed","severity":"normal"},{"uid":"55ac4bc48ac45fe0","name":"should return the correct start and end timestamps for the previous month","time":{"start":1747665847889,"stop":1747665847891,"duration":2},"status":"passed","severity":"normal"},{"uid":"8434229d974cf427","name":"should duplicate an itinerary with no contingencies and return a formatted response","time":{"start":1747665845225,"stop":1747665845228,"duration":3},"status":"passed","severity":"normal"},{"uid":"b02a42c20a6eb298","name":"should be defined","time":{"start":1747665849143,"stop":1747665849150,"duration":7},"status":"passed","severity":"normal"},{"uid":"e604a77ccd9de3ef","name":"should throw BadRequestException if last ticket is still valid","time":{"start":1747665847842,"stop":1747665847845,"duration":3},"status":"passed","severity":"normal"},{"uid":"dd98dc81cd032c6a","name":"should throw BadRequestException if user was created recently and is not confirmed","time":{"start":1747665844239,"stop":1747665844246,"duration":7},"status":"passed","severity":"normal"},{"uid":"1a90ef002596bfff","name":"should throw an error when page number exceeds total pages","time":{"start":1747665845356,"stop":1747665845359,"duration":3},"status":"passed","severity":"normal"},{"uid":"54e019dc4806c49a","name":"should save a public itinerary for the user and return success response","time":{"start":1747665845320,"stop":1747665845326,"duration":6},"status":"passed","severity":"normal"},{"uid":"f47781f54a909dd","name":"should create transaction token","time":{"start":1747665848702,"stop":1747665848713,"duration":11},"status":"passed","severity":"normal"},{"uid":"bb2391071c4546c8","name":"should link an existing user account with Firebase","time":{"start":1747665844648,"stop":1747665844652,"duration":4},"status":"passed","severity":"normal"},{"uid":"1b3be6ce9bad269d","name":"should throw BadRequestException when block start time is after end time","time":{"start":1747665845285,"stop":1747665845289,"duration":4},"status":"passed","severity":"normal"},{"uid":"f63a7583d7fc7d00","name":"should save a public itinerary for the user","time":{"start":1747665845703,"stop":1747665845707,"duration":4},"status":"passed","severity":"normal"},{"uid":"269915cba32bfd62","name":"should throw other errors","time":{"start":1747665846050,"stop":1747665846053,"duration":3},"status":"passed","severity":"normal"},{"uid":"6ad526789bf0adc1","name":"should extract refresh token from cookies","time":{"start":1747665848763,"stop":1747665848765,"duration":2},"status":"passed","severity":"normal"},{"uid":"c9df4d43ec8e638e","name":"should search tours with default parameters","time":{"start":1747665847322,"stop":1747665847332,"duration":10},"status":"passed","severity":"normal"},{"uid":"d8572921fefab6e8","name":"should return empty array when user has no itinerary likes","time":{"start":1747665846674,"stop":1747665846679,"duration":5},"status":"passed","severity":"normal"},{"uid":"24f7f9feb5339329","name":"should handle Discord webhook errors gracefully","time":{"start":1747665847894,"stop":1747665847896,"duration":2},"status":"passed","severity":"normal"},{"uid":"b95e7c8d88309ba1","name":"should call authService.verifyPasswordReset with correct data","time":{"start":1747665847293,"stop":1747665847301,"duration":8},"status":"passed","severity":"normal"},{"uid":"d65e66c2077f554b","name":"should calculate totalLikes from itineraries correctly","time":{"start":1747665845368,"stop":1747665845371,"duration":3},"status":"passed","severity":"normal"},{"uid":"775d04013532cdc","name":"should just create view if less than 10 views","time":{"start":1747665845996,"stop":1747665845998,"duration":2},"status":"passed","severity":"normal"},{"uid":"6ab0fecf49c46ab9","name":"should return an empty array if there are no tags","time":{"start":1747665845418,"stop":1747665845419,"duration":1},"status":"passed","severity":"normal"},{"uid":"6c87c3f3bd506aeb","name":"should process tour ticket payment successfully","time":{"start":1747665847381,"stop":1747665847384,"duration":3},"status":"passed","severity":"normal"},{"uid":"42ee379946d3ebdb","name":"should handle non-consecutive block positions when creating routes","time":{"start":1747665845214,"stop":1747665845218,"duration":4},"status":"passed","severity":"normal"},{"uid":"f233f13f925394f9","name":"should return completed itineraries with response formatting","time":{"start":1747665845100,"stop":1747665845103,"duration":3},"status":"passed","severity":"normal"},{"uid":"747a85853649126e","name":"should return all itineraries with default parameters","time":{"start":1747665845019,"stop":1747665845025,"duration":6},"status":"passed","severity":"normal"},{"uid":"5b21a14a7bf8d941","name":"should search itineraries with default parameters","time":{"start":1747665845585,"stop":1747665845591,"duration":6},"status":"passed","severity":"normal"},{"uid":"1ede11dea07371bf","name":"should throw ForbiddenException if user is not authorized","time":{"start":1747665845190,"stop":1747665845193,"duration":3},"status":"passed","severity":"normal"},{"uid":"95deb563a98059e1","name":"should throw BadRequestException if user owns the itinerary its trying to unsave","time":{"start":1747665845728,"stop":1747665845730,"duration":2},"status":"passed","severity":"normal"},{"uid":"25affae70add0f77","name":"should delete an unpublished itinerary from the index","time":{"start":1747665846032,"stop":1747665846037,"duration":5},"status":"passed","severity":"normal"},{"uid":"5c23adfa7b5bdc1e","name":"should throw ForbiddenException if user is not authorized","time":{"start":1747665845322,"stop":1747665845325,"duration":3},"status":"passed","severity":"normal"},{"uid":"2d026ee19655c7fe","name":"should pass errors from service to the caller","time":{"start":1747665847851,"stop":1747665847859,"duration":8},"status":"passed","severity":"normal"},{"uid":"b582278477178a62","name":"should call service and return viewed itineraries","time":{"start":1747665845294,"stop":1747665845297,"duration":3},"status":"passed","severity":"normal"},{"uid":"79afbca3128f216c","name":"should allow user to see itinerary if invited","time":{"start":1747665845314,"stop":1747665845319,"duration":5},"status":"passed","severity":"normal"},{"uid":"458dd7064c23877e","name":"should successfully verify a valid ticket","time":{"start":1747665845420,"stop":1747665845423,"duration":3},"status":"passed","severity":"normal"},{"uid":"2270632842a76c43","name":"should throw ForbiddenException when contingency plan belongs to different itinerary","time":{"start":1747665845534,"stop":1747665845539,"duration":5},"status":"passed","severity":"normal"},{"uid":"d7cb16decd3fc5cc","name":"should return a string indicating all payments were returned","time":{"start":1747665849110,"stop":1747665849112,"duration":2},"status":"passed","severity":"normal"},{"uid":"ca340c1c736eb6bc","name":"should duplicate an itinerary and its contingencies and return a formatted response","time":{"start":1747665845221,"stop":1747665845225,"duration":4},"status":"passed","severity":"normal"},{"uid":"6778ea555af1d9fd","name":"should update and return the ticket when transaction status is settlement","time":{"start":1747665846076,"stop":1747665846078,"duration":2},"status":"passed","severity":"normal"},{"uid":"5e168e06a057eb09","name":"should call service and return response","time":{"start":1747665845287,"stop":1747665845293,"duration":6},"status":"passed","severity":"normal"},{"uid":"58441274ff26bac4","name":"should accept an itinerary invitation and link the user to the itinerary using itineraryId","time":{"start":1747665845427,"stop":1747665845430,"duration":3},"status":"passed","severity":"normal"},{"uid":"6fea583fa422c7d9","name":"should be defined","time":{"start":1747665845318,"stop":1747665845356,"duration":38},"status":"passed","severity":"normal"},{"uid":"3f164eff56c79899","name":"should not send webhook if DISCORD_WEBHOOK_URL is not set","time":{"start":1747665847849,"stop":1747665847853,"duration":4},"status":"passed","severity":"normal"},{"uid":"fb45fcf1113f14d2","name":"should return empty data when there are no itineraries","time":{"start":1747665845088,"stop":1747665845090,"duration":2},"status":"passed","severity":"normal"},{"uid":"246e132de7e173e9","name":"should delete the oldest ticket if there are too many","time":{"start":1747665844276,"stop":1747665844281,"duration":5},"status":"passed","severity":"normal"},{"uid":"18843b5fe456caf5","name":"should handle user not found","time":{"start":1747665845453,"stop":1747665845456,"duration":3},"status":"passed","severity":"normal"},{"uid":"bf9d6fb6dae500c4","name":"should return a successful response with tour data","time":{"start":1747665847364,"stop":1747665847370,"duration":6},"status":"passed","severity":"normal"},{"uid":"a786adb9cf1dfc68","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747665845516,"stop":1747665845522,"duration":6},"status":"passed","severity":"normal"},{"uid":"b707e3c240e1099c","name":"should buy a tour ticket successfully","time":{"start":1747665847370,"stop":1747665847377,"duration":7},"status":"passed","severity":"normal"},{"uid":"efd4f070194ef98c","name":"should send webhook for login-validation","time":{"start":1747665847864,"stop":1747665847869,"duration":5},"status":"passed","severity":"normal"},{"uid":"d639d75f96180670","name":"should throw NotFoundException if user is not found during Google login","time":{"start":1747665847310,"stop":1747665847314,"duration":4},"status":"passed","severity":"normal"},{"uid":"322eb2f50f50f272","name":"should be defined","time":{"start":1747665846630,"stop":1747665846652,"duration":22},"status":"passed","severity":"normal"},{"uid":"2485a04a646d9d29","name":"should throw an error if itineraryData.sections is empty","time":{"start":1747665848905,"stop":1747665848909,"duration":4},"status":"passed","severity":"normal"},{"uid":"82fbed7212b7e739","name":"should throw UnauthorizedException when old password is incorrect","time":{"start":1747665845444,"stop":1747665845447,"duration":3},"status":"passed","severity":"normal"},{"uid":"c8c8a781ca3fd2fa","name":"should be defined","time":{"start":1747665844829,"stop":1747665844941,"duration":112},"status":"passed","severity":"normal"},{"uid":"3e870079a6413624","name":"should throw BadRequestException when quantity does not match visitors count","time":{"start":1747665846038,"stop":1747665846042,"duration":4},"status":"passed","severity":"normal"},{"uid":"a64bbbef500fd2e7","name":"should handle service errors properly","time":{"start":1747665848958,"stop":1747665848960,"duration":2},"status":"passed","severity":"normal"},{"uid":"ed57b3b80a73016b","name":"should clear refreshToken cookie","time":{"start":1747665847277,"stop":1747665847283,"duration":6},"status":"passed","severity":"normal"},{"uid":"7176b5589a999428","name":"should successfully change password when all validations pass","time":{"start":1747665845450,"stop":1747665845453,"duration":3},"status":"passed","severity":"normal"},{"uid":"fc6d594e7cd8f01e","name":"should pass errors from service to the caller","time":{"start":1747665845326,"stop":1747665845333,"duration":7},"status":"passed","severity":"normal"},{"uid":"3cfde9b096ea28a9","name":"should handle empty search results","time":{"start":1747665846005,"stop":1747665846007,"duration":2},"status":"passed","severity":"normal"},{"uid":"419e097508e49e6a","name":"should handle missing fields gracefully","time":{"start":1747665845944,"stop":1747665845950,"duration":6},"status":"passed","severity":"normal"},{"uid":"3e94de0419776152","name":"should update viewedAt if itinerary already viewed","time":{"start":1747665845626,"stop":1747665845629,"duration":3},"status":"passed","severity":"normal"},{"uid":"b12910f38d465c35","name":"should throw BadRequestException when visitors exceed tour max capacity","time":{"start":1747665846046,"stop":1747665846049,"duration":3},"status":"passed","severity":"normal"},{"uid":"1223a8c04ee4af39","name":"should throw an error for invalid page number","time":{"start":1747665845370,"stop":1747665845373,"duration":3},"status":"passed","severity":"normal"},{"uid":"18e6d7eec45d6c65","name":"should throw BadRequestException if already published","time":{"start":1747665845314,"stop":1747665845318,"duration":4},"status":"passed","severity":"normal"},{"uid":"b5855ee2913024ca","name":"should call service and return viewed tours","time":{"start":1747665847317,"stop":1747665847320,"duration":3},"status":"passed","severity":"normal"},{"uid":"1bc0d5ccd2eae0e9","name":"should add a published itinerary to the index","time":{"start":1747665846029,"stop":1747665846032,"duration":3},"status":"passed","severity":"normal"},{"uid":"a3b54877b23f1226","name":"should return the itinerary if user is the owner","time":{"start":1747665845305,"stop":1747665845310,"duration":5},"status":"passed","severity":"normal"},{"uid":"ca30756c8aa54e0","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747665845691,"stop":1747665845698,"duration":7},"status":"passed","severity":"normal"},{"uid":"35387637a8c0bc9c","name":"should throw NotFoundException if user is not found","time":{"start":1747665845360,"stop":1747665845368,"duration":8},"status":"passed","severity":"normal"},{"uid":"23a557806559f001","name":"should handle user with no itineraries","time":{"start":1747665845379,"stop":1747665845381,"duration":2},"status":"passed","severity":"normal"},{"uid":"aabfbc23bb6a0c29","name":"should find itineraries by tags from user's latest and recently viewed itineraries","time":{"start":1747665845746,"stop":1747665845751,"duration":5},"status":"passed","severity":"normal"},{"uid":"ec2ee36f7868d8f","name":"should throw NotFoundException when tags do not exist","time":{"start":1747665845297,"stop":1747665845300,"duration":3},"status":"passed","severity":"normal"},{"uid":"a4c804b5fc8496bb","name":"should pass errors from service to the caller","time":{"start":1747665845229,"stop":1747665845232,"duration":3},"status":"passed","severity":"normal"},{"uid":"8e37b74588137229","name":"should call service.login with the correct email","time":{"start":1747665848849,"stop":1747665848852,"duration":3},"status":"passed","severity":"normal"},{"uid":"7a3ba59810bf84ba","name":"should call authService.register with correct data","time":{"start":1747665847273,"stop":1747665847277,"duration":4},"status":"passed","severity":"normal"},{"uid":"25144f6d0a91c15f","name":"should update an itinerary with new details, tags, sections, and blocks","time":{"start":1747665845227,"stop":1747665845232,"duration":5},"status":"passed","severity":"normal"},{"uid":"de881a22735515a4","name":"should delete oldest ticket when there are 5 or more existing tickets","time":{"start":1747665845417,"stop":1747665845419,"duration":2},"status":"passed","severity":"normal"},{"uid":"f528a8b8f7f60f3b","name":"should throw NotFoundException if tour not found","time":{"start":1747665846023,"stop":1747665846030,"duration":7},"status":"passed","severity":"normal"},{"uid":"3496fb690a2f4f15","name":"should just create view if less than 10 views","time":{"start":1747665845633,"stop":1747665845635,"duration":2},"status":"passed","severity":"normal"},{"uid":"9184191a981e42da","name":"should sync tours when provided with valid API key","time":{"start":1747665848111,"stop":1747665848114,"duration":3},"status":"passed","severity":"normal"},{"uid":"aaf6fb6749d06b62","name":"should handle null or undefined itinerary and return null","time":{"start":1747665845950,"stop":1747665845953,"duration":3},"status":"passed","severity":"normal"},{"uid":"8a6c11279b10aac6","name":"should return total pre-registered users count","time":{"start":1747665847803,"stop":1747665847814,"duration":11},"status":"passed","severity":"normal"},{"uid":"aae490387a4567ce","name":"should return itineraryId if user already has access to the itinerary","time":{"start":1747665845430,"stop":1747665845433,"duration":3},"status":"passed","severity":"normal"},{"uid":"540f1b00d94350a1","name":"should throw NotFoundException if the itinerary does not exist","time":{"start":1747665845155,"stop":1747665845169,"duration":14},"status":"passed","severity":"normal"},{"uid":"56869ae910736af3","name":"should return success response when password change is successful","time":{"start":1747665846711,"stop":1747665846713,"duration":2},"status":"passed","severity":"normal"},{"uid":"1109a41c690b07ad","name":"should throw UnauthorizedException if password is invalid","time":{"start":1747665844151,"stop":1747665844167,"duration":16},"status":"passed","severity":"normal"},{"uid":"6b47f33896dc1a72","name":"should update user profile with valid data","time":{"start":1747665845393,"stop":1747665845395,"duration":2},"status":"passed","severity":"normal"},{"uid":"9774f4c94ec104dc","name":"should be defined","time":{"start":1747665849098,"stop":1747665849108,"duration":10},"status":"passed","severity":"normal"},{"uid":"fb03a1ecad0f5f84","name":"should calculate days count from date range","time":{"start":1747665845983,"stop":1747665846001,"duration":18},"status":"passed","severity":"normal"},{"uid":"c5c15ddc63728389","name":"should handle search with complex filters and sorting","time":{"start":1747665845604,"stop":1747665845616,"duration":12},"status":"passed","severity":"normal"},{"uid":"f7455565be76b111","name":"should return list of cities based on country","time":{"start":1747665848518,"stop":1747665848521,"duration":3},"status":"passed","severity":"normal"},{"uid":"117033fb30af6c4c","name":"should use email prefix if no name is provided","time":{"start":1747665844520,"stop":1747665844524,"duration":4},"status":"passed","severity":"normal"},{"uid":"4ebe5995cd71d12c","name":"should throw UnauthorizedException when API key is missing","time":{"start":1747665848117,"stop":1747665848119,"duration":2},"status":"passed","severity":"normal"},{"uid":"ba32055a0a67c83f","name":"should throw BadRequestException when start date is after end date","time":{"start":1747665845274,"stop":1747665845285,"duration":11},"status":"passed","severity":"normal"},{"uid":"5f77240437cea358","name":"should return a list of itineraries for a user","time":{"start":1747665845374,"stop":1747665845378,"duration":4},"status":"passed","severity":"normal"},{"uid":"3f25a3bcffc11097","name":"should throw BadRequestException when ticket is already paid","time":{"start":1747665846073,"stop":1747665846075,"duration":2},"status":"passed","severity":"normal"},{"uid":"e5f84b596743d75c","name":"should handle a single filter correctly","time":{"start":1747665846011,"stop":1747665846014,"duration":3},"status":"passed","severity":"normal"},{"uid":"84bd90aa553e2ef1","name":"should call service.createPreRegister with correct data","time":{"start":1747665848842,"stop":1747665848845,"duration":3},"status":"passed","severity":"normal"},{"uid":"15338ab5c09db1fd","name":"should throw an exception if linking fails","time":{"start":1747665847346,"stop":1747665847349,"duration":3},"status":"passed","severity":"normal"},{"uid":"b987801377261e84","name":"should throw BadRequestException if user does not exist","time":{"start":1747665844257,"stop":1747665844267,"duration":10},"status":"passed","severity":"normal"},{"uid":"9b8f12792ccfdfd8","name":"should be defined","time":{"start":1747665847263,"stop":1747665847310,"duration":47},"status":"passed","severity":"normal"},{"uid":"41cdef51e66be180","name":"should handle notification","time":{"start":1747665848716,"stop":1747665848718,"duration":2},"status":"passed","severity":"normal"},{"uid":"955361b96cf588f0","name":"should create a new user and send confirmation email","time":{"start":1747665847760,"stop":1747665847788,"duration":28},"status":"passed","severity":"normal"},{"uid":"e0d289f69b070cfe","name":"should allow access if token is valid","time":{"start":1747665848207,"stop":1747665848209,"duration":2},"status":"passed","severity":"normal"},{"uid":"ceff69e0ac87c423","name":"should call service.validateLogin with correct ticketId","time":{"start":1747665848852,"stop":1747665848855,"duration":3},"status":"passed","severity":"normal"},{"uid":"73a685f6cb193cd7","name":"should handle duplicate titles in results","time":{"start":1747665845281,"stop":1747665845287,"duration":6},"status":"passed","severity":"normal"},{"uid":"2110420873a62a3d","name":"should update photo profile when called with valid URL","time":{"start":1747665846713,"stop":1747665846716,"duration":3},"status":"passed","severity":"normal"},{"uid":"ea4f511d2ca779af","name":"should return list of itinerary views ordered by viewedAt desc","time":{"start":1747665845622,"stop":1747665845625,"duration":3},"status":"passed","severity":"normal"},{"uid":"1129ecf5c33c52cb","name":"should include all transaction fields in the result","time":{"start":1747665845472,"stop":1747665845477,"duration":5},"status":"passed","severity":"normal"},{"uid":"a71cb8af20b25d2f","name":"should throw UnauthorizedException if email is not registered","time":{"start":1747665847251,"stop":1747665847255,"duration":4},"status":"passed","severity":"normal"},{"uid":"a9efbf71299bd724","name":"should delete an itinerary from the index","time":{"start":1747665846045,"stop":1747665846047,"duration":2},"status":"passed","severity":"normal"},{"uid":"7fcd76a5d2d6cd9a","name":"should return an itinerary reminder with associated itinerary id","time":{"start":1747665846437,"stop":1747665846443,"duration":6},"status":"passed","severity":"normal"},{"uid":"c8ed67bf7fda2563","name":"should throw BadRequestException when there are already 2 contingency plans","time":{"start":1747665845502,"stop":1747665845509,"duration":7},"status":"passed","severity":"normal"},{"uid":"454a654e994d1683","name":"should throw a NotFoundException if job doesnt exist","time":{"start":1747665846510,"stop":1747665846514,"duration":4},"status":"passed","severity":"normal"},{"uid":"ad374c0b7617dfea","name":"should call setupIndexes on module init","time":{"start":1747665845929,"stop":1747665845931,"duration":2},"status":"passed","severity":"normal"},{"uid":"d82236b31ace8693","name":"should update an itinerary reminder and reschdule the cron job","time":{"start":1747665847843,"stop":1747665847845,"duration":2},"status":"passed","severity":"normal"},{"uid":"c0fe43eca7402e7a","name":"should send webhook for pre-registration","time":{"start":1747665847853,"stop":1747665847864,"duration":11},"status":"passed","severity":"normal"},{"uid":"da035b47d2d9d2b8","name":"should throw an error if placeId is not provided","time":{"start":1747665848426,"stop":1747665848429,"duration":3},"status":"passed","severity":"normal"},{"uid":"73ef966587ec4384","name":"should throw NotFoundException if user is not found","time":{"start":1747665844304,"stop":1747665844449,"duration":145},"status":"passed","severity":"normal"},{"uid":"cacf079aa168d512","name":"should return empty array when user has no transactions","time":{"start":1747665846722,"stop":1747665846724,"duration":2},"status":"passed","severity":"normal"},{"uid":"84c519b09a01c326","name":"should return list of cities","time":{"start":1747665849154,"stop":1747665849156,"duration":2},"status":"passed","severity":"normal"},{"uid":"2fa824bfe316385b","name":"should handle empty createdBlocks and use default TRANSPORT_MODE.DRIVE when transportMode is not provided","time":{"start":1747665845218,"stop":1747665845222,"duration":4},"status":"passed","severity":"normal"},{"uid":"2513259ac98a345c","name":"should throw a ConflictException on already scheduled reminders","time":{"start":1747665846487,"stop":1747665846493,"duration":6},"status":"passed","severity":"normal"},{"uid":"432a05b6aa659a6c","name":"should remove an itinerary reminder and cancel the cron job","time":{"start":1747665847845,"stop":1747665847847,"duration":2},"status":"passed","severity":"normal"},{"uid":"6fbde775ec901589","name":"should return an empty array when user has no transactions","time":{"start":1747665845470,"stop":1747665845472,"duration":2},"status":"passed","severity":"normal"},{"uid":"d3b313d5337978c0","name":"should handle errors if sending email fails","time":{"start":1747665849282,"stop":1747665849284,"duration":2},"status":"passed","severity":"normal"},{"uid":"5df61a33665f3efe","name":"should create transaction","time":{"start":1747665848700,"stop":1747665848702,"duration":2},"status":"passed","severity":"normal"},{"uid":"8202bfafaa1a7453","name":"should throw NotFound if user email is not found to accept the invitation","time":{"start":1747665845439,"stop":1747665845445,"duration":6},"status":"passed","severity":"normal"},{"uid":"1a37c572b9187617","name":"should throw NotFoundException if itinerary not found","time":{"start":1747665845579,"stop":1747665845581,"duration":2},"status":"passed","severity":"normal"},{"uid":"17c83c65b4989b1","name":"should return country code","time":{"start":1747665849152,"stop":1747665849154,"duration":2},"status":"passed","severity":"normal"},{"uid":"68543191769908a6","name":"should validate login ticket and return access token","time":{"start":1747665847821,"stop":1747665847825,"duration":4},"status":"passed","severity":"normal"},{"uid":"d0b4446542bc4531","name":"should throw NotFoundException when contingency plan does not exist","time":{"start":1747665845553,"stop":1747665845555,"duration":2},"status":"passed","severity":"normal"},{"uid":"389137a03a05cca6","name":"should remove a user from the itinerary successfully","time":{"start":1747665845446,"stop":1747665845452,"duration":6},"status":"passed","severity":"normal"},{"uid":"f47d6d4a54c59223","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747665845658,"stop":1747665845660,"duration":2},"status":"passed","severity":"normal"},{"uid":"ac3aab79be05577d","name":"should throw NotFoundException if contingency not found","time":{"start":1747665845209,"stop":1747665845212,"duration":3},"status":"passed","severity":"normal"},{"uid":"705176d6cd5e981b","name":"should create a contingency plan with sections and blocks","time":{"start":1747665845512,"stop":1747665845516,"duration":4},"status":"passed","severity":"normal"},{"uid":"ade8c8fc4a66c69b","name":"should create routes across multiple sections","time":{"start":1747665845208,"stop":1747665845213,"duration":5},"status":"passed","severity":"normal"},{"uid":"b6e8439a36ea2975","name":"should handle errors if fetch fails","time":{"start":1747665847870,"stop":1747665847873,"duration":3},"status":"passed","severity":"normal"},{"uid":"d93f2f6d6189161a","name":"should throw NotFoundException when contingency plan does not exist","time":{"start":1747665845544,"stop":1747665845546,"duration":2},"status":"passed","severity":"normal"},{"uid":"e64b1d0da8994b2b","name":"should update viewedAt if tour already viewed","time":{"start":1747665845983,"stop":1747665845985,"duration":2},"status":"passed","severity":"normal"},{"uid":"900ff673f9546c83","name":"should throw ForbiddenException if user does not own the itinerary","time":{"start":1747665845245,"stop":1747665845249,"duration":4},"status":"passed","severity":"normal"},{"uid":"7066391cb0e07a73","name":"should throw ForbiddenException when contingency plan belongs to different itinerary","time":{"start":1747665845555,"stop":1747665845560,"duration":5},"status":"passed","severity":"normal"},{"uid":"752ae9648a5b4993","name":"should pass errors from service to the caller","time":{"start":1747665845110,"stop":1747665845119,"duration":9},"status":"passed","severity":"normal"},{"uid":"8ed9f1cd18bc8e25","name":"should handle overflow page numbers","time":{"start":1747665845332,"stop":1747665845334,"duration":2},"status":"passed","severity":"normal"},{"uid":"d2c5455f62308fae","name":"should return all tags","time":{"start":1747665845127,"stop":1747665845130,"duration":3},"status":"passed","severity":"normal"},{"uid":"6eaa6b5859b3e533","name":"should throw BadRequestException if user owns the itinerary its trying to save","time":{"start":1747665845714,"stop":1747665845716,"duration":2},"status":"passed","severity":"normal"},{"uid":"33ecb8f41b019f5f","name":"should throw InternalServerErrorException if email is missing","time":{"start":1747665844529,"stop":1747665844532,"duration":3},"status":"passed","severity":"normal"},{"uid":"4e935725e55638d1","name":"should update an itinerary and return a formatted response","time":{"start":1747665845107,"stop":1747665845110,"duration":3},"status":"passed","severity":"normal"},{"uid":"946829e29a993de3","name":"should search tours with filters and pagination","time":{"start":1747665846002,"stop":1747665846005,"duration":3},"status":"passed","severity":"normal"},{"uid":"9840295af426bb6","name":"should correctly calculate totalDestinations when sections is empty","time":{"start":1747665845382,"stop":1747665845384,"duration":2},"status":"passed","severity":"normal"},{"uid":"f9b87c149ed5f4f3","name":"should return itineraries recommended based on user tags","time":{"start":1747665845344,"stop":1747665845347,"duration":3},"status":"passed","severity":"normal"},{"uid":"3d1696559be65648","name":"should add isPublished filter when no other filters","time":{"start":1747665846021,"stop":1747665846024,"duration":3},"status":"passed","severity":"normal"},{"uid":"b587ae5611294132","name":"should be defined","time":{"start":1747665847814,"stop":1747665847838,"duration":24},"status":"passed","severity":"normal"},{"uid":"394054d718cc4555","name":"should delete expired refresh tokens","time":{"start":1747665844215,"stop":1747665844225,"duration":10},"status":"passed","severity":"normal"},{"uid":"d6154930011b3fa4","name":"should return itineraries when getListItineraries is called with a valid ID","time":{"start":1747665846659,"stop":1747665846662,"duration":3},"status":"passed","severity":"normal"},{"uid":"734475926c96e79","name":"should throw NotFoundException if itinerary not found","time":{"start":1747665845187,"stop":1747665845190,"duration":3},"status":"passed","severity":"normal"},{"uid":"7c93e9275358b8a6","name":"should throw BadRequestException if email is the same as current email","time":{"start":1747665845404,"stop":1747665845407,"duration":3},"status":"passed","severity":"normal"},{"uid":"4c5bf0737f0e5f1b","name":"should handle no filters correctly","time":{"start":1747665846014,"stop":1747665846016,"duration":2},"status":"passed","severity":"normal"},{"uid":"2ef619e01db19538","name":"should handle fetch errors gracefully","time":{"start":1747665847882,"stop":1747665847886,"duration":4},"status":"passed","severity":"normal"},{"uid":"8ef0dc85bb989950","name":"should return empty array if the list is empty","time":{"start":1747665845740,"stop":1747665845745,"duration":5},"status":"passed","severity":"normal"},{"uid":"8f7a06387678b0d8","name":"should throw NotFoundException if the pending invitation does not exist","time":{"start":1747665845433,"stop":1747665845435,"duration":2},"status":"passed","severity":"normal"},{"uid":"8cf0df08a631e976","name":"should handle duration with durationType correctly","time":{"start":1747665846016,"stop":1747665846019,"duration":3},"status":"passed","severity":"normal"},{"uid":"3da834ea70eef8ad","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747665845242,"stop":1747665845245,"duration":3},"status":"passed","severity":"normal"},{"uid":"c4f0bae3e79be56c","name":"should handle user with no liked itineraries","time":{"start":1747665845388,"stop":1747665845390,"duration":2},"status":"passed","severity":"normal"},{"uid":"193e7132acdea42c","name":"should not create index if it already exists","time":{"start":1747665845937,"stop":1747665845940,"duration":3},"status":"passed","severity":"normal"},{"uid":"1491f0fdceb880cd","name":"should throw BadRequestException if passwords do not match","time":{"start":1747665844485,"stop":1747665844487,"duration":2},"status":"passed","severity":"normal"},{"uid":"351c01326518ed8b","name":"should call updatePhotoProfile service with correct parameters","time":{"start":1747665846716,"stop":1747665846718,"duration":2},"status":"passed","severity":"normal"},{"uid":"f3fd962c84292f31","name":"should create a new ticket for the user","time":{"start":1747665847839,"stop":1747665847842,"duration":3},"status":"passed","severity":"normal"},{"uid":"21d0f8e3e75f9bd","name":"should throw ConflictException if user is already linked","time":{"start":1747665844657,"stop":1747665844659,"duration":2},"status":"passed","severity":"normal"},{"uid":"cadd281c50a33bdb","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747665845319,"stop":1747665845321,"duration":2},"status":"passed","severity":"normal"},{"uid":"14f468c7eafab454","name":"should throw BadRequestException when ticket has expired","time":{"start":1747665845435,"stop":1747665845437,"duration":2},"status":"passed","severity":"normal"},{"uid":"7a07030d99baa25f","name":"should return a list of liked itineraries for a user","time":{"start":1747665845384,"stop":1747665845387,"duration":3},"status":"passed","severity":"normal"},{"uid":"bb31f3efba295e8b","name":"should limit suggestions to top 5 results","time":{"start":1747665845274,"stop":1747665845281,"duration":7},"status":"passed","severity":"normal"},{"uid":"80478e891c0a4b10","name":"should return a string indicating a specific payment was returned","time":{"start":1747665849113,"stop":1747665849115,"duration":2},"status":"passed","severity":"normal"},{"uid":"d103364f9e04d356","name":"should throw NotFoundException if user is not found","time":{"start":1747665844488,"stop":1747665844491,"duration":3},"status":"passed","severity":"normal"},{"uid":"f36b4150b0d628bb","name":"should create an itinerary reminder","time":{"start":1747665846406,"stop":1747665846410,"duration":4},"status":"passed","severity":"normal"},{"uid":"4963a2e80d5fd4ee","name":"should correctly format a tour for indexing","time":{"start":1747665845954,"stop":1747665845957,"duration":3},"status":"passed","severity":"normal"},{"uid":"d77ae02e79c54cc8","name":"should delete oldest view if already 10 and add new","time":{"start":1747665845993,"stop":1747665845995,"duration":2},"status":"passed","severity":"normal"},{"uid":"cbaac917b4f001a4","name":"should throw UnauthorizedException if ticket is expired","time":{"start":1747665847829,"stop":1747665847832,"duration":3},"status":"passed","severity":"normal"},{"uid":"dbce822ca71c4091","name":"should handle search with no results","time":{"start":1747665845619,"stop":1747665845621,"duration":2},"status":"passed","severity":"normal"},{"uid":"2fbda39d79667c4","name":"should return country details based on placeId","time":{"start":1747665848521,"stop":1747665848524,"duration":3},"status":"passed","severity":"normal"},{"uid":"8e6fd88171effd87","name":"should return only shared itineraries when sharedBool is true","time":{"start":1747665845347,"stop":1747665845350,"duration":3},"status":"passed","severity":"normal"},{"uid":"f1d2f2c9a181cafd","name":"should be defined","time":{"start":1747665846375,"stop":1747665846398,"duration":23},"status":"passed","severity":"normal"},{"uid":"9f1418a690aa1891","name":"should select a contingency plan and return a formatted response","time":{"start":1747665845206,"stop":1747665845209,"duration":3},"status":"passed","severity":"normal"},{"uid":"abf922262e03ea26","name":"should throw NotFoundException when ticket not found","time":{"start":1747665846063,"stop":1747665846070,"duration":7},"status":"passed","severity":"normal"},{"uid":"2b4c1f9022e71654","name":"should throw an error when API call fails","time":{"start":1747665848419,"stop":1747665848422,"duration":3},"status":"passed","severity":"normal"},{"uid":"c2804c3a87f58a35","name":"should successfully update user photo profile","time":{"start":1747665845462,"stop":1747665845464,"duration":2},"status":"passed","severity":"normal"},{"uid":"63500554b6e76e07","name":"should throw InternalServerErrorException if Firebase verification fails","time":{"start":1747665844533,"stop":1747665844536,"duration":3},"status":"passed","severity":"normal"},{"uid":"98de235eadc6e120","name":"should throw NotFoundException if contingency plan not found","time":{"start":1747665845197,"stop":1747665845200,"duration":3},"status":"passed","severity":"normal"},{"uid":"324d9a406daaed0f","name":"should register a new user and return tokens","time":{"start":1747665844512,"stop":1747665844516,"duration":4},"status":"passed","severity":"normal"},{"uid":"8469f96e23ab592e","name":"should return an empty array when there are no completed itineraries","time":{"start":1747665845390,"stop":1747665845395,"duration":5},"status":"passed","severity":"normal"},{"uid":"791f144aaeb51b8e","name":"should handle missing description","time":{"start":1747665848174,"stop":1747665848177,"duration":3},"status":"passed","severity":"normal"},{"uid":"5f9962bd9e1c1dda","name":"should throw BadRequestException when new password is same as old password","time":{"start":1747665845456,"stop":1747665845459,"duration":3},"status":"passed","severity":"normal"},{"uid":"d2c1ef69a07973d6","name":"should return contingency plans for an itinerary","time":{"start":1747665845184,"stop":1747665845187,"duration":3},"status":"passed","severity":"normal"},{"uid":"33a999bd45b6de3d","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747665845725,"stop":1747665845727,"duration":2},"status":"passed","severity":"normal"},{"uid":"6ba279dfef1984ea","name":"should be defined","time":{"start":1747665844980,"stop":1747665845114,"duration":134},"status":"passed","severity":"normal"},{"uid":"226f2e5248036c1b","name":"should throw NotFoundException if tour doesnt exist","time":{"start":1747665845986,"stop":1747665845992,"duration":6},"status":"passed","severity":"normal"},{"uid":"e73c87de584a71bb","name":"should throw UnauthorizedException if emails do not match","time":{"start":1747665844289,"stop":1747665844292,"duration":3},"status":"passed","severity":"normal"},{"uid":"49ecda98f9a04213","name":"should handle errors from service and propagate them","time":{"start":1747665845351,"stop":1747665845354,"duration":3},"status":"passed","severity":"normal"},{"uid":"97a757ab9f0a3d45","name":"should throw BadRequestException when start date is after end date","time":{"start":1747665845180,"stop":1747665845186,"duration":6},"status":"passed","severity":"normal"},{"uid":"1b421c525de33d38","name":"should throw BadRequestException if email is not registered","time":{"start":1747665847817,"stop":1747665847821,"duration":4},"status":"passed","severity":"normal"},{"uid":"89b70e53ea3f4221","name":"should return country code response","time":{"start":1747665848524,"stop":1747665848526,"duration":2},"status":"passed","severity":"normal"},{"uid":"7569b9b0a7bee50f","name":"should pass errors from service to the caller","time":{"start":1747665844971,"stop":1747665844976,"duration":5},"status":"passed","severity":"normal"},{"uid":"40c0cefada556c81","name":"should return 401 Unauthorized if UMAMI_API_KEY is not set","time":{"start":1747665847886,"stop":1747665847888,"duration":2},"status":"passed","severity":"normal"},{"uid":"8c579c8a7b2d9edf","name":"should check saved status of public itinerary ids for the user and return success response","time":{"start":1747665845341,"stop":1747665845344,"duration":3},"status":"passed","severity":"normal"},{"uid":"d04f8ef0520a1b38","name":"should return an itinerary when found","time":{"start":1747665844946,"stop":1747665844954,"duration":8},"status":"passed","severity":"normal"},{"uid":"399574ad9ddbcc99","name":"should fetch published itineraries and index them","time":{"start":1747665845966,"stop":1747665845971,"duration":5},"status":"passed","severity":"normal"},{"uid":"3ab9dcabbe6a4d5c","name":"should handle when no tags are found in combined itineraries","time":{"start":1747665845755,"stop":1747665845758,"duration":3},"status":"passed","severity":"normal"},{"uid":"5b3aa9c43ae6a3b4","name":"should throw an error if placeId is not provided","time":{"start":1747665848955,"stop":1747665848958,"duration":3},"status":"passed","severity":"normal"},{"uid":"de497346110755ac","name":"should remove an itinerary successfully","time":{"start":1747665845405,"stop":1747665845408,"duration":3},"status":"passed","severity":"normal"},{"uid":"d5bc4d409c5433a0","name":"should return all contingency plans for the given itinerary","time":{"start":1747665845476,"stop":1747665845481,"duration":5},"status":"passed","severity":"normal"},{"uid":"7dcfdf4634872f9a","name":"should create an itinerary with default section title, empty blocks, and empty tags","time":{"start":1747665845126,"stop":1747665845131,"duration":5},"status":"passed","severity":"normal"},{"uid":"9e5e2082677efc8d","name":"should reschedule itinerary reminders on server restart","time":{"start":1747665846399,"stop":1747665846406,"duration":7},"status":"passed","severity":"normal"},{"uid":"70924eb748c88dca","name":"should create transaction redirect URL","time":{"start":1747665848713,"stop":1747665848715,"duration":2},"status":"passed","severity":"normal"},{"uid":"6cdbc5a7a41e4bae","name":"should duplicate an itinerary succesfully","time":{"start":1747665845649,"stop":1747665845653,"duration":4},"status":"passed","severity":"normal"}]