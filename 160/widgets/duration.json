[{"uid":"bc6afd8cf2302e71","name":"should throw BadRequestException if email is not registered","time":{"start":1744044350251,"stop":1744044350254,"duration":3},"status":"passed","severity":"normal"},{"uid":"69422ab18aeede6","name":"should call remove() in the service and delete an itinerary","time":{"start":1744044349609,"stop":1744044349614,"duration":5},"status":"passed","severity":"normal"},{"uid":"7686220f7a659aa7","name":"should return list of countries","time":{"start":1744044351660,"stop":1744044351663,"duration":3},"status":"passed","severity":"normal"},{"uid":"3a2f2cc2f092bda8","name":"should throw BadRequestException if passwords do not match","time":{"start":1744044349292,"stop":1744044349296,"duration":4},"status":"passed","severity":"normal"},{"uid":"c481c69449f14f5b","name":"should return paginated itineraries for both owned and shared when sharedBool is false","time":{"start":1744044349593,"stop":1744044349601,"duration":8},"status":"passed","severity":"normal"},{"uid":"2b490995a906960a","name":"should not send webhook if DISCORD_WEBHOOK_URL is not set","time":{"start":1744044350302,"stop":1744044350305,"duration":3},"status":"passed","severity":"normal"},{"uid":"a22e07461430bd46","name":"should be defined","time":{"start":1744044347690,"stop":1744044347753,"duration":63},"status":"passed","severity":"normal"},{"uid":"531e15da2cb87a2","name":"should throw ForbiddenException if user is not authorized","time":{"start":1744044349460,"stop":1744044349464,"duration":4},"status":"passed","severity":"normal"},{"uid":"59bcdbce5bb032ea","name":"should validate user if refresh token is valid","time":{"start":1744044351360,"stop":1744044351362,"duration":2},"status":"passed","severity":"normal"},{"uid":"2f9707e9eada46ee","name":"should throw NotFoundException if itinerary doesnt exist","time":{"start":1744044347835,"stop":1744044347838,"duration":3},"status":"passed","severity":"normal"},{"uid":"b068bcf2e7b698f4","name":"should accept an itinerary invitation and link the user to the itinerary using itineraryId","time":{"start":1744044349787,"stop":1744044349791,"duration":4},"status":"passed","severity":"normal"},{"uid":"f47262810ad93174","name":"should return an empty array if there are no tags","time":{"start":1744044349702,"stop":1744044349707,"duration":5},"status":"passed","severity":"normal"},{"uid":"73dbe8516e8ef77c","name":"should throw UnauthorizedException if user not found","time":{"start":1744044350698,"stop":1744044350701,"duration":3},"status":"passed","severity":"normal"},{"uid":"284228819c63f46d","name":"should be defined","time":{"start":1744044350542,"stop":1744044350563,"duration":21},"status":"passed","severity":"normal"},{"uid":"bb6e47216d7ceb3c","name":"should return an empty array of itinerary reminders if none found","time":{"start":1744044347806,"stop":1744044347820,"duration":14},"status":"passed","severity":"normal"},{"uid":"73f9af8db706e466","name":"should be defined","time":{"start":1744044352156,"stop":1744044352165,"duration":9},"status":"passed","severity":"normal"},{"uid":"a591c26ad488c26a","name":"should return shared itineraries successfully","time":{"start":1744044349526,"stop":1744044349532,"duration":6},"status":"passed","severity":"normal"},{"uid":"5b7c0197bde1f416","name":"should mark itinerary as complete","time":{"start":1744044349669,"stop":1744044349675,"duration":6},"status":"passed","severity":"normal"},{"uid":"5a767e861fb5c250","name":"should allow access if token is valid","time":{"start":1744044350702,"stop":1744044350705,"duration":3},"status":"passed","severity":"normal"},{"uid":"b456bce85a24be32","name":"should throw NotFoundException if itinerary reminder does not exist","time":{"start":1744044347839,"stop":1744044347844,"duration":5},"status":"passed","severity":"normal"},{"uid":"ef9e157ba4e56564","name":"should send invitations to the provided emails","time":{"start":1744044349708,"stop":1744044349771,"duration":63},"status":"passed","severity":"normal"},{"uid":"2cb4a3e52c3fc815","name":"should handle service errors for shared itineraries","time":{"start":1744044349536,"stop":1744044349540,"duration":4},"status":"passed","severity":"normal"},{"uid":"f1b9eb7a7f44d282","name":"should pass errors from service to the caller","time":{"start":1744044350184,"stop":1744044350188,"duration":4},"status":"passed","severity":"normal"},{"uid":"6c3fe0647bfc1d31","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1744044349676,"stop":1744044349683,"duration":7},"status":"passed","severity":"normal"},{"uid":"ef8032580fee5822","name":"should return access and refresh tokens if login is successful","time":{"start":1744044349229,"stop":1744044349233,"duration":4},"status":"passed","severity":"normal"},{"uid":"a7b9c4eab68091dc","name":"should throw NotFoundException if the user to be removed does not exist","time":{"start":1744044349654,"stop":1744044349656,"duration":2},"status":"passed","severity":"normal"},{"uid":"9e7504f1b78539b0","name":"should throw NotFoundException if verification code is not found","time":{"start":1744044349282,"stop":1744044349285,"duration":3},"status":"passed","severity":"normal"},{"uid":"b0735753bbe0e01e","name":"should extract refresh token from cookies","time":{"start":1744044351367,"stop":1744044351369,"duration":2},"status":"passed","severity":"normal"},{"uid":"9aed108625b3ce9c","name":"should return new access and refresh tokens","time":{"start":1744044351100,"stop":1744044351104,"duration":4},"status":"passed","severity":"normal"},{"uid":"9af6f9ea2ab34aa3","name":"should update an itinerary with new details, tags, sections, and blocks","time":{"start":1744044349451,"stop":1744044349477,"duration":26},"status":"failed","severity":"normal"},{"uid":"ea6992d87c884c68","name":"should return all contingency plans for the given itinerary","time":{"start":1744044349817,"stop":1744044349819,"duration":2},"status":"passed","severity":"normal"},{"uid":"c1d66ddafe425ad1","name":"should throw ForbiddenException if the user is not authorized to remove participants","time":{"start":1744044349657,"stop":1744044349659,"duration":2},"status":"passed","severity":"normal"},{"uid":"86b5675407696d19","name":"should call service.getReferralCode with the correct userId","time":{"start":1744044351601,"stop":1744044351604,"duration":3},"status":"passed","severity":"normal"},{"uid":"207aa9d122d26d8e","name":"should update an itinerary reminder","time":{"start":1744044347829,"stop":1744044347834,"duration":5},"status":"passed","severity":"normal"},{"uid":"6a563fb75364550","name":"should return an array of itinerary reminders","time":{"start":1744044347801,"stop":1744044347805,"duration":4},"status":"passed","severity":"normal"},{"uid":"f34fc39c7ee30fc0","name":"should create a new user if user does not exist","time":{"start":1744044349262,"stop":1744044349265,"duration":3},"status":"passed","severity":"normal"},{"uid":"5fde381fde728445","name":"should cancel an existing scheduled email job","time":{"start":1744044347884,"stop":1744044347887,"duration":3},"status":"passed","severity":"normal"},{"uid":"58e6ddf70e253874","name":"should throw ForbiddenException if user is not the owner","time":{"start":1744044349581,"stop":1744044349584,"duration":3},"status":"passed","severity":"normal"},{"uid":"b334adba1c286a58","name":"should throw NotFound if user email is not found to accept the invitation","time":{"start":1744044349802,"stop":1744044349804,"duration":2},"status":"passed","severity":"normal"},{"uid":"d85c345679a89df0","name":"should return only completed itineraries when finishedBool is true","time":{"start":1744044349611,"stop":1744044349614,"duration":3},"status":"passed","severity":"normal"},{"uid":"805927f25c4377b3","name":"should throw BadRequestException when date format is invalid","time":{"start":1744044349518,"stop":1744044349521,"duration":3},"status":"passed","severity":"normal"},{"uid":"7d355dcee94fb59b","name":"should throw UnauthorizedException for invalid ticket","time":{"start":1744044350259,"stop":1744044350263,"duration":4},"status":"passed","severity":"normal"},{"uid":"f5849fbe2ba93161","name":"should throw UnauthorizedException if password is invalid","time":{"start":1744044349225,"stop":1744044349229,"duration":4},"status":"passed","severity":"normal"},{"uid":"2e13bca286fe124b","name":"should return an empty array if no tags are found","time":{"start":1744044349623,"stop":1744044349625,"duration":2},"status":"passed","severity":"normal"},{"uid":"8a79fe8d9e081760","name":"should create an itinerary with default section title, empty blocks, and empty tags","time":{"start":1744044349399,"stop":1744044349403,"duration":4},"status":"passed","severity":"normal"},{"uid":"91da53fa4ff32f9","name":"should return itineraryId if user already has access to the itinerary","time":{"start":1744044349793,"stop":1744044349796,"duration":3},"status":"passed","severity":"normal"},{"uid":"2d11c9a5514a9d41","name":"should update an itinerary and return a formatted response","time":{"start":1744044349590,"stop":1744044349594,"duration":4},"status":"passed","severity":"normal"},{"uid":"825461fc8fa3c119","name":"should throw an error if placeId is not provided","time":{"start":1744044351819,"stop":1744044351828,"duration":9},"status":"passed","severity":"normal"},{"uid":"f21e493a7c8ade78","name":"should call service.login with the correct email","time":{"start":1744044351588,"stop":1744044351598,"duration":10},"status":"passed","severity":"normal"},{"uid":"89a05566796eb030","name":"should throw ForbiddenException when user is not the owner of the itinerary","time":{"start":1744044349692,"stop":1744044349696,"duration":4},"status":"passed","severity":"normal"},{"uid":"e540ce97c236b57a","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1744044349772,"stop":1744044349775,"duration":3},"status":"passed","severity":"normal"},{"uid":"5039d8ad9c1a79c8","name":"should throw BadRequestException if user is not found","time":{"start":1744044350270,"stop":1744044350282,"duration":12},"status":"passed","severity":"normal"},{"uid":"f3e346a65dc127cf","name":"should throw NotFoundException if the itinerary does not exist","time":{"start":1744044349808,"stop":1744044349810,"duration":2},"status":"passed","severity":"normal"},{"uid":"1a629b9cddf934f4","name":"should create an itinerary and return a formatted response","time":{"start":1744044349465,"stop":1744044349470,"duration":5},"status":"passed","severity":"normal"},{"uid":"2b3a01405269912e","name":"should return empty data when there are no itineraries","time":{"start":1744044349572,"stop":1744044349574,"duration":2},"status":"passed","severity":"normal"},{"uid":"f49c2652e9264a5b","name":"should remove an itinerary successfully","time":{"start":1744044349686,"stop":1744044349689,"duration":3},"status":"passed","severity":"normal"},{"uid":"b48d60710b8400e7","name":"should be defined","time":{"start":1744044352298,"stop":1744044352303,"duration":5},"status":"passed","severity":"normal"},{"uid":"3083bed36cd0eea2","name":"should return total pre-registered users count","time":{"start":1744044350243,"stop":1744044350246,"duration":3},"status":"passed","severity":"normal"},{"uid":"f638763724993f98","name":"should accept an itinerary invitation","time":{"start":1744044349637,"stop":1744044349639,"duration":2},"status":"passed","severity":"normal"},{"uid":"86665c0d9568606a","name":"should return an array of tags","time":{"start":1744044349696,"stop":1744044349701,"duration":5},"status":"passed","severity":"normal"},{"uid":"8b420bd8abc87a33","name":"should be defined","time":{"start":1744044349384,"stop":1744044349441,"duration":57},"status":"passed","severity":"normal"},{"uid":"5faf0b0370d9f893","name":"should update an itinerary with defaults for deleted/missing fields","time":{"start":1744044349478,"stop":1744044349485,"duration":7},"status":"failed","severity":"normal"},{"uid":"300d67ae16d03c0a","name":"should be defined","time":{"start":1744044351628,"stop":1744044351641,"duration":13},"status":"passed","severity":"normal"},{"uid":"aaa438a991384a90","name":"should throw NotFoundException if referral code is not found","time":{"start":1744044350239,"stop":1744044350243,"duration":4},"status":"passed","severity":"normal"},{"uid":"d936bf94e4a16f5c","name":"should throw NotFoundException if associated itinerary's reminder does not exist","time":{"start":1744044347825,"stop":1744044347829,"duration":4},"status":"passed","severity":"normal"},{"uid":"dd82ab69f537d0cd","name":"should return an itinerary when found","time":{"start":1744044349443,"stop":1744044349447,"duration":4},"status":"passed","severity":"normal"},{"uid":"9a04750906d49355","name":"should allow access if the route is public","time":{"start":1744044350665,"stop":1744044350668,"duration":3},"status":"passed","severity":"normal"},{"uid":"2c6507a1c0b01d09","name":"should be defined","time":{"start":1744044349329,"stop":1744044349389,"duration":60},"status":"passed","severity":"normal"},{"uid":"b103701f9b4779a7","name":"should throw ForbiddenException if user does not own the itinerary","time":{"start":1744044349826,"stop":1744044349827,"duration":1},"status":"passed","severity":"normal"},{"uid":"bff460cc14accd5c","name":"should throw a BadRequestException on jobs with date in past","time":{"start":1744044347870,"stop":1744044347875,"duration":5},"status":"passed","severity":"normal"},{"uid":"755fdf85b5b2a203","name":"should return itinerary when found and user has access to it","time":{"start":1744044349549,"stop":1744044349555,"duration":6},"status":"failed","severity":"normal"},{"uid":"a0e1744e1306a88","name":"should create a new user and send confirmation email","time":{"start":1744044350182,"stop":1744044350220,"duration":38},"status":"passed","severity":"normal"},{"uid":"f56b4bb3fda14252","name":"should call geminiService.generateFeedback with valid dto","time":{"start":1744044351648,"stop":1744044351651,"duration":3},"status":"passed","severity":"normal"},{"uid":"2e95a37e72c9b4b6","name":"should update an itinerary with defaults for missing block fields","time":{"start":1744044349486,"stop":1744044349503,"duration":17},"status":"failed","severity":"normal"},{"uid":"7ab5be326038051b","name":"should throw BadRequestException when duplicate section numbers are provided","time":{"start":1744044349532,"stop":1744044349535,"duration":3},"status":"passed","severity":"normal"},{"uid":"72ab61904a35dcc5","name":"should filter itineraries with shared=false and finished=false","time":{"start":1744044349518,"stop":1744044349522,"duration":4},"status":"passed","severity":"normal"},{"uid":"1aadb62d2ce23fb4","name":"should reschedule itinerary reminders on server restart","time":{"start":1744044347757,"stop":1744044347775,"duration":18},"status":"passed","severity":"normal"},{"uid":"a54a47d27bdbd475","name":"should throw NotFoundException if the itinerary does not exist","time":{"start":1744044349629,"stop":1744044349633,"duration":4},"status":"passed","severity":"normal"},{"uid":"a1a47c784db0caf1","name":"should allow user to see itinerary if invited","time":{"start":1744044349556,"stop":1744044349559,"duration":3},"status":"broken","severity":"normal"},{"uid":"4e2342f0421cf97a","name":"should throw ConflictException if itinerary reminder already exist","time":{"start":1744044347796,"stop":1744044347800,"duration":4},"status":"passed","severity":"normal"},{"uid":"f62d260209008c7d","name":"should return an itinerary reminder with associated itinerary id","time":{"start":1744044347821,"stop":1744044347824,"duration":3},"status":"passed","severity":"normal"},{"uid":"90e4cbd95b98074b","name":"should delete the oldest ticket if there are too many","time":{"start":1744044349273,"stop":1744044349278,"duration":5},"status":"passed","severity":"normal"},{"uid":"912661893395da36","name":"should call authService.verify with correct data","time":{"start":1744044351112,"stop":1744044351115,"duration":3},"status":"passed","severity":"normal"},{"uid":"6b2dce73735cf35d","name":"should return validation error if page is negative","time":{"start":1744044351784,"stop":1744044351787,"duration":3},"status":"passed","severity":"normal"},{"uid":"70ec764e9db45d78","name":"should update user and send registration email if verification is successful","time":{"start":1744044349429,"stop":1744044349434,"duration":5},"status":"passed","severity":"normal"},{"uid":"aef69d2c140e076e","name":"should return list of cities based on country","time":{"start":1744044351091,"stop":1744044351096,"duration":5},"status":"passed","severity":"normal"},{"uid":"2c8c704aec6372a8","name":"should throw BadRequestException when no sections are provided","time":{"start":1744044349436,"stop":1744044349440,"duration":4},"status":"passed","severity":"normal"},{"uid":"4c8c364cba0b17ef","name":"should throw BadRequestException when duplicate section numbers are provided","time":{"start":1744044349441,"stop":1744044349444,"duration":3},"status":"passed","severity":"normal"},{"uid":"3fb373ae66330a72","name":"should handle errors if sending email fails","time":{"start":1744044351833,"stop":1744044351835,"duration":2},"status":"passed","severity":"normal"},{"uid":"ec982b745ab4031f","name":"should throw NotFoundException when tags do not exist","time":{"start":1744044349536,"stop":1744044349539,"duration":3},"status":"passed","severity":"normal"},{"uid":"8451a7c70765c228","name":"should throw ForbiddenException when user is not the owner","time":{"start":1744044349542,"stop":1744044349545,"duration":3},"status":"passed","severity":"normal"},{"uid":"e0b5def20b52f322","name":"should be defined","time":{"start":1744044351635,"stop":1744044351659,"duration":24},"status":"passed","severity":"normal"},{"uid":"1aefc25a419f760f","name":"should return paginated itineraries","time":{"start":1744044349566,"stop":1744044349572,"duration":6},"status":"passed","severity":"normal"},{"uid":"40723299db9dda89","name":"should allow page to be optional","time":{"start":1744044351787,"stop":1744044351788,"duration":1},"status":"passed","severity":"normal"},{"uid":"def349bc1b1353a3","name":"should return itineraries successfully","time":{"start":1744044349565,"stop":1744044349568,"duration":3},"status":"passed","severity":"normal"},{"uid":"fdc3d53525e5f824","name":"should throw UnauthorizedException if refresh token is blacklisted","time":{"start":1744044349234,"stop":1744044349237,"duration":3},"status":"passed","severity":"normal"},{"uid":"aab782219574790e","name":"should create a new ticket for the user","time":{"start":1744044350283,"stop":1744044350290,"duration":7},"status":"passed","severity":"normal"},{"uid":"5dac3b88cbeebf00","name":"should throw NotFoundException if the pending invitation does not exist","time":{"start":1744044349796,"stop":1744044349799,"duration":3},"status":"passed","severity":"normal"},{"uid":"99559fa1377a8402","name":"should return \"Hello World!\"","time":{"start":1744044351936,"stop":1744044351945,"duration":9},"status":"passed","severity":"normal"},{"uid":"862b67471fdf3191","name":"should return itineraries shared with the user","time":{"start":1744044349629,"stop":1744044349632,"duration":3},"status":"passed","severity":"normal"},{"uid":"239bd422e1cd14bf","name":"should return place details when API call is successful","time":{"start":1744044351829,"stop":1744044351832,"duration":3},"status":"passed","severity":"normal"},{"uid":"f3469043c10da110","name":"should be defined","time":{"start":1744044352316,"stop":1744044352322,"duration":6},"status":"passed","severity":"normal"},{"uid":"1429d6263236e458","name":"should return country code","time":{"start":1744044351664,"stop":1744044351666,"duration":2},"status":"passed","severity":"normal"},{"uid":"1483c12a65545999","name":"should return new access and refresh tokens if refresh token is valid","time":{"start":1744044349237,"stop":1744044349241,"duration":4},"status":"passed","severity":"normal"},{"uid":"fcc3c4a802dadca0","name":"should throw ForbiddenException if user is not the owner","time":{"start":1744044349683,"stop":1744044349686,"duration":3},"status":"passed","severity":"normal"},{"uid":"13deb5a8f49079e6","name":"should create a contingency plan with sections and blocks","time":{"start":1744044349820,"stop":1744044349823,"duration":3},"status":"broken","severity":"normal"},{"uid":"406ca03f42eb55b8","name":"should throw UnauthorizedException if token is not provided","time":{"start":1744044350669,"stop":1744044350676,"duration":7},"status":"passed","severity":"normal"},{"uid":"448f0b7eb0db143d","name":"should be defined","time":{"start":1744044351057,"stop":1744044351071,"duration":14},"status":"passed","severity":"normal"},{"uid":"305469b1aaac3fd0","name":"should throw ForbiddenException if user is not the owner of the itinerary","time":{"start":1744044349776,"stop":1744044349787,"duration":11},"status":"passed","severity":"normal"},{"uid":"b88922b43fb540ef","name":"should remove a user from the itinerary successfully","time":{"start":1744044349805,"stop":1744044349807,"duration":2},"status":"passed","severity":"normal"},{"uid":"924f801e2a14f543","name":"should throw NotFoundException if itinerary doesnt exist","time":{"start":1744044347850,"stop":1744044347856,"duration":6},"status":"passed","severity":"normal"},{"uid":"53d4faa4905d6fde","name":"should send login email if user exists","time":{"start":1744044350247,"stop":1744044350250,"duration":3},"status":"passed","severity":"normal"},{"uid":"39c1ebb29ecaa81f","name":"should throw UnauthorizedException if firstNames do not match","time":{"start":1744044349289,"stop":1744044349292,"duration":3},"status":"passed","severity":"normal"},{"uid":"98c98c8d33af9ef9","name":"should filter itineraries with shared=true and finished=true","time":{"start":1744044349515,"stop":1744044349517,"duration":2},"status":"passed","severity":"normal"},{"uid":"183ce5451b0864dd","name":"should return completed itineraries with response formatting","time":{"start":1744044349584,"stop":1744044349587,"duration":3},"status":"passed","severity":"normal"},{"uid":"c98464e3ad3828af","name":"should return 401 Unauthorized if UMAMI_API_KEY is not set","time":{"start":1744044350574,"stop":1744044350595,"duration":21},"status":"passed","severity":"normal"},{"uid":"6f1ad2e0a1d06531","name":"should throw UnauthorizedException if refresh token is invalid","time":{"start":1744044351105,"stop":1744044351108,"duration":3},"status":"passed","severity":"normal"},{"uid":"b63c4e2e6765cd03","name":"should validate login ticket and return access token","time":{"start":1744044350254,"stop":1744044350259,"duration":5},"status":"passed","severity":"normal"},{"uid":"ca1ffbd739bb3242","name":"should throw ForbiddenException if the user is not the owner of the itinerary","time":{"start":1744044349811,"stop":1744044349813,"duration":2},"status":"passed","severity":"normal"},{"uid":"5050ba3e68071ef0","name":"should throw BadRequestException if email is already registered","time":{"start":1744044350220,"stop":1744044350238,"duration":18},"status":"passed","severity":"normal"},{"uid":"e6736093e4c1e1f3","name":"should throw an error for invalid page number","time":{"start":1744044349636,"stop":1744044349638,"duration":2},"status":"passed","severity":"normal"},{"uid":"4ce1e634ad6eba5c","name":"should throw UnauthorizedException if password is incorrect","time":{"start":1744044351093,"stop":1744044351100,"duration":7},"status":"passed","severity":"normal"},{"uid":"1a6f85990b5639f","name":"should fetch an itinerary reminder and return OK when found","time":{"start":1744044350179,"stop":1744044350184,"duration":5},"status":"passed","severity":"normal"},{"uid":"be6368b082d358d8","name":"should schedule a sendEmail job and verify it runs","time":{"start":1744044347857,"stop":1744044347860,"duration":3},"status":"passed","severity":"normal"},{"uid":"58c6b6abf96d09f9","name":"should throw UnauthorizedException if user not found","time":{"start":1744044351363,"stop":1744044351366,"duration":3},"status":"passed","severity":"normal"},{"uid":"5ec90401b6705146","name":"should return list of cities","time":{"start":1744044351667,"stop":1744044351669,"duration":2},"status":"passed","severity":"normal"},{"uid":"ac56533fe0a208cb","name":"should throw BadRequestException when block start time is after end time","time":{"start":1744044349525,"stop":1744044349529,"duration":4},"status":"passed","severity":"normal"},{"uid":"63fb91fd77e2aedf","name":"should create an itinerary without tags","time":{"start":1744044349476,"stop":1744044349480,"duration":4},"status":"passed","severity":"normal"},{"uid":"a31ef3c3e6adcb3","name":"should send webhook for login-validation","time":{"start":1744044350322,"stop":1744044350329,"duration":7},"status":"passed","severity":"normal"},{"uid":"5e6fd12f8822cdb3","name":"should throw an error when API call fails","time":{"start":1744044351833,"stop":1744044351836,"duration":3},"status":"passed","severity":"normal"},{"uid":"55d03596c8c56d95","name":"should throw NotFoundException if itinerary is not found","time":{"start":1744044349448,"stop":1744044349459,"duration":11},"status":"passed","severity":"normal"},{"uid":"404d320d643d9a72","name":"should be defined","time":{"start":1744044351819,"stop":1744044351829,"duration":10},"status":"passed","severity":"normal"},{"uid":"84bb67ad8ac88f47","name":"should throw an error when page number exceeds total pages","time":{"start":1744044349639,"stop":1744044349641,"duration":2},"status":"passed","severity":"normal"},{"uid":"c20ccf887e0b01ed","name":"should invite a user to an itinerary and return a formatted response","time":{"start":1744044349626,"stop":1744044349628,"duration":2},"status":"passed","severity":"normal"},{"uid":"6c7845e49b54d5eb","name":"should correctly count LOCATION blocks","time":{"start":1744044349652,"stop":1744044349658,"duration":6},"status":"passed","severity":"normal"},{"uid":"e67731fda3af2667","name":"should create an itinerary reminder and schedule the cron job","time":{"start":1744044350151,"stop":1744044350169,"duration":18},"status":"passed","severity":"normal"},{"uid":"915c5e9343d29bd2","name":"should return completed itineraries with locationCount","time":{"start":1744044349642,"stop":1744044349651,"duration":9},"status":"passed","severity":"normal"},{"uid":"761daa615c284b0f","name":"should create an itinerary with sections and blocks","time":{"start":1744044349391,"stop":1744044349398,"duration":7},"status":"passed","severity":"normal"},{"uid":"9ba28319d30f043","name":"should throw BadRequestException if user was created recently and is not confirmed","time":{"start":1744044349257,"stop":1744044349261,"duration":4},"status":"passed","severity":"normal"},{"uid":"a061f7210d507e38","name":"should transform page to a number","time":{"start":1744044351780,"stop":1744044351783,"duration":3},"status":"passed","severity":"normal"},{"uid":"24b6b9ebfff0d925","name":"should mark itinerary as complete","time":{"start":1744044349575,"stop":1744044349577,"duration":2},"status":"passed","severity":"normal"},{"uid":"4df0f2d3e1247140","name":"should return all itineraries with default parameters","time":{"start":1744044349511,"stop":1744044349514,"duration":3},"status":"passed","severity":"normal"},{"uid":"5013f7fa9fbd1627","name":"should clear refreshToken cookie","time":{"start":1744044351119,"stop":1744044351122,"duration":3},"status":"passed","severity":"normal"},{"uid":"b35534d16ae6031e","name":"should throw NotFoundException if the itinerary does not exist","time":{"start":1744044349650,"stop":1744044349653,"duration":3},"status":"passed","severity":"normal"},{"uid":"399240a951547269","name":"should handle fetch errors gracefully","time":{"start":1744044350570,"stop":1744044350573,"duration":3},"status":"passed","severity":"normal"},{"uid":"b76b3181be21f508","name":"should pass errors from service to the caller","time":{"start":1744044349471,"stop":1744044349475,"duration":4},"status":"passed","severity":"normal"},{"uid":"fcb9a1589f2e1348","name":"should throw BadRequestException when start date is after end date","time":{"start":1744044349522,"stop":1744044349525,"duration":3},"status":"passed","severity":"normal"},{"uid":"713b09c9695aa4ff","name":"should return user referral code and count","time":{"start":1744044350267,"stop":1744044350270,"duration":3},"status":"passed","severity":"normal"},{"uid":"2b29bf4374bdc997","name":"should throw BadRequestException when date format is invalid","time":{"start":1744044349404,"stop":1744044349430,"duration":26},"status":"passed","severity":"normal"},{"uid":"6e835a06d320e0a1","name":"should throw a ConflictException on already scheduled reminders","time":{"start":1744044347860,"stop":1744044347867,"duration":7},"status":"passed","severity":"normal"},{"uid":"81842d2a6870e473","name":"should handle service errors properly","time":{"start":1744044351412,"stop":1744044351415,"duration":3},"status":"passed","severity":"normal"},{"uid":"27437359d58671df","name":"should throw UnauthorizedException if ticket is expired","time":{"start":1744044350263,"stop":1744044350266,"duration":3},"status":"passed","severity":"normal"},{"uid":"2eb9a067b1443395","name":"should handle errors if fetch fails","time":{"start":1744044350329,"stop":1744044350333,"duration":4},"status":"passed","severity":"normal"},{"uid":"f741ac700e2cfaf2","name":"should return an empty array when there are no completed itineraries","time":{"start":1744044349658,"stop":1744044349669,"duration":11},"status":"passed","severity":"normal"},{"uid":"549b958ccb35c85f","name":"should handle optional fields in the DTO correctly","time":{"start":1744044349481,"stop":1744044349484,"duration":3},"status":"passed","severity":"normal"},{"uid":"b02f769519383efc","name":"should throw ForbiddenException if user does not own the itinerary","time":{"start":1744044349514,"stop":1744044349518,"duration":4},"status":"passed","severity":"normal"},{"uid":"faea66775b198791","name":"should return the itinerary if user is the owner","time":{"start":1744044349546,"stop":1744044349549,"duration":3},"status":"passed","severity":"normal"},{"uid":"9b6b62bfc64f17cd","name":"should throw BadRequestException if last ticket is still valid","time":{"start":1744044350293,"stop":1744044350297,"duration":4},"status":"passed","severity":"normal"},{"uid":"93e828541db010af","name":"should return empty itinerary array if no completed itineraries found","time":{"start":1744044349588,"stop":1744044349590,"duration":2},"status":"passed","severity":"normal"},{"uid":"b703f40b426dda34","name":"should throw an error for invalid page number","time":{"start":1744044349568,"stop":1744044349571,"duration":3},"status":"passed","severity":"normal"},{"uid":"893900e4754ae211","name":"should remove an itinerary reminder","time":{"start":1744044347845,"stop":1744044347850,"duration":5},"status":"passed","severity":"normal"},{"uid":"5153ddfb6e29a9c5","name":"should return list of countries","time":{"start":1744044351072,"stop":1744044351090,"duration":18},"status":"passed","severity":"normal"},{"uid":"e3bd9db8b1ee718c","name":"should return empty list if user has no itineraries","time":{"start":1744044349587,"stop":1744044349592,"duration":5},"status":"passed","severity":"normal"},{"uid":"ad5b497a1ee35891","name":"should throw BadRequestException if requesting too fast","time":{"start":1744044349270,"stop":1744044349273,"duration":3},"status":"passed","severity":"normal"},{"uid":"f70584cc741f2a39","name":"should return empty data when user has no shared itineraries","time":{"start":1744044349633,"stop":1744044349635,"duration":2},"status":"passed","severity":"normal"},{"uid":"a6c60b25389f8376","name":"should return access and refresh tokens on successful login","time":{"start":1744044351025,"stop":1744044351083,"duration":58},"status":"passed","severity":"normal"},{"uid":"8e212efcfdbacd8e","name":"should throw BadRequestException if user does not exist","time":{"start":1744044349266,"stop":1744044349269,"duration":3},"status":"passed","severity":"normal"},{"uid":"a82e16223973ae32","name":"should delete expired refresh tokens","time":{"start":1744044349241,"stop":1744044349245,"duration":4},"status":"passed","severity":"normal"},{"uid":"330b0c0de3224292","name":"should be defined","time":{"start":1744044352120,"stop":1744044352130,"duration":10},"status":"passed","severity":"normal"},{"uid":"c6f3f61b72848ca7","name":"should throw an error when page number exceeds total pages","time":{"start":1744044349626,"stop":1744044349628,"duration":2},"status":"passed","severity":"normal"},{"uid":"de80e4cfee9c7903","name":"should handle negative page numbers","time":{"start":1744044349572,"stop":1744044349581,"duration":9},"status":"passed","severity":"normal"},{"uid":"521d13c2e29b2f85","name":"should throw NotFoundException when tags do not exist","time":{"start":1744044349445,"stop":1744044349451,"duration":6},"status":"passed","severity":"normal"},{"uid":"143e818ec2b2d87","name":"should throw BadRequestException when start date is after end date","time":{"start":1744044349431,"stop":1744044349435,"duration":4},"status":"passed","severity":"normal"},{"uid":"2b1bf83888fd6581","name":"should throw UnauthorizedException if emails do not match","time":{"start":1744044349285,"stop":1744044349288,"duration":3},"status":"passed","severity":"normal"},{"uid":"3392e34db4a8ba7","name":"should throw NotFoundException when itinerary does not exist","time":{"start":1744044349539,"stop":1744044349542,"duration":3},"status":"passed","severity":"normal"},{"uid":"f52b4bfeac18c7ad","name":"should return the correct start and end timestamps for the previous month","time":{"start":1744044350599,"stop":1744044350602,"duration":3},"status":"passed","severity":"normal"},{"uid":"c97bf3f60f5d4907","name":"should handle overflow page numbers","time":{"start":1744044349581,"stop":1744044349587,"duration":6},"status":"passed","severity":"normal"},{"uid":"6b8dcf2434fdbd74","name":"should throw UnauthorizedException if user is not found","time":{"start":1744044349176,"stop":1744044349224,"duration":48},"status":"passed","severity":"normal"},{"uid":"bd4bce3e37006b1d","name":"should pass errors from service to the caller","time":{"start":1744044349594,"stop":1744044349609,"duration":15},"status":"passed","severity":"normal"},{"uid":"753e3a1558a4c1cf","name":"should throw a NotFoundException if job doesnt exist","time":{"start":1744044347887,"stop":1744044347890,"duration":3},"status":"passed","severity":"normal"},{"uid":"7a35dc5a49eda59f","name":"should throw UnauthorizedException if email is not registered","time":{"start":1744044351086,"stop":1744044351092,"duration":6},"status":"passed","severity":"normal"},{"uid":"acd9b91b04d8da93","name":"should call service.createPreRegister with correct data","time":{"start":1744044351582,"stop":1744044351585,"duration":3},"status":"passed","severity":"normal"},{"uid":"c559fe9148096511","name":"should calculate scheduled date correctly","time":{"start":1744044347876,"stop":1744044347879,"duration":3},"status":"passed","severity":"normal"},{"uid":"267b3e4bdac24a77","name":"should send analytics data to Discord","time":{"start":1744044350606,"stop":1744044350611,"duration":5},"status":"passed","severity":"normal"},{"uid":"73e4f0136fa3cef7","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1744044349578,"stop":1744044349580,"duration":2},"status":"passed","severity":"normal"},{"uid":"acf150fcc24419b","name":"should throw an error for invalid page number","time":{"start":1744044349615,"stop":1744044349625,"duration":10},"status":"passed","severity":"normal"},{"uid":"fddfd795c6dc59b7","name":"should parse JSON even if AI returns extra text","time":{"start":1744044350950,"stop":1744044350951,"duration":1},"status":"passed","severity":"normal"},{"uid":"ca1914a5675af642","name":"should throw NotFoundException if itinerary doesnt exist","time":{"start":1744044347787,"stop":1744044347795,"duration":8},"status":"passed","severity":"normal"},{"uid":"c41a7a4391c5b33e","name":"should throw an error if itineraryData.sections is empty","time":{"start":1744044351642,"stop":1744044351648,"duration":6},"status":"passed","severity":"normal"},{"uid":"68ac2f8db65b7d14","name":"should throw BadRequestException when no sections are provided","time":{"start":1744044349529,"stop":1744044349532,"duration":3},"status":"passed","severity":"normal"},{"uid":"3cf8a8e9448e0966","name":"should return place details when placeId is valid","time":{"start":1744044351396,"stop":1744044351408,"duration":12},"status":"passed","severity":"normal"},{"uid":"d33cb1e352ddcc89","name":"should send verification email if user exists","time":{"start":1744044349278,"stop":1744044349281,"duration":3},"status":"passed","severity":"normal"},{"uid":"656c49d662feeaa7","name":"should be defined","time":{"start":1744044351567,"stop":1744044351581,"duration":14},"status":"passed","severity":"normal"},{"uid":"fda35e8b93eaeaad","name":"should throw ForbiddenException if user is not authorized","time":{"start":1744044349563,"stop":1744044349565,"duration":2},"status":"passed","severity":"normal"},{"uid":"172f9c607e2c9af9","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1744044349507,"stop":1744044349513,"duration":6},"status":"passed","severity":"normal"},{"uid":"d75afbe10a9217f","name":"should return the authenticated user","time":{"start":1744044351122,"stop":1744044351125,"duration":3},"status":"passed","severity":"normal"},{"uid":"b7691092e7693d97","name":"should remove a user from an itinerary and return a formatted response","time":{"start":1744044349647,"stop":1744044349649,"duration":2},"status":"passed","severity":"normal"},{"uid":"201e455363b90a56","name":"should create an itinerary reminder","time":{"start":1744044347778,"stop":1744044347786,"duration":8},"status":"passed","severity":"normal"},{"uid":"8db07670d092f302","name":"should return only shared itineraries when sharedBool is true","time":{"start":1744044349601,"stop":1744044349607,"duration":6},"status":"passed","severity":"normal"},{"uid":"76f5bdff1d3cba53","name":"should update an itinerary reminder and reschdule the cron job","time":{"start":1744044350170,"stop":1744044350175,"duration":5},"status":"passed","severity":"normal"},{"uid":"a60d72eeb1e7c223","name":"should throw NotFoundException if the invitation does not exist","time":{"start":1744044349640,"stop":1744044349643,"duration":3},"status":"passed","severity":"normal"},{"uid":"167dd801c97f8ee3","name":"should be defined","time":{"start":1744044350634,"stop":1744044350663,"duration":29},"status":"passed","severity":"normal"},{"uid":"2612847c37e9e8","name":"should be defined","time":{"start":1744044350116,"stop":1744044350149,"duration":33},"status":"passed","severity":"normal"},{"uid":"91c59fa4cd5b10ee","name":"should throw NotFoundException if itineraryId is not found when accepting an invitation","time":{"start":1744044349799,"stop":1744044349802,"duration":3},"status":"passed","severity":"normal"},{"uid":"4eb268782273c719","name":"should return country code response","time":{"start":1744044351101,"stop":1744044351106,"duration":5},"status":"passed","severity":"normal"},{"uid":"4b4ff23db8458498","name":"should fetch analytics data and send to Discord","time":{"start":1744044350563,"stop":1744044350569,"duration":6},"status":"passed","severity":"normal"},{"uid":"69d60c6d19df8868","name":"should throw NotFoundException if user is not found","time":{"start":1744044349296,"stop":1744044349429,"duration":133},"status":"passed","severity":"normal"},{"uid":"b7984bd9d98eefdf","name":"should throw ForbiddenException if the user is not authorized to accept the invitation","time":{"start":1744044349643,"stop":1744044349646,"duration":3},"status":"passed","severity":"normal"},{"uid":"32a079560abe7776","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1744044349823,"stop":1744044349825,"duration":2},"status":"passed","severity":"normal"},{"uid":"821b3301908c2020","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1744044349690,"stop":1744044349692,"duration":2},"status":"passed","severity":"normal"},{"uid":"3cd63f32dce5a188","name":"should be defined","time":{"start":1744044352184,"stop":1744044352191,"duration":7},"status":"passed","severity":"normal"},{"uid":"f1890447483b58b1","name":"should delete the oldest ticket if more than 5 exist","time":{"start":1744044350297,"stop":1744044350301,"duration":4},"status":"passed","severity":"normal"},{"uid":"f5d1793b302d895f","name":"should return country details based on placeId","time":{"start":1744044351098,"stop":1744044351100,"duration":2},"status":"passed","severity":"normal"},{"uid":"d8e56a1c59916ab0","name":"should log an error and return if UMAMI_DISCORD_WEBHOOK_URL is not set","time":{"start":1744044350619,"stop":1744044350623,"duration":4},"status":"passed","severity":"normal"},{"uid":"5646d4bfa292c07e","name":"should be defined","time":{"start":1744044352246,"stop":1744044352251,"duration":5},"status":"passed","severity":"normal"},{"uid":"74536c6f81bbed39","name":"should throw UnauthorizedException if token has expired","time":{"start":1744044350705,"stop":1744044350708,"duration":3},"status":"passed","severity":"normal"},{"uid":"9918ae785b44f3ca","name":"should throw UnauthorizedException if token is invalid","time":{"start":1744044350676,"stop":1744044350693,"duration":17},"status":"passed","severity":"normal"},{"uid":"afa0ae3a87d48f1d","name":"should send an email successfully","time":{"start":1744044351830,"stop":1744044351832,"duration":2},"status":"passed","severity":"normal"},{"uid":"298fc3f2e15346b1","name":"should throw ForbiddenException if the user is not authorized to invite","time":{"start":1744044349633,"stop":1744044349636,"duration":3},"status":"passed","severity":"normal"},{"uid":"84975ccf9357c4e2","name":"should throw an error if itinerary is not found","time":{"start":1744044349615,"stop":1744044349618,"duration":3},"status":"passed","severity":"normal"},{"uid":"2f1e7a826109606e","name":"should throw an error if placeId is not provided","time":{"start":1744044351409,"stop":1744044351412,"duration":3},"status":"passed","severity":"normal"},{"uid":"c66d54267091c865","name":"should be defined","time":{"start":1744044350935,"stop":1744044350947,"duration":12},"status":"passed","severity":"normal"},{"uid":"bc000bcf2f4f6726","name":"should be defined","time":{"start":1744044350138,"stop":1744044350182,"duration":44},"status":"passed","severity":"normal"},{"uid":"6c45de338d50594","name":"should throw InternalServerErrorException on AI error","time":{"start":1744044350951,"stop":1744044350955,"duration":4},"status":"passed","severity":"normal"},{"uid":"d16e1fc05b6ffce7","name":"should return parsed feedback array from AI response","time":{"start":1744044350947,"stop":1744044350949,"duration":2},"status":"passed","severity":"normal"},{"uid":"c22a7c8d486dfe7d","name":"should remove an itinerary reminder and cancel the cron job","time":{"start":1744044350175,"stop":1744044350178,"duration":3},"status":"passed","severity":"normal"},{"uid":"5074323fe18a7072","name":"should call service.validateLogin with correct ticketId","time":{"start":1744044351598,"stop":1744044351601,"duration":3},"status":"passed","severity":"normal"},{"uid":"ebc4f3f11a82af6a","name":"should be defined","time":{"start":1744044351345,"stop":1744044351353,"duration":8},"status":"passed","severity":"normal"},{"uid":"95d3d8903e708b31","name":"should handle Discord webhook errors gracefully","time":{"start":1744044350612,"stop":1744044350618,"duration":6},"status":"passed","severity":"normal"},{"uid":"f91a67b9a35dbf4e","name":"should return all tags","time":{"start":1744044349619,"stop":1744044349622,"duration":3},"status":"passed","severity":"normal"},{"uid":"6ca21e257c04829a","name":"should throw BadRequestException on improper reminder option","time":{"start":1744044347881,"stop":1744044347884,"duration":3},"status":"passed","severity":"normal"},{"uid":"9b2679291e4da3c","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1744044349560,"stop":1744044349562,"duration":2},"status":"passed","severity":"normal"},{"uid":"c8402a953634b75a","name":"should throw NotFoundException if the user to be removed is not a participant","time":{"start":1744044349814,"stop":1744044349817,"duration":3},"status":"passed","severity":"normal"},{"uid":"6d64b62bc4cb98fc","name":"should call authService.register with correct data","time":{"start":1744044351116,"stop":1744044351118,"duration":2},"status":"passed","severity":"normal"},{"uid":"bbfaac4ba32e713e","name":"should return the pre-register count","time":{"start":1744044351585,"stop":1744044351588,"duration":3},"status":"passed","severity":"normal"},{"uid":"46c0cd5f1380b0fc","name":"should throw ConflictException if user already exists and is confirmed","time":{"start":1744044349245,"stop":1744044349257,"duration":12},"status":"passed","severity":"normal"},{"uid":"14b6169cfc473d7b","name":"should send webhook for pre-registration","time":{"start":1744044350306,"stop":1744044350322,"duration":16},"status":"passed","severity":"normal"},{"uid":"5dd5071f4ded1023","name":"should handle service errors correctly","time":{"start":1744044349523,"stop":1744044349526,"duration":3},"status":"passed","severity":"normal"},{"uid":"747d509f46ca70f3","name":"should call authService.createUser and authService.sendVerification with correct data","time":{"start":1744044351109,"stop":1744044351112,"duration":3},"status":"passed","severity":"normal"},{"uid":"ef692caa1383b201","name":"should return empty data when there are no shared itineraries","time":{"start":1744044349533,"stop":1744044349535,"duration":2},"status":"passed","severity":"normal"}]