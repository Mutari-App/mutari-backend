"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","8","ItineraryService","updateItinerary","","","","should update an itinerary with new details, tags, sections, and blocks",""
"passed","Fri Mar 07 12:36:45 GMT 2025","Fri Mar 07 12:36:45 GMT 2025","10","AuthService","","","","","should be defined",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","18","ItineraryService","updateItinerary","","","","should throw BadRequestException when start date is after end date",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","23","StaticService","searchCountries","","","","should return list of countries",""
"passed","Fri Mar 07 12:36:44 GMT 2025","Fri Mar 07 12:36:44 GMT 2025","3","StaticController","getCountries","","","","should return list of countries",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","15","StaticService","_getCountryCode","","","","should return country details based on placeId",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","23","PreRegisterService","createPreRegister","","","","should throw BadRequestException if email is already registered",""
"passed","Fri Mar 07 12:36:45 GMT 2025","Fri Mar 07 12:36:45 GMT 2025","6","PaymentService","","","","","should be defined",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","3","PreRegisterService","login","","","","should send login email if user exists",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","3","ItineraryService","updateItinerary","","","","should throw BadRequestException when date format is invalid",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","3","PreRegisterService","_generateTicket","","","","should delete the oldest ticket if more than 5 exist",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","5","PreRegisterService","validateLogin","","","","should validate login ticket and return access token",""
"passed","Fri Mar 07 12:36:44 GMT 2025","Fri Mar 07 12:36:44 GMT 2025","3","PreRegisterController","preRegister","","","","should call service.createPreRegister with correct data",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","51","ItineraryService","","","","","should be defined",""
"passed","Fri Mar 07 12:36:44 GMT 2025","Fri Mar 07 12:36:44 GMT 2025","17","TicketController","","","","","should be defined",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","4","ItineraryService","updateItinerary","","","","should update an itinerary with defaults for deleted/missing fields",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","15","ItineraryService","updateItinerary","","","","should throw NotFoundException if itinerary does not exist",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","5","ItineraryService","updateItinerary","","","","should throw BadRequestException when duplicate section numbers are provided",""
"passed","Fri Mar 07 12:36:44 GMT 2025","Fri Mar 07 12:36:44 GMT 2025","3","EmailService","","","","","should handle errors if sending email fails",""
"passed","Fri Mar 07 12:36:44 GMT 2025","Fri Mar 07 12:36:44 GMT 2025","2","PreRegisterController","login","","","","should call service.login with the correct email",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","29","StaticService","","","","","should be defined",""
"passed","Fri Mar 07 12:36:44 GMT 2025","Fri Mar 07 12:36:44 GMT 2025","17","AppController","root","","","","should return ""Hello World!""",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","13","ItineraryService","updateItinerary","","","","should throw BadRequestException when no sections are provided",""
"passed","Fri Mar 07 12:36:44 GMT 2025","Fri Mar 07 12:36:44 GMT 2025","3","PreRegisterController","referralCode","","","","should call service.getReferralCode with the correct userId",""
"passed","Fri Mar 07 12:36:45 GMT 2025","Fri Mar 07 12:36:45 GMT 2025","8","TicketService","","","","","should be defined",""
"passed","Fri Mar 07 12:36:44 GMT 2025","Fri Mar 07 12:36:44 GMT 2025","23","PreRegisterController","","","","","should be defined",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","30","StaticService","searchCities","","","","should return list of cities based on country",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","3","PreRegisterService","sendDiscordWebhook","","","","should handle errors if fetch fails",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","26","PreRegisterService","sendDiscordWebhook","","","","should send webhook for pre-registration",""
"passed","Fri Mar 07 12:36:44 GMT 2025","Fri Mar 07 12:36:44 GMT 2025","13","ProfileController","","","","","should be defined",""
"passed","Fri Mar 07 12:36:44 GMT 2025","Fri Mar 07 12:36:44 GMT 2025","10","NotificationController","","","","","should be defined",""
"passed","Fri Mar 07 12:36:44 GMT 2025","Fri Mar 07 12:36:44 GMT 2025","2","PreRegisterController","getPreRegisterCount","","","","should return the pre-register count",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","3","PreRegisterService","_generateTicket","","","","should throw BadRequestException if last ticket is still valid",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","8","ItineraryController","updateItinerary","","","","should update an itinerary and return a formatted response",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","4","PreRegisterService","validateLogin","","","","should throw UnauthorizedException if ticket is expired",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","44","ItineraryController","","","","","should be defined",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","7","PreRegisterService","sendDiscordWebhook","","","","should send webhook for login-validation",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","4","ItineraryService","updateItinerary","","","","should throw ForbiddenException if user does not own the itinerary",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","9","StaticService","getCountryCode","","","","should return country code response",""
"passed","Fri Mar 07 12:36:45 GMT 2025","Fri Mar 07 12:36:45 GMT 2025","12","PaymentController","","","","","should be defined",""
"passed","Fri Mar 07 12:36:44 GMT 2025","Fri Mar 07 12:36:44 GMT 2025","2","StaticController","getCountryCode","","","","should return country code",""
"passed","Fri Mar 07 12:36:45 GMT 2025","Fri Mar 07 12:36:45 GMT 2025","4","MapService","","","","","should be defined",""
"passed","Fri Mar 07 12:36:45 GMT 2025","Fri Mar 07 12:36:45 GMT 2025","7","MapController","","","","","should be defined",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","4","PreRegisterService","getPreRegisterCount","","","","should return total pre-registered users count",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","7","ItineraryService","updateItinerary","","","","should update an itinerary with defaults for missing block fields",""
"passed","Fri Mar 07 12:36:45 GMT 2025","Fri Mar 07 12:36:45 GMT 2025","7","ProfileService","","","","","should be defined",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","50","PreRegisterService","","","","","should be defined",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","9","ItineraryController","updateItinerary","","","","should pass errors from service to the caller",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","55","PreRegisterService","createPreRegister","","","","should create a new user and send confirmation email",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","3","PreRegisterService","_generateTicket","","","","should create a new ticket for the user",""
"passed","Fri Mar 07 12:36:44 GMT 2025","Fri Mar 07 12:36:44 GMT 2025","2","StaticController","getCities","","","","should return list of cities",""
"passed","Fri Mar 07 12:36:44 GMT 2025","Fri Mar 07 12:36:44 GMT 2025","9","AuthController","","","","","should be defined",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","6","PreRegisterService","login","","","","should throw BadRequestException if email is not registered",""
"passed","Fri Mar 07 12:36:44 GMT 2025","Fri Mar 07 12:36:44 GMT 2025","16","StaticController","","","","","should be defined",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","5","PreRegisterService","validateLogin","","","","should throw UnauthorizedException for invalid ticket",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","3","PreRegisterService","getReferralCode","","","","should return user referral code and count",""
"passed","Fri Mar 07 12:36:44 GMT 2025","Fri Mar 07 12:36:44 GMT 2025","9","EmailService","","","","","should be defined",""
"passed","Fri Mar 07 12:36:44 GMT 2025","Fri Mar 07 12:36:44 GMT 2025","3","EmailService","","","","","should send an email successfully",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","3","PreRegisterService","sendDiscordWebhook","","","","should not send webhook if DISCORD_WEBHOOK_URL is not set",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","7","ItineraryService","updateItinerary","","","","should throw NotFoundException when tags do not exist",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","13","ItineraryService","updateItinerary","","","","should throw BadRequestException when block start time is after end time",""
"passed","Fri Mar 07 12:36:44 GMT 2025","Fri Mar 07 12:36:44 GMT 2025","8","PreRegisterController","validateLogin","","","","should call service.validateLogin with correct ticketId",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","3","PreRegisterService","getReferralCode","","","","should throw BadRequestException if user is not found",""
"passed","Fri Mar 07 12:36:43 GMT 2025","Fri Mar 07 12:36:43 GMT 2025","5","PreRegisterService","createPreRegister","","","","should throw NotFoundException if referral code is not found",""
"passed","Fri Mar 07 12:36:45 GMT 2025","Fri Mar 07 12:36:45 GMT 2025","7","NotificationService","","","","","should be defined",""
