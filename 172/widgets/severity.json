[{"uid":"f5b985c0dd58979f","name":"should handle optional fields in the DTO correctly","time":{"start":1744306011994,"stop":1744306011997,"duration":3},"status":"passed","severity":"normal"},{"uid":"cf59d26b9c2a0a3a","name":"should throw BadRequestException if email is not registered","time":{"start":1744306013083,"stop":1744306013087,"duration":4},"status":"passed","severity":"normal"},{"uid":"e6db7649c0ebd5","name":"should throw an error if itinerary is not found","time":{"start":1744306012143,"stop":1744306012146,"duration":3},"status":"passed","severity":"normal"},{"uid":"10336d9c63f9268f","name":"should handle fetch errors gracefully","time":{"start":1744306012908,"stop":1744306012916,"duration":8},"status":"passed","severity":"normal"},{"uid":"112aff7058bb5093","name":"should delete expired refresh tokens","time":{"start":1744306012047,"stop":1744306012055,"duration":8},"status":"passed","severity":"normal"},{"uid":"cc1ba140315e835f","name":"should throw ConflictException if itinerary reminder already exist","time":{"start":1744306010523,"stop":1744306010534,"duration":11},"status":"passed","severity":"normal"},{"uid":"fc9f81e55122310f","name":"should throw ForbiddenException if the user is not authorized to accept the invitation","time":{"start":1744306012197,"stop":1744306012205,"duration":8},"status":"passed","severity":"normal"},{"uid":"5250b1efccf24b69","name":"should return all contingency plans for the given itinerary","time":{"start":1744306011618,"stop":1744306011620,"duration":2},"status":"passed","severity":"normal"},{"uid":"1019d07019a9f731","name":"should throw an error for invalid page number","time":{"start":1744306012064,"stop":1744306012070,"duration":6},"status":"passed","severity":"normal"},{"uid":"5f66627786bea93a","name":"should throw BadRequestException on improper reminder option","time":{"start":1744306010640,"stop":1744306010643,"duration":3},"status":"passed","severity":"normal"},{"uid":"dc735417b955c5f8","name":"should return all itineraries with default parameters","time":{"start":1744306012019,"stop":1744306012023,"duration":4},"status":"passed","severity":"normal"},{"uid":"5844f04cf3bc8460","name":"should return an itinerary reminder with associated itinerary id","time":{"start":1744306010549,"stop":1744306010559,"duration":10},"status":"passed","severity":"normal"},{"uid":"9f069e9ab7ea9297","name":"should return completed itineraries with response formatting","time":{"start":1744306012102,"stop":1744306012108,"duration":6},"status":"passed","severity":"normal"},{"uid":"89daaeba452f3053","name":"should throw NotFoundException if the itinerary does not exist","time":{"start":1744306012209,"stop":1744306012214,"duration":5},"status":"passed","severity":"normal"},{"uid":"2e683df0e24ee507","name":"should throw ForbiddenException when user is not the owner","time":{"start":1744306011356,"stop":1744306011359,"duration":3},"status":"passed","severity":"normal"},{"uid":"9261ea03ffb82c9a","name":"should return an empty array if there are no tags","time":{"start":1744306011572,"stop":1744306011576,"duration":4},"status":"passed","severity":"normal"},{"uid":"4b79bd0d8d96c762","name":"should handle overflow page numbers","time":{"start":1744306011409,"stop":1744306011421,"duration":12},"status":"passed","severity":"normal"},{"uid":"10f7850e29dc9d2","name":"should throw NotFoundException if the user to be removed is not a participant","time":{"start":1744306011616,"stop":1744306011618,"duration":2},"status":"passed","severity":"normal"},{"uid":"a7668202f69af780","name":"should create an itinerary without tags","time":{"start":1744306011988,"stop":1744306011993,"duration":5},"status":"passed","severity":"normal"},{"uid":"b3e2e54f88f6121a","name":"should throw NotFound if user email is not found to accept the invitation","time":{"start":1744306011605,"stop":1744306011608,"duration":3},"status":"passed","severity":"normal"},{"uid":"d2e1939671e2d8e7","name":"should throw ForbiddenException if user is not the owner","time":{"start":1744306011554,"stop":1744306011556,"duration":2},"status":"passed","severity":"normal"},{"uid":"d506c6e0a6b9c77a","name":"should schedule a sendEmail job and verify it runs","time":{"start":1744306010622,"stop":1744306010626,"duration":4},"status":"passed","severity":"normal"},{"uid":"999d9543d41708cd","name":"should remove a user from the itinerary successfully","time":{"start":1744306011608,"stop":1744306011610,"duration":2},"status":"passed","severity":"normal"},{"uid":"ee37d68d3cfec3c8","name":"should throw NotFoundException if user is not found","time":{"start":1744306012121,"stop":1744306012271,"duration":150},"status":"passed","severity":"normal"},{"uid":"d10f24c410ce594b","name":"should throw UnauthorizedException if user is not found","time":{"start":1744306011967,"stop":1744306012019,"duration":52},"status":"passed","severity":"normal"},{"uid":"2c4e57f3327aacb2","name":"should create a new user if user does not exist","time":{"start":1744306012074,"stop":1744306012077,"duration":3},"status":"passed","severity":"normal"},{"uid":"56a4745b17c367b1","name":"should handle service errors correctly","time":{"start":1744306012029,"stop":1744306012032,"duration":3},"status":"passed","severity":"normal"},{"uid":"a94295624d3c6689","name":"should be defined","time":{"start":1744306014936,"stop":1744306014950,"duration":14},"status":"passed","severity":"normal"},{"uid":"3b0994352f8868ec","name":"should throw ForbiddenException if the user is not the owner of the itinerary","time":{"start":1744306011613,"stop":1744306011615,"duration":2},"status":"passed","severity":"normal"},{"uid":"ff11a2c0fab56e8f","name":"should validate login ticket and return access token","time":{"start":1744306013087,"stop":1744306013092,"duration":5},"status":"passed","severity":"normal"},{"uid":"bd8fac86216c92b9","name":"should be defined","time":{"start":1744306011117,"stop":1744306011210,"duration":93},"status":"passed","severity":"normal"},{"uid":"fa5569b4989c6585","name":"should throw ForbiddenException if user is not authorized","time":{"start":1744306011373,"stop":1744306011378,"duration":5},"status":"passed","severity":"normal"},{"uid":"e8866cc9774b145c","name":"should throw BadRequestException when duplicate section numbers are provided","time":{"start":1744306011274,"stop":1744306011278,"duration":4},"status":"passed","severity":"normal"},{"uid":"5e0db4bb9b3e3ca6","name":"should throw UnauthorizedException if refresh token is blacklisted","time":{"start":1744306012032,"stop":1744306012038,"duration":6},"status":"passed","severity":"normal"},{"uid":"a461ab9ba4c8f9d9","name":"should throw a BadRequestException on jobs with date in past","time":{"start":1744306010633,"stop":1744306010636,"duration":3},"status":"passed","severity":"normal"},{"uid":"c02f8f228e1b078","name":"should send an email successfully","time":{"start":1744306014422,"stop":1744306014424,"duration":2},"status":"passed","severity":"normal"},{"uid":"478858abb2f0363e","name":"should correctly count LOCATION blocks","time":{"start":1744306011514,"stop":1744306011519,"duration":5},"status":"passed","severity":"normal"},{"uid":"8630d86162d64000","name":"should throw BadRequestException when start date is after end date","time":{"start":1744306011314,"stop":1744306011326,"duration":12},"status":"passed","severity":"normal"},{"uid":"d14feec0d53626fa","name":"should remove an itinerary successfully","time":{"start":1744306011557,"stop":1744306011560,"duration":3},"status":"passed","severity":"normal"},{"uid":"aec326e7b21dea7","name":"should send verification email if user exists","time":{"start":1744306012089,"stop":1744306012092,"duration":3},"status":"passed","severity":"normal"},{"uid":"9294026fb26b1d4c","name":"should update an itinerary with defaults for deleted/missing fields","time":{"start":1744306011290,"stop":1744306011295,"duration":5},"status":"passed","severity":"normal"},{"uid":"b8980096fd6a9303","name":"should be defined","time":{"start":1744306010402,"stop":1744306010461,"duration":59},"status":"passed","severity":"normal"},{"uid":"b3227a246574cb82","name":"should throw NotFoundException if itinerary reminder does not exist","time":{"start":1744306010573,"stop":1744306010579,"duration":6},"status":"passed","severity":"normal"},{"uid":"f54b395d2c456f97","name":"should throw NotFoundException if the pending invitation does not exist","time":{"start":1744306011599,"stop":1744306011601,"duration":2},"status":"passed","severity":"normal"},{"uid":"5f7b4f0700c56cdc","name":"should return empty list if user has no itineraries","time":{"start":1744306011422,"stop":1744306011433,"duration":11},"status":"passed","severity":"normal"},{"uid":"1580121063eaf890","name":"should create a contingency plan with sections and blocks","time":{"start":1744306011621,"stop":1744306011627,"duration":6},"status":"passed","severity":"normal"},{"uid":"84116061b5e8b3a5","name":"should call service.createPreRegister with correct data","time":{"start":1744306014236,"stop":1744306014239,"duration":3},"status":"passed","severity":"normal"},{"uid":"36196f86a3da2296","name":"should throw NotFoundException if itinerary is not found","time":{"start":1744306011968,"stop":1744306011972,"duration":4},"status":"passed","severity":"normal"},{"uid":"f80a2eaefa2e34e9","name":"should return an itinerary when found","time":{"start":1744306011919,"stop":1744306011967,"duration":48},"status":"passed","severity":"normal"},{"uid":"2fe44b937ffbfd2e","name":"should pass errors from service to the caller","time":{"start":1744306012130,"stop":1744306012136,"duration":6},"status":"passed","severity":"normal"},{"uid":"cebe9e9a12ba96d9","name":"should throw BadRequestException when date format is invalid","time":{"start":1744306011226,"stop":1744306011263,"duration":37},"status":"passed","severity":"normal"},{"uid":"e3da8e950715200d","name":"should return an array of tags","time":{"start":1744306011568,"stop":1744306011571,"duration":3},"status":"passed","severity":"normal"},{"uid":"5b3e99da016241f2","name":"should throw an error for invalid page number","time":{"start":1744306011468,"stop":1744306011474,"duration":6},"status":"passed","severity":"normal"},{"uid":"809aea6c469103f3","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1744306011299,"stop":1744306011306,"duration":7},"status":"passed","severity":"normal"},{"uid":"291d434599413a5c","name":"should throw UnauthorizedException for invalid ticket","time":{"start":1744306013093,"stop":1744306013096,"duration":3},"status":"passed","severity":"normal"},{"uid":"ceb79e26ef5f43b","name":"should remove an itinerary reminder","time":{"start":1744306010588,"stop":1744306010605,"duration":17},"status":"passed","severity":"normal"},{"uid":"f76eb6f6012fbbf5","name":"should be defined","time":{"start":1744306013852,"stop":1744306013863,"duration":11},"status":"passed","severity":"normal"},{"uid":"830dba0b70840cbd","name":"should be defined","time":{"start":1744306014416,"stop":1744306014422,"duration":6},"status":"passed","severity":"normal"},{"uid":"dd248ec5a1cd1bae","name":"should throw BadRequestException when no sections are provided","time":{"start":1744306011270,"stop":1744306011274,"duration":4},"status":"passed","severity":"normal"},{"uid":"fa04e991a6316548","name":"should return empty data when there are no itineraries","time":{"start":1744306012073,"stop":1744306012076,"duration":3},"status":"passed","severity":"normal"},{"uid":"2893838e6d887fd9","name":"should pass errors from service to the caller","time":{"start":1744306012878,"stop":1744306012881,"duration":3},"status":"passed","severity":"normal"},{"uid":"e9967e6b33fc3f59","name":"should create an itinerary reminder","time":{"start":1744306010496,"stop":1744306010502,"duration":6},"status":"passed","severity":"normal"},{"uid":"1c11521b0a6a1669","name":"should throw BadRequestException if user was created recently and is not confirmed","time":{"start":1744306012063,"stop":1744306012069,"duration":6},"status":"passed","severity":"normal"},{"uid":"70cc13e069dc8c4e","name":"should throw NotFoundException if itinerary doesnt exist","time":{"start":1744306010606,"stop":1744306010620,"duration":14},"status":"passed","severity":"normal"},{"uid":"b1ad37a972f732a8","name":"should be defined","time":{"start":1744306014402,"stop":1744306014413,"duration":11},"status":"passed","severity":"normal"},{"uid":"eb9b5f3d6789aada","name":"should send webhook for login-validation","time":{"start":1744306013139,"stop":1744306013144,"duration":5},"status":"passed","severity":"normal"},{"uid":"a3769756d70acab1","name":"should throw an error if placeId is not provided","time":{"start":1744306014145,"stop":1744306014148,"duration":3},"status":"passed","severity":"normal"},{"uid":"c16c755cdfb610fb","name":"should throw an error when page number exceeds total pages","time":{"start":1744306011474,"stop":1744306011480,"duration":6},"status":"passed","severity":"normal"},{"uid":"b86472a9e88aab51","name":"should clear refreshToken cookie","time":{"start":1744306013819,"stop":1744306013822,"duration":3},"status":"passed","severity":"normal"},{"uid":"e8fec30689b32859","name":"should throw ForbiddenException if the user is not authorized to remove participants","time":{"start":1744306012220,"stop":1744306012225,"duration":5},"status":"passed","severity":"normal"},{"uid":"8856c6d1dfbfaa8d","name":"should return the pre-register count","time":{"start":1744306014239,"stop":1744306014242,"duration":3},"status":"passed","severity":"normal"},{"uid":"a51d19b8b81fc5bb","name":"should throw NotFoundException if itinerary doesnt exist","time":{"start":1744306010570,"stop":1744306010573,"duration":3},"status":"passed","severity":"normal"},{"uid":"e4ef69f80b0b3388","name":"should return list of countries","time":{"start":1744306014411,"stop":1744306014414,"duration":3},"status":"passed","severity":"normal"},{"uid":"48ef8abe0e7f55e7","name":"should return all tags","time":{"start":1744306012146,"stop":1744306012152,"duration":6},"status":"passed","severity":"normal"},{"uid":"61a8d46aa21f6c56","name":"should return itineraries shared with the user","time":{"start":1744306011480,"stop":1744306011484,"duration":4},"status":"passed","severity":"normal"},{"uid":"7bcc9b5b8793a353","name":"should return new access and refresh tokens","time":{"start":1744306013799,"stop":1744306013803,"duration":4},"status":"passed","severity":"normal"},{"uid":"5dedc08b60b25d43","name":"should call geminiService.generateFeedback with valid dto","time":{"start":1744306014421,"stop":1744306014423,"duration":2},"status":"passed","severity":"normal"},{"uid":"368b6b9e88cf50db","name":"should return itineraries successfully","time":{"start":1744306012061,"stop":1744306012064,"duration":3},"status":"passed","severity":"normal"},{"uid":"e746e5f76ce823bb","name":"should send webhook for pre-registration","time":{"start":1744306013125,"stop":1744306013139,"duration":14},"status":"passed","severity":"normal"},{"uid":"c56f54ea97099fbd","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1744306011560,"stop":1744306011563,"duration":3},"status":"passed","severity":"normal"},{"uid":"383d1cc3ed393095","name":"should call service.login with the correct email","time":{"start":1744306014242,"stop":1744306014244,"duration":2},"status":"passed","severity":"normal"},{"uid":"30e5ab9785d92d86","name":"should fetch analytics data and send to Discord","time":{"start":1744306012902,"stop":1744306012908,"duration":6},"status":"passed","severity":"normal"},{"uid":"89734fc90608a7e1","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1744306011627,"stop":1744306011629,"duration":2},"status":"passed","severity":"normal"},{"uid":"bb2f630b96d212d","name":"should pass errors from service to the caller","time":{"start":1744306011984,"stop":1744306011988,"duration":4},"status":"passed","severity":"normal"},{"uid":"8550b2aacbf0dd55","name":"should mark itinerary as complete","time":{"start":1744306011544,"stop":1744306011550,"duration":6},"status":"passed","severity":"normal"},{"uid":"308b944f6c2ba7ca","name":"should transform page to a number","time":{"start":1744306014542,"stop":1744306014549,"duration":7},"status":"passed","severity":"normal"},{"uid":"2fa0e0e762057dec","name":"should throw ConflictException if user already exists and is confirmed","time":{"start":1744306012055,"stop":1744306012063,"duration":8},"status":"passed","severity":"normal"},{"uid":"221f9dcc8358e4ce","name":"should filter itineraries with shared=false and finished=false","time":{"start":1744306012026,"stop":1744306012029,"duration":3},"status":"passed","severity":"normal"},{"uid":"1ec44b06fcb9511c","name":"should be defined","time":{"start":1744306014966,"stop":1744306014975,"duration":9},"status":"passed","severity":"normal"},{"uid":"ff6ff2a11e3d061a","name":"should allow user to see itinerary if invited","time":{"start":1744306011367,"stop":1744306011369,"duration":2},"status":"passed","severity":"normal"},{"uid":"a9923211a21eae3","name":"should return validation error if page is negative","time":{"start":1744306014549,"stop":1744306014553,"duration":4},"status":"passed","severity":"normal"},{"uid":"26f30df31a5f9277","name":"should call authService.verify with correct data","time":{"start":1744306013814,"stop":1744306013816,"duration":2},"status":"passed","severity":"normal"},{"uid":"7cdc6fcf2152a405","name":"should be defined","time":{"start":1744306014400,"stop":1744306014411,"duration":11},"status":"passed","severity":"normal"},{"uid":"37a03c2b08497c28","name":"should return only shared itineraries when sharedBool is true","time":{"start":1744306011450,"stop":1744306011455,"duration":5},"status":"passed","severity":"normal"},{"uid":"8d7f8f2dd68bed63","name":"should return shared itineraries successfully","time":{"start":1744306012033,"stop":1744306012035,"duration":2},"status":"passed","severity":"normal"},{"uid":"f55c7f15339ca765","name":"should mark itinerary as complete","time":{"start":1744306012076,"stop":1744306012080,"duration":4},"status":"passed","severity":"normal"},{"uid":"bef37094ffc5f989","name":"should throw NotFoundException if the user to be removed does not exist","time":{"start":1744306012214,"stop":1744306012219,"duration":5},"status":"passed","severity":"normal"},{"uid":"6f234a4ed33e6509","name":"should return the authenticated user","time":{"start":1744306013822,"stop":1744306013825,"duration":3},"status":"passed","severity":"normal"},{"uid":"b022bc99499acba9","name":"should throw UnauthorizedException if token is not provided","time":{"start":1744306013270,"stop":1744306013275,"duration":5},"status":"passed","severity":"normal"},{"uid":"f16ded34b1cf8e96","name":"should throw BadRequestException when start date is after end date","time":{"start":1744306011264,"stop":1744306011269,"duration":5},"status":"passed","severity":"normal"},{"uid":"a4cf1c7b1db668b9","name":"should throw NotFoundException if itinerary doesnt exist","time":{"start":1744306010502,"stop":1744306010523,"duration":21},"status":"passed","severity":"normal"},{"uid":"e3c2a7b9a7af76ed","name":"should reschedule itinerary reminders on server restart","time":{"start":1744306010469,"stop":1744306010495,"duration":26},"status":"passed","severity":"normal"},{"uid":"a76a3d28ef44f567","name":"should return access and refresh tokens if login is successful","time":{"start":1744306012026,"stop":1744306012032,"duration":6},"status":"passed","severity":"normal"},{"uid":"b55d93cb8bd2e1f","name":"should handle negative page numbers","time":{"start":1744306011397,"stop":1744306011409,"duration":12},"status":"passed","severity":"normal"},{"uid":"5491d252a9a7eb03","name":"should return parsed feedback array from AI response","time":{"start":1744306013596,"stop":1744306013600,"duration":4},"status":"passed","severity":"normal"},{"uid":"dd5ee52d93c67ce7","name":"should throw NotFoundException if the itinerary does not exist","time":{"start":1744306011610,"stop":1744306011613,"duration":3},"status":"passed","severity":"normal"},{"uid":"777fd69dd0ef73e6","name":"should delete the oldest ticket if more than 5 exist","time":{"start":1744306013114,"stop":1744306013118,"duration":4},"status":"passed","severity":"normal"},{"uid":"cd9bd7b411d8891f","name":"should return the itinerary if user is the owner","time":{"start":1744306011360,"stop":1744306011362,"duration":2},"status":"passed","severity":"normal"},{"uid":"abbfb21e722407be","name":"should throw UnauthorizedException if token is invalid","time":{"start":1744306013276,"stop":1744306013288,"duration":12},"status":"passed","severity":"normal"},{"uid":"f4e983839a4674de","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1744306012083,"stop":1744306012093,"duration":10},"status":"passed","severity":"normal"},{"uid":"81947f9f02c241b1","name":"should create a new ticket for the user","time":{"start":1744306013107,"stop":1744306013111,"duration":4},"status":"passed","severity":"normal"},{"uid":"78e43cda754f62cc","name":"should update an itinerary with new details, tags, sections, and blocks","time":{"start":1744306011283,"stop":1744306011290,"duration":7},"status":"passed","severity":"normal"},{"uid":"ead3470813c5ed2d","name":"should throw BadRequestException if user does not exist","time":{"start":1744306012077,"stop":1744306012082,"duration":5},"status":"passed","severity":"normal"},{"uid":"e290e45e8b7d0db2","name":"should be defined","time":{"start":1744306012815,"stop":1744306012861,"duration":46},"status":"passed","severity":"normal"},{"uid":"c29f8f7b2628abcf","name":"should be defined","time":{"start":1744306014212,"stop":1744306014235,"duration":23},"status":"passed","severity":"normal"},{"uid":"d75cf90fc8b6a1b1","name":"should send invitations to the provided emails","time":{"start":1744306011576,"stop":1744306011579,"duration":3},"status":"passed","severity":"normal"},{"uid":"5768565956bfa3b4","name":"should call remove() in the service and delete an itinerary","time":{"start":1744306012137,"stop":1744306012143,"duration":6},"status":"passed","severity":"normal"},{"uid":"83da09bb8a647a8","name":"should return itinerary when found and user has access to it","time":{"start":1744306011363,"stop":1744306011366,"duration":3},"status":"passed","severity":"normal"},{"uid":"294999825641ec29","name":"should be defined","time":{"start":1744306013579,"stop":1744306013595,"duration":16},"status":"passed","severity":"normal"},{"uid":"1ec040eb1691c911","name":"should return paginated itineraries for both owned and shared when sharedBool is false","time":{"start":1744306011436,"stop":1744306011448,"duration":12},"status":"passed","severity":"normal"},{"uid":"448f94cdbb7898cd","name":"should return list of cities","time":{"start":1744306014417,"stop":1744306014419,"duration":2},"status":"passed","severity":"normal"},{"uid":"88334bd5a42bb9ea","name":"should parse JSON even if AI returns extra text","time":{"start":1744306013600,"stop":1744306013603,"duration":3},"status":"passed","severity":"normal"},{"uid":"40fc2d360fa62905","name":"should return an empty array when there are no completed itineraries","time":{"start":1744306011522,"stop":1744306011538,"duration":16},"status":"passed","severity":"normal"},{"uid":"3c16eebc4dcf059f","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1744306011370,"stop":1744306011372,"duration":2},"status":"passed","severity":"normal"},{"uid":"c6673cf4ef7bedb5","name":"should delete the oldest ticket if there are too many","time":{"start":1744306012085,"stop":1744306012089,"duration":4},"status":"passed","severity":"normal"},{"uid":"ccebea6f1dddf063","name":"should throw BadRequestException if passwords do not match","time":{"start":1744306012117,"stop":1744306012121,"duration":4},"status":"passed","severity":"normal"},{"uid":"63e9829b8a9e151b","name":"should accept an itinerary invitation","time":{"start":1744306012188,"stop":1744306012193,"duration":5},"status":"passed","severity":"normal"},{"uid":"2affcfb98e03c8a8","name":"should throw NotFoundException if itineraryId is not found when accepting an invitation","time":{"start":1744306011603,"stop":1744306011605,"duration":2},"status":"passed","severity":"normal"},{"uid":"86170aacb5b9dc48","name":"should throw NotFoundException when itinerary does not exist","time":{"start":1744306011345,"stop":1744306011355,"duration":10},"status":"passed","severity":"normal"},{"uid":"4558d003a535bbe3","name":"should throw UnauthorizedException if user not found","time":{"start":1744306013292,"stop":1744306013295,"duration":3},"status":"passed","severity":"normal"},{"uid":"c423e094a0cb8f96","name":"should call authService.createUser and authService.sendVerification with correct data","time":{"start":1744306013810,"stop":1744306013813,"duration":3},"status":"passed","severity":"normal"},{"uid":"728304b0f111e043","name":"should throw NotFoundException when tags do not exist","time":{"start":1744306011338,"stop":1744306011344,"duration":6},"status":"passed","severity":"normal"},{"uid":"5b2764fe866ebf44","name":"should throw UnauthorizedException if password is incorrect","time":{"start":1744306013796,"stop":1744306013799,"duration":3},"status":"passed","severity":"normal"},{"uid":"ceac1ca189cd963d","name":"should create a new user and send confirmation email","time":{"start":1744306012962,"stop":1744306013007,"duration":45},"status":"passed","severity":"normal"},{"uid":"5364b85d8a7b7caa","name":"should return list of countries","time":{"start":1744306013864,"stop":1744306013866,"duration":2},"status":"passed","severity":"normal"},{"uid":"93a1dbc3c91ffec0","name":"should throw BadRequestException when no sections are provided","time":{"start":1744306011331,"stop":1744306011334,"duration":3},"status":"passed","severity":"normal"},{"uid":"88d1a36765a780d8","name":"should return empty itinerary array if no completed itineraries found","time":{"start":1744306012108,"stop":1744306012111,"duration":3},"status":"passed","severity":"normal"},{"uid":"6417ecb6349d67e1","name":"should call authService.register with correct data","time":{"start":1744306013817,"stop":1744306013819,"duration":2},"status":"passed","severity":"normal"},{"uid":"8d9d1faf6008b985","name":"should return place details with price range when successful","time":{"start":1744306013563,"stop":1744306013565,"duration":2},"status":"passed","severity":"normal"},{"uid":"b458e63051300fd","name":"should call service.getReferralCode with the correct userId","time":{"start":1744306014248,"stop":1744306014250,"duration":2},"status":"passed","severity":"normal"},{"uid":"5746b4d9e528bb","name":"should throw ForbiddenException if user is not authorized","time":{"start":1744306011972,"stop":1744306011978,"duration":6},"status":"passed","severity":"normal"},{"uid":"cdc2cf50c65a8610","name":"should throw ForbiddenException when user is not the owner of the itinerary","time":{"start":1744306011564,"stop":1744306011567,"duration":3},"status":"passed","severity":"normal"},{"uid":"5403ba7c4278afd2","name":"should handle errors if sending email fails","time":{"start":1744306014424,"stop":1744306014426,"duration":2},"status":"passed","severity":"normal"},{"uid":"766a3d25a4a466bb","name":"should be defined","time":{"start":1744306014899,"stop":1744306014906,"duration":7},"status":"passed","severity":"normal"},{"uid":"433a7936b80b2ad2","name":"should throw NotFoundException if the itinerary does not exist","time":{"start":1744306012166,"stop":1744306012178,"duration":12},"status":"passed","severity":"normal"},{"uid":"a699840337734582","name":"should log an error and return if UMAMI_DISCORD_WEBHOOK_URL is not set","time":{"start":1744306012939,"stop":1744306012941,"duration":2},"status":"passed","severity":"normal"},{"uid":"5518b240dcc8e43b","name":"should update an itinerary with defaults for missing block fields","time":{"start":1744306011295,"stop":1744306011299,"duration":4},"status":"passed","severity":"normal"},{"uid":"15f4ca43564bfc14","name":"should handle errors if fetch fails","time":{"start":1744306013144,"stop":1744306013149,"duration":5},"status":"passed","severity":"normal"},{"uid":"67dcee0a7c323661","name":"should throw ForbiddenException if user is not the owner of the itinerary","time":{"start":1744306011582,"stop":1744306011585,"duration":3},"status":"passed","severity":"normal"},{"uid":"af7c16c242c4e49a","name":"should return an array of itinerary reminders","time":{"start":1744306010535,"stop":1744306010544,"duration":9},"status":"passed","severity":"normal"},{"uid":"10ffac203b1c608b","name":"should throw BadRequestException when duplicate section numbers are provided","time":{"start":1744306011335,"stop":1744306011338,"duration":3},"status":"passed","severity":"normal"},{"uid":"396c27896f3f03b4","name":"should return price range when API call is successful","time":{"start":1744306013569,"stop":1744306013571,"duration":2},"status":"passed","severity":"normal"},{"uid":"b2f7057c08ddf89c","name":"should throw an error if placeId is not provided","time":{"start":1744306013541,"stop":1744306013558,"duration":17},"status":"passed","severity":"normal"},{"uid":"6808573b2d207500","name":"should return the correct start and end timestamps for the previous month","time":{"start":1744306012923,"stop":1744306012928,"duration":5},"status":"passed","severity":"normal"},{"uid":"7cd249060af2a65f","name":"should filter itineraries with shared=true and finished=true","time":{"start":1744306012023,"stop":1744306012026,"duration":3},"status":"passed","severity":"normal"},{"uid":"f94aa3d2a59f8511","name":"should throw BadRequestException if last ticket is still valid","time":{"start":1744306013111,"stop":1744306013114,"duration":3},"status":"passed","severity":"normal"},{"uid":"5d375deb752ea1f3","name":"should return total pre-registered users count","time":{"start":1744306013070,"stop":1744306013076,"duration":6},"status":"passed","severity":"normal"},{"uid":"9be7f003003f9df8","name":"should return empty data when user has no shared itineraries","time":{"start":1744306011485,"stop":1744306011490,"duration":5},"status":"passed","severity":"normal"},{"uid":"455f1f1f2cc0e282","name":"should throw UnauthorizedException if password is invalid","time":{"start":1744306012020,"stop":1744306012025,"duration":5},"status":"passed","severity":"normal"},{"uid":"6978f8a142e1cf23","name":"should throw an error if itineraryData.sections is empty","time":{"start":1744306014413,"stop":1744306014420,"duration":7},"status":"passed","severity":"normal"},{"uid":"749a26e094a93458","name":"should throw UnauthorizedException if firstNames do not match","time":{"start":1744306012113,"stop":1744306012117,"duration":4},"status":"passed","severity":"normal"},{"uid":"68254b3094e884c8","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1744306011550,"stop":1744306011553,"duration":3},"status":"passed","severity":"normal"},{"uid":"4c4101978438e5f3","name":"should throw BadRequestException if requesting too fast","time":{"start":1744306012082,"stop":1744306012085,"duration":3},"status":"passed","severity":"normal"},{"uid":"7fdf5c0f7ec080a8","name":"should throw an error when API call fails","time":{"start":1744306013575,"stop":1744306013578,"duration":3},"status":"passed","severity":"normal"},{"uid":"622413d6c00bcf8d","name":"should return only completed itineraries when finishedBool is true","time":{"start":1744306011458,"stop":1744306011464,"duration":6},"status":"passed","severity":"normal"},{"uid":"b47d30ab0cc5304b","name":"should handle service errors properly","time":{"start":1744306014148,"stop":1744306014151,"duration":3},"status":"passed","severity":"normal"},{"uid":"f9894aae6bbbbff8","name":"should send analytics data to Discord","time":{"start":1744306012928,"stop":1744306012930,"duration":2},"status":"passed","severity":"normal"},{"uid":"82517abdbdda4909","name":"should return paginated itineraries","time":{"start":1744306011385,"stop":1744306011397,"duration":12},"status":"passed","severity":"normal"},{"uid":"9cb7139d508f4974","name":"should throw UnauthorizedException if refresh token is invalid","time":{"start":1744306013803,"stop":1744306013810,"duration":7},"status":"passed","severity":"normal"},{"uid":"7430ce0b9c2b1218","name":"should create an itinerary with default section title, empty blocks, and empty tags","time":{"start":1744306011221,"stop":1744306011226,"duration":5},"status":"passed","severity":"normal"},{"uid":"d414a660dcce8af","name":"should return list of cities based on country","time":{"start":1744306013866,"stop":1744306013868,"duration":2},"status":"passed","severity":"normal"},{"uid":"dab1f9d5179e18dd","name":"should return access and refresh tokens on successful login","time":{"start":1744306013757,"stop":1744306013792,"duration":35},"status":"passed","severity":"normal"},{"uid":"d745539b25fe61ac","name":"should throw UnauthorizedException if email is not registered","time":{"start":1744306013792,"stop":1744306013796,"duration":4},"status":"passed","severity":"normal"},{"uid":"a839efb26e67c08","name":"should be defined","time":{"start":1744306011827,"stop":1744306011917,"duration":90},"status":"passed","severity":"normal"},{"uid":"fb216acc507ac0a7","name":"should return \"Hello World!\"","time":{"start":1744306014569,"stop":1744306014577,"duration":8},"status":"passed","severity":"normal"},{"uid":"22ee24168f98bba","name":"should throw an error if placeId is not provided","time":{"start":1744306013566,"stop":1744306013568,"duration":2},"status":"passed","severity":"normal"},{"uid":"5830c3adc34be931","name":"should invite a user to an itinerary and return a formatted response","time":{"start":1744306012159,"stop":1744306012166,"duration":7},"status":"passed","severity":"normal"},{"uid":"c618fbbb287c4297","name":"should accept an itinerary invitation and link the user to the itinerary using itineraryId","time":{"start":1744306011586,"stop":1744306011592,"duration":6},"status":"passed","severity":"normal"},{"uid":"c557fc1a00d78f34","name":"should update user and send registration email if verification is successful","time":{"start":1744306012272,"stop":1744306012278,"duration":6},"status":"passed","severity":"normal"},{"uid":"ee5200f5008728c6","name":"should throw BadRequestException if user is not found","time":{"start":1744306013103,"stop":1744306013106,"duration":3},"status":"passed","severity":"normal"},{"uid":"377b21b226dbe1d9","name":"should throw ForbiddenException if user does not own the itinerary","time":{"start":1744306011306,"stop":1744306011309,"duration":3},"status":"passed","severity":"normal"},{"uid":"bf2921f3c5b840bf","name":"should be defined","time":{"start":1744306012921,"stop":1744306012961,"duration":40},"status":"passed","severity":"normal"},{"uid":"68532c37f01fd309","name":"should send login email if user exists","time":{"start":1744306013077,"stop":1744306013083,"duration":6},"status":"passed","severity":"normal"},{"uid":"a3fa65c5008766b7","name":"should throw an error when page number exceeds total pages","time":{"start":1744306011499,"stop":1744306011502,"duration":3},"status":"passed","severity":"normal"},{"uid":"658a8a962088646b","name":"should throw a NotFoundException if job doesnt exist","time":{"start":1744306010653,"stop":1744306010656,"duration":3},"status":"passed","severity":"normal"},{"uid":"d2a25d3888f9fa5e","name":"should throw InternalServerErrorException on AI error","time":{"start":1744306013603,"stop":1744306013610,"duration":7},"status":"passed","severity":"normal"},{"uid":"6e73d9bec10361f7","name":"should cancel an existing scheduled email job","time":{"start":1744306010644,"stop":1744306010650,"duration":6},"status":"passed","severity":"normal"},{"uid":"4cae75539bacf69f","name":"should throw UnauthorizedException if token has expired","time":{"start":1744306013299,"stop":1744306013302,"duration":3},"status":"passed","severity":"normal"},{"uid":"30db89bcc802f952","name":"should return place details when placeId is valid","time":{"start":1744306014125,"stop":1744306014145,"duration":20},"status":"passed","severity":"normal"},{"uid":"90be130c0e341f17","name":"should throw NotFoundException if the invitation does not exist","time":{"start":1744306012193,"stop":1744306012197,"duration":4},"status":"passed","severity":"normal"},{"uid":"71331ff6bc794d6a","name":"should handle service errors for shared itineraries","time":{"start":1744306012039,"stop":1744306012042,"duration":3},"status":"passed","severity":"normal"},{"uid":"a516c098747f1a0c","name":"should return itineraryId if user already has access to the itinerary","time":{"start":1744306011593,"stop":1744306011599,"duration":6},"status":"passed","severity":"normal"},{"uid":"b6ae46dfbaaf70b8","name":"should throw UnauthorizedException if emails do not match","time":{"start":1744306012110,"stop":1744306012113,"duration":3},"status":"passed","severity":"normal"},{"uid":"2797825f2d52aecf","name":"should return an empty array if no tags are found","time":{"start":1744306012152,"stop":1744306012158,"duration":6},"status":"passed","severity":"normal"},{"uid":"a427671cbd10f67","name":"should throw a ConflictException on already scheduled reminders","time":{"start":1744306010626,"stop":1744306010630,"duration":4},"status":"passed","severity":"normal"},{"uid":"7cc56c1c79f63b8f","name":"should remove a user from an itinerary and return a formatted response","time":{"start":1744306012205,"stop":1744306012209,"duration":4},"status":"passed","severity":"normal"},{"uid":"928b6251ec22c384","name":"should throw an error for invalid page number","time":{"start":1744306011490,"stop":1744306011496,"duration":6},"status":"passed","severity":"normal"},{"uid":"2f996a9cb544f7b6","name":"should update an itinerary reminder","time":{"start":1744306010564,"stop":1744306010569,"duration":5},"status":"passed","severity":"normal"},{"uid":"a27771f11872db79","name":"should return country details based on placeId","time":{"start":1744306013868,"stop":1744306013869,"duration":1},"status":"passed","severity":"normal"},{"uid":"b2b9983ce04fa569","name":"should handle missing price range data","time":{"start":1744306013572,"stop":1744306013575,"duration":3},"status":"passed","severity":"normal"},{"uid":"f0264c2021c89b82","name":"should be defined","time":{"start":1744306014769,"stop":1744306014774,"duration":5},"status":"passed","severity":"normal"},{"uid":"1b0048141f68be90","name":"should return new access and refresh tokens if refresh token is valid","time":{"start":1744306012038,"stop":1744306012047,"duration":9},"status":"passed","severity":"normal"},{"uid":"a3d7ad56fc1551d7","name":"should throw BadRequestException when block start time is after end time","time":{"start":1744306011327,"stop":1744306011331,"duration":4},"status":"passed","severity":"normal"},{"uid":"d97e8fbff1efb2da","name":"should update an itinerary and return a formatted response","time":{"start":1744306012111,"stop":1744306012127,"duration":16},"status":"passed","severity":"normal"},{"uid":"716c77f1fa554ab5","name":"should throw NotFoundException when tags do not exist","time":{"start":1744306011279,"stop":1744306011283,"duration":4},"status":"passed","severity":"normal"},{"uid":"f8bf96187db60f4d","name":"should return user referral code and count","time":{"start":1744306013100,"stop":1744306013103,"duration":3},"status":"passed","severity":"normal"},{"uid":"5bd665ab4bb796f5","name":"should return country code response","time":{"start":1744306013870,"stop":1744306013872,"duration":2},"status":"passed","severity":"normal"},{"uid":"4cc22fd18b162377","name":"should call service.validateLogin with correct ticketId","time":{"start":1744306014245,"stop":1744306014247,"duration":2},"status":"passed","severity":"normal"},{"uid":"a389654bde4512dd","name":"should throw UnauthorizedException if user not found","time":{"start":1744306014173,"stop":1744306014176,"duration":3},"status":"passed","severity":"normal"},{"uid":"8ae9ebf61d34a198","name":"should throw BadRequestException if email is already registered","time":{"start":1744306013007,"stop":1744306013030,"duration":23},"status":"passed","severity":"normal"},{"uid":"95eb7242a0552ef0","name":"should throw UnauthorizedException if ticket is expired","time":{"start":1744306013096,"stop":1744306013099,"duration":3},"status":"passed","severity":"normal"},{"uid":"6c62cd26e912f875","name":"should throw NotFoundException if associated itinerary's reminder does not exist","time":{"start":1744306010560,"stop":1744306010564,"duration":4},"status":"passed","severity":"normal"},{"uid":"7b05614511513018","name":"should be defined","time":{"start":1744306014647,"stop":1744306014653,"duration":6},"status":"passed","severity":"normal"},{"uid":"5397f594d5c61b58","name":"should validate user if refresh token is valid","time":{"start":1744306014169,"stop":1744306014172,"duration":3},"status":"passed","severity":"normal"},{"uid":"5cc2d7bbf08b8df5","name":"should remove an itinerary reminder and cancel the cron job","time":{"start":1744306012872,"stop":1744306012875,"duration":3},"status":"passed","severity":"normal"},{"uid":"efc21e01b88a35a0","name":"should calculate scheduled date correctly","time":{"start":1744306010637,"stop":1744306010640,"duration":3},"status":"passed","severity":"normal"},{"uid":"1401c436be25d0af","name":"should return completed itineraries with locationCount","time":{"start":1744306011504,"stop":1744306011509,"duration":5},"status":"passed","severity":"normal"},{"uid":"bdefe1f318c671fb","name":"should update an itinerary reminder and reschdule the cron job","time":{"start":1744306012866,"stop":1744306012872,"duration":6},"status":"passed","severity":"normal"},{"uid":"3a6bfbdc6d60f3f","name":"should allow access if token is valid","time":{"start":1744306013296,"stop":1744306013299,"duration":3},"status":"passed","severity":"normal"},{"uid":"1b7205a3f264a608","name":"should allow page to be optional","time":{"start":1744306014553,"stop":1744306014554,"duration":1},"status":"passed","severity":"normal"},{"uid":"fe93309192dfbff4","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1744306011579,"stop":1744306011581,"duration":2},"status":"passed","severity":"normal"},{"uid":"bfc002f0c112987b","name":"should throw an error when API call fails","time":{"start":1744306013559,"stop":1744306013562,"duration":3},"status":"passed","severity":"normal"},{"uid":"7d784850871ed2b7","name":"should return 401 Unauthorized if UMAMI_API_KEY is not set","time":{"start":1744306012916,"stop":1744306012922,"duration":6},"status":"passed","severity":"normal"},{"uid":"cc11bd71fe43bb62","name":"should return country code","time":{"start":1744306014414,"stop":1744306014417,"duration":3},"status":"passed","severity":"normal"},{"uid":"19bd5dcd453aa238","name":"should throw NotFoundException if referral code is not found","time":{"start":1744306013033,"stop":1744306013065,"duration":32},"status":"passed","severity":"normal"},{"uid":"91c1cd8f33900290","name":"should be defined","time":{"start":1744306013249,"stop":1744306013265,"duration":16},"status":"passed","severity":"normal"},{"uid":"7f7f165728583c9e","name":"should throw ForbiddenException if user does not own the itinerary","time":{"start":1744306011636,"stop":1744306011638,"duration":2},"status":"passed","severity":"normal"},{"uid":"b74ad3c5cc1d34db","name":"should throw NotFoundException if verification code is not found","time":{"start":1744306012093,"stop":1744306012109,"duration":16},"status":"passed","severity":"normal"},{"uid":"9db14208a7dd636","name":"should be defined","time":{"start":1744306014789,"stop":1744306014797,"duration":8},"status":"passed","severity":"normal"},{"uid":"400afafdf10cc320","name":"should create an itinerary reminder and schedule the cron job","time":{"start":1744306012862,"stop":1744306012865,"duration":3},"status":"passed","severity":"normal"},{"uid":"f73c2c2049c5f237","name":"should allow access if the route is public","time":{"start":1744306013266,"stop":1744306013269,"duration":3},"status":"passed","severity":"normal"},{"uid":"6f9bb63bbb802e53","name":"should throw ForbiddenException if user is not the owner","time":{"start":1744306012093,"stop":1744306012099,"duration":6},"status":"passed","severity":"normal"},{"uid":"b866ba693323dd9","name":"should handle Discord webhook errors gracefully","time":{"start":1744306012931,"stop":1744306012938,"duration":7},"status":"passed","severity":"normal"},{"uid":"3ca2ab39519d487","name":"should return empty data when there are no shared itineraries","time":{"start":1744306012036,"stop":1744306012038,"duration":2},"status":"passed","severity":"normal"},{"uid":"80814a285eadea3a","name":"should fetch an itinerary reminder and return OK when found","time":{"start":1744306012875,"stop":1744306012878,"duration":3},"status":"passed","severity":"normal"},{"uid":"d06da063abb30af3","name":"should return an empty array of itinerary reminders if none found","time":{"start":1744306010544,"stop":1744306010549,"duration":5},"status":"passed","severity":"normal"},{"uid":"9213f380f5c59625","name":"should throw BadRequestException when date format is invalid","time":{"start":1744306011310,"stop":1744306011313,"duration":3},"status":"passed","severity":"normal"},{"uid":"5276473a4e8509de","name":"should be defined","time":{"start":1744306014158,"stop":1744306014165,"duration":7},"status":"passed","severity":"normal"},{"uid":"ac5ec38e8be5a53f","name":"should create an itinerary and return a formatted response","time":{"start":1744306011979,"stop":1744306011983,"duration":4},"status":"passed","severity":"normal"},{"uid":"9480793d03704430","name":"should extract refresh token from cookies","time":{"start":1744306014176,"stop":1744306014178,"duration":2},"status":"passed","severity":"normal"},{"uid":"f77443b00300c51a","name":"should throw ForbiddenException if the user is not authorized to invite","time":{"start":1744306012179,"stop":1744306012187,"duration":8},"status":"passed","severity":"normal"},{"uid":"a4fb05bb36348ce3","name":"should be defined","time":{"start":1744306012878,"stop":1744306012901,"duration":23},"status":"passed","severity":"normal"},{"uid":"bba427fd13ec7c62","name":"should create an itinerary with sections and blocks","time":{"start":1744306011213,"stop":1744306011221,"duration":8},"status":"passed","severity":"normal"},{"uid":"5a2972e0a1c08885","name":"should not send webhook if DISCORD_WEBHOOK_URL is not set","time":{"start":1744306013118,"stop":1744306013125,"duration":7},"status":"passed","severity":"normal"}]