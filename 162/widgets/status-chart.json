[{"uid":"bdcf465a199fe0c1","name":"should be defined","time":{"start":1744060717594,"stop":1744060717605,"duration":11},"status":"passed","severity":"normal"},{"uid":"fab329f549beed28","name":"should return completed itineraries with locationCount","time":{"start":1744060715134,"stop":1744060715137,"duration":3},"status":"passed","severity":"normal"},{"uid":"96d610e19453fb7c","name":"should call service.validateLogin with correct ticketId","time":{"start":1744060717412,"stop":1744060717417,"duration":5},"status":"passed","severity":"normal"},{"uid":"c6aaa58fd22d174f","name":"should be defined","time":{"start":1744060713288,"stop":1744060713331,"duration":43},"status":"passed","severity":"normal"},{"uid":"f03abedfc8233d1e","name":"should delete the oldest ticket if more than 5 exist","time":{"start":1744060716378,"stop":1744060716409,"duration":31},"status":"passed","severity":"normal"},{"uid":"4c597002c8b36588","name":"should return an empty array of itinerary reminders if none found","time":{"start":1744060713437,"stop":1744060713440,"duration":3},"status":"passed","severity":"normal"},{"uid":"2b1a87cf74b5e6d0","name":"should call service.login with the correct email","time":{"start":1744060717410,"stop":1744060717412,"duration":2},"status":"passed","severity":"normal"},{"uid":"3631708c3a5bebbd","name":"should throw ForbiddenException if the user is not the owner of the itinerary","time":{"start":1744060715217,"stop":1744060715220,"duration":3},"status":"passed","severity":"normal"},{"uid":"64d476caa54b5b5c","name":"should throw BadRequestException when no sections are provided","time":{"start":1744060714948,"stop":1744060714954,"duration":6},"status":"passed","severity":"normal"},{"uid":"acbe8e5613936724","name":"should delete the oldest ticket if there are too many","time":{"start":1744060715021,"stop":1744060715025,"duration":4},"status":"passed","severity":"normal"},{"uid":"96d45bfd1307a88","name":"should throw an error for invalid page number","time":{"start":1744060715129,"stop":1744060715131,"duration":2},"status":"passed","severity":"normal"},{"uid":"24e655e7ea8050d1","name":"should transform page to a number","time":{"start":1744060717779,"stop":1744060717782,"duration":3},"status":"passed","severity":"normal"},{"uid":"f586eea548cb2e0","name":"should fetch an itinerary reminder and return OK when found","time":{"start":1744060716109,"stop":1744060716112,"duration":3},"status":"passed","severity":"normal"},{"uid":"91c5b3a7040a5a6b","name":"should return the correct start and end timestamps for the previous month","time":{"start":1744060716124,"stop":1744060716126,"duration":2},"status":"passed","severity":"normal"},{"uid":"75dbec76bdabe6c4","name":"should handle fetch errors gracefully","time":{"start":1744060716106,"stop":1744060716121,"duration":15},"status":"passed","severity":"normal"},{"uid":"4e695ba78081d1a4","name":"should pass errors from service to the caller","time":{"start":1744060715377,"stop":1744060715385,"duration":8},"status":"passed","severity":"normal"},{"uid":"64e69f8232aae8cb","name":"should return empty list if user has no itineraries","time":{"start":1744060715093,"stop":1744060715095,"duration":2},"status":"passed","severity":"normal"},{"uid":"3b40ac567dadc9db","name":"should throw BadRequestException when start date is after end date","time":{"start":1744060714998,"stop":1744060715004,"duration":6},"status":"passed","severity":"normal"},{"uid":"3a6e830d619ca8c9","name":"should handle errors if sending email fails","time":{"start":1744060717756,"stop":1744060717759,"duration":3},"status":"passed","severity":"normal"},{"uid":"f2c3ff91d4c422f1","name":"should return total pre-registered users count","time":{"start":1744060716336,"stop":1744060716340,"duration":4},"status":"passed","severity":"normal"},{"uid":"ea58e817ed7c9d4d","name":"should pass errors from service to the caller","time":{"start":1744060715250,"stop":1744060715254,"duration":4},"status":"passed","severity":"normal"},{"uid":"d57b4e77e575a3ea","name":"should handle overflow page numbers","time":{"start":1744060715084,"stop":1744060715090,"duration":6},"status":"passed","severity":"normal"},{"uid":"840704643bb709ee","name":"should throw an error when page number exceeds total pages","time":{"start":1744060715131,"stop":1744060715134,"duration":3},"status":"passed","severity":"normal"},{"uid":"662ef9b6fe814894","name":"should send webhook for login-validation","time":{"start":1744060716446,"stop":1744060716454,"duration":8},"status":"passed","severity":"normal"},{"uid":"cccfc13dd5f4b2cb","name":"should throw BadRequestException if user is not found","time":{"start":1744060716362,"stop":1744060716365,"duration":3},"status":"passed","severity":"normal"},{"uid":"110a790cd691d952","name":"should return new access and refresh tokens","time":{"start":1744060717156,"stop":1744060717160,"duration":4},"status":"passed","severity":"normal"},{"uid":"939471573599c5f6","name":"should return an itinerary reminder with associated itinerary id","time":{"start":1744060713440,"stop":1744060713443,"duration":3},"status":"passed","severity":"normal"},{"uid":"4b4cea59e9c6f114","name":"should mark itinerary as complete","time":{"start":1744060715339,"stop":1744060715345,"duration":6},"status":"passed","severity":"normal"},{"uid":"acde2052b23175a2","name":"should allow page to be optional","time":{"start":1744060717788,"stop":1744060717789,"duration":1},"status":"passed","severity":"normal"},{"uid":"9b50d021ebf6beed","name":"should return paginated itineraries","time":{"start":1744060715071,"stop":1744060715077,"duration":6},"status":"passed","severity":"normal"},{"uid":"216dcbb950241de2","name":"should throw UnauthorizedException if password is incorrect","time":{"start":1744060717152,"stop":1744060717155,"duration":3},"status":"passed","severity":"normal"},{"uid":"b942668a74addce7","name":"should fetch analytics data and send to Discord","time":{"start":1744060716100,"stop":1744060716105,"duration":5},"status":"passed","severity":"normal"},{"uid":"4211b36f5b13d752","name":"should remove a user from the itinerary successfully","time":{"start":1744060715212,"stop":1744060715214,"duration":2},"status":"passed","severity":"normal"},{"uid":"91d3726b2662f2ff","name":"should be defined","time":{"start":1744060716062,"stop":1744060716097,"duration":35},"status":"passed","severity":"normal"},{"uid":"5adf55e81c4de13b","name":"should throw ForbiddenException if user is not authorized","time":{"start":1744060715236,"stop":1744060715245,"duration":9},"status":"passed","severity":"normal"},{"uid":"e917dcfc7d98e1ff","name":"should return empty data when there are no shared itineraries","time":{"start":1744060715298,"stop":1744060715301,"duration":3},"status":"passed","severity":"normal"},{"uid":"f717bbd8973b78c9","name":"should return list of countries","time":{"start":1744060717058,"stop":1744060717061,"duration":3},"status":"passed","severity":"normal"},{"uid":"3e2f9ef3bcac3dd","name":"should be defined","time":{"start":1744060718121,"stop":1744060718127,"duration":6},"status":"passed","severity":"normal"},{"uid":"49c0677d02058042","name":"should return 401 Unauthorized if UMAMI_API_KEY is not set","time":{"start":1744060716121,"stop":1744060716124,"duration":3},"status":"passed","severity":"normal"},{"uid":"32a5df4fe801c83a","name":"should throw NotFoundException if the itinerary does not exist","time":{"start":1744060715435,"stop":1744060715441,"duration":6},"status":"passed","severity":"normal"},{"uid":"94795879abe89a70","name":"should throw an error if placeId is not provided","time":{"start":1744060717461,"stop":1744060717464,"duration":3},"status":"passed","severity":"normal"},{"uid":"27398c35529ab54a","name":"should throw NotFoundException if verification code is not found","time":{"start":1744060715029,"stop":1744060715032,"duration":3},"status":"passed","severity":"normal"},{"uid":"22d6e42c185c9b71","name":"should handle service errors properly","time":{"start":1744060717465,"stop":1744060717467,"duration":2},"status":"passed","severity":"normal"},{"uid":"d431aa1ccf8b953d","name":"should send analytics data to Discord","time":{"start":1744060716127,"stop":1744060716129,"duration":2},"status":"passed","severity":"normal"},{"uid":"16d2eee1c76c3c37","name":"should return an empty array if there are no tags","time":{"start":1744060715168,"stop":1744060715177,"duration":9},"status":"passed","severity":"normal"},{"uid":"4ecf19d7131651e8","name":"should update an itinerary with new details, tags, sections, and blocks","time":{"start":1744060714971,"stop":1744060714977,"duration":6},"status":"passed","severity":"normal"},{"uid":"c1dd2db2cfa3f88","name":"should throw BadRequestException when block start time is after end time","time":{"start":1744060715005,"stop":1744060715009,"duration":4},"status":"passed","severity":"normal"},{"uid":"29af1369b18897bb","name":"should handle negative page numbers","time":{"start":1744060715082,"stop":1744060715084,"duration":2},"status":"passed","severity":"normal"},{"uid":"7b41050e4560bbf6","name":"should create a new ticket for the user","time":{"start":1744060716365,"stop":1744060716369,"duration":4},"status":"passed","severity":"normal"},{"uid":"85080bd73296ac0b","name":"should throw ForbiddenException if the user is not authorized to accept the invitation","time":{"start":1744060715429,"stop":1744060715432,"duration":3},"status":"passed","severity":"normal"},{"uid":"bc2667f5df4f8ed7","name":"should return parsed feedback array from AI response","time":{"start":1744060716828,"stop":1744060716831,"duration":3},"status":"passed","severity":"normal"},{"uid":"62b547421a1e9c4","name":"should cancel an existing scheduled email job","time":{"start":1744060713509,"stop":1744060713512,"duration":3},"status":"passed","severity":"normal"},{"uid":"f4069868c0c2afdf","name":"should call geminiService.generateFeedback with valid dto","time":{"start":1744060717609,"stop":1744060717612,"duration":3},"status":"passed","severity":"normal"},{"uid":"78d03f18bf145c59","name":"should handle errors if fetch fails","time":{"start":1744060716454,"stop":1744060716457,"duration":3},"status":"passed","severity":"normal"},{"uid":"d44aeb8e353b1613","name":"should remove an itinerary reminder and cancel the cron job","time":{"start":1744060716106,"stop":1744060716109,"duration":3},"status":"passed","severity":"normal"},{"uid":"434c9e422efd144b","name":"should allow access if token is valid","time":{"start":1744060716678,"stop":1744060716689,"duration":11},"status":"passed","severity":"normal"},{"uid":"7464f7a6842cf28","name":"should remove an itinerary successfully","time":{"start":1744060715155,"stop":1744060715158,"duration":3},"status":"passed","severity":"normal"},{"uid":"65f843a8fd0b987f","name":"should throw ConflictException if itinerary reminder already exist","time":{"start":1744060713403,"stop":1744060713431,"duration":28},"status":"passed","severity":"normal"},{"uid":"4f421f9c911d3334","name":"should return an array of tags","time":{"start":1744060715165,"stop":1744060715168,"duration":3},"status":"passed","severity":"normal"},{"uid":"50b05abe3420fb10","name":"should accept an itinerary invitation","time":{"start":1744060715419,"stop":1744060715422,"duration":3},"status":"passed","severity":"normal"},{"uid":"22b988dfd8bc9ae7","name":"should create an itinerary reminder and schedule the cron job","time":{"start":1744060716099,"stop":1744060716102,"duration":3},"status":"passed","severity":"normal"},{"uid":"ef56fddd474260a1","name":"should remove a user from an itinerary and return a formatted response","time":{"start":1744060715433,"stop":1744060715435,"duration":2},"status":"passed","severity":"normal"},{"uid":"26e9e273d744b81a","name":"should create a new user if user does not exist","time":{"start":1744060715003,"stop":1744060715007,"duration":4},"status":"passed","severity":"normal"},{"uid":"c44e3aa3bc29ad0c","name":"should create an itinerary and return a formatted response","time":{"start":1744060715246,"stop":1744060715249,"duration":3},"status":"passed","severity":"normal"},{"uid":"cc242bd855de5945","name":"should return country details based on placeId","time":{"start":1744060717064,"stop":1744060717068,"duration":4},"status":"passed","severity":"normal"},{"uid":"62a253a4642d0ee9","name":"should call authService.createUser and authService.sendVerification with correct data","time":{"start":1744060717164,"stop":1744060717167,"duration":3},"status":"passed","severity":"normal"},{"uid":"cf2b576572583bbd","name":"should return place details when placeId is valid","time":{"start":1744060717440,"stop":1744060717461,"duration":21},"status":"passed","severity":"normal"},{"uid":"18fc6f8da4033a9e","name":"should be defined","time":{"start":1744060717621,"stop":1744060717627,"duration":6},"status":"passed","severity":"normal"},{"uid":"2b3d73d054307133","name":"should throw UnauthorizedException if emails do not match","time":{"start":1744060715032,"stop":1744060715035,"duration":3},"status":"passed","severity":"normal"},{"uid":"86fdb56e0e49bca6","name":"should throw ForbiddenException if user does not own the itinerary","time":{"start":1744060715234,"stop":1744060715237,"duration":3},"status":"passed","severity":"normal"},{"uid":"baef109cd24d208","name":"should return access and refresh tokens if login is successful","time":{"start":1744060714970,"stop":1744060714977,"duration":7},"status":"passed","severity":"normal"},{"uid":"66854f888769fd81","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1744060715345,"stop":1744060715350,"duration":5},"status":"passed","severity":"normal"},{"uid":"488e793308c3f3ff","name":"should create an itinerary reminder","time":{"start":1744060713373,"stop":1744060713378,"duration":5},"status":"passed","severity":"normal"},{"uid":"ea8180017abd3243","name":"should remove an itinerary reminder","time":{"start":1744060713459,"stop":1744060713461,"duration":2},"status":"passed","severity":"normal"},{"uid":"e1197a179afc3e06","name":"should throw NotFoundException if itinerary reminder does not exist","time":{"start":1744060713456,"stop":1744060713458,"duration":2},"status":"passed","severity":"normal"},{"uid":"1ed602fdc75024ea","name":"should mark itinerary as complete","time":{"start":1744060715147,"stop":1744060715149,"duration":2},"status":"passed","severity":"normal"},{"uid":"5caf4a6c4c26161a","name":"should be defined","time":{"start":1744060716074,"stop":1744060716100,"duration":26},"status":"passed","severity":"normal"},{"uid":"d99df761dbebdbce","name":"should accept an itinerary invitation and link the user to the itinerary using itineraryId","time":{"start":1744060715189,"stop":1744060715192,"duration":3},"status":"passed","severity":"normal"},{"uid":"d67b425c23f91631","name":"should throw ForbiddenException if user is not authorized","time":{"start":1744060715066,"stop":1744060715071,"duration":5},"status":"passed","severity":"normal"},{"uid":"aee64232fb9df716","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1744060714988,"stop":1744060714991,"duration":3},"status":"passed","severity":"normal"},{"uid":"52b46b7d69913bcd","name":"should update an itinerary with defaults for missing block fields","time":{"start":1744060714984,"stop":1744060714988,"duration":4},"status":"passed","severity":"normal"},{"uid":"2153ec4f19e6e6c1","name":"should be defined","time":{"start":1744060718006,"stop":1744060718012,"duration":6},"status":"passed","severity":"normal"},{"uid":"26bf3b5e57d5af00","name":"should throw NotFoundException if itinerary doesnt exist","time":{"start":1744060713452,"stop":1744060713455,"duration":3},"status":"passed","severity":"normal"},{"uid":"f28c624d0a4cdce2","name":"should update user and send registration email if verification is successful","time":{"start":1744060715200,"stop":1744060715209,"duration":9},"status":"passed","severity":"normal"},{"uid":"132b24d48b8dceb1","name":"should throw UnauthorizedException if email is not registered","time":{"start":1744060717147,"stop":1744060717151,"duration":4},"status":"passed","severity":"normal"},{"uid":"e9ca958fa940c38a","name":"should call remove() in the service and delete an itinerary","time":{"start":1744060715386,"stop":1744060715392,"duration":6},"status":"passed","severity":"normal"},{"uid":"ce352ad86862546b","name":"should send verification email if user exists","time":{"start":1744060715025,"stop":1744060715029,"duration":4},"status":"passed","severity":"normal"},{"uid":"4e7b709a9af89d80","name":"should return an array of itinerary reminders","time":{"start":1744060713432,"stop":1744060713436,"duration":4},"status":"passed","severity":"normal"},{"uid":"e5955a81e1c828bf","name":"should throw BadRequestException when start date is after end date","time":{"start":1744060714927,"stop":1744060714947,"duration":20},"status":"passed","severity":"normal"},{"uid":"87a37aef442cb8f3","name":"should throw BadRequestException when duplicate section numbers are provided","time":{"start":1744060715013,"stop":1744060715017,"duration":4},"status":"passed","severity":"normal"},{"uid":"459c8a9e59ce67fa","name":"should throw NotFoundException if the pending invitation does not exist","time":{"start":1744060715195,"stop":1744060715197,"duration":2},"status":"passed","severity":"normal"},{"uid":"1991162e64f97225","name":"should schedule a sendEmail job and verify it runs","time":{"start":1744060713473,"stop":1744060713494,"duration":21},"status":"passed","severity":"normal"},{"uid":"285eb32721a68e12","name":"should handle optional fields in the DTO correctly","time":{"start":1744060715259,"stop":1744060715262,"duration":3},"status":"passed","severity":"normal"},{"uid":"d452392547a780e8","name":"should return access and refresh tokens on successful login","time":{"start":1744060717124,"stop":1744060717147,"duration":23},"status":"passed","severity":"normal"},{"uid":"3bcf137f2fdb1672","name":"should be defined","time":{"start":1744060716811,"stop":1744060716827,"duration":16},"status":"passed","severity":"normal"},{"uid":"bed0296c725de8f","name":"should create a contingency plan with sections and blocks","time":{"start":1744060715227,"stop":1744060715230,"duration":3},"status":"passed","severity":"normal"},{"uid":"a72b12e1650ec67d","name":"should return all itineraries with default parameters","time":{"start":1744060715281,"stop":1744060715284,"duration":3},"status":"passed","severity":"normal"},{"uid":"e3a594a7480dc37d","name":"should throw BadRequestException if email is already registered","time":{"start":1744060716295,"stop":1744060716327,"duration":32},"status":"passed","severity":"normal"},{"uid":"3081ec5d056ffa6a","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1744060715183,"stop":1744060715186,"duration":3},"status":"passed","severity":"normal"},{"uid":"b75b6ab594c8a61","name":"should throw NotFoundException when tags do not exist","time":{"start":1744060715018,"stop":1744060715021,"duration":3},"status":"passed","severity":"normal"},{"uid":"b5da7853236eddfa","name":"should throw an error if itineraryData.sections is empty","time":{"start":1744060717605,"stop":1744060717609,"duration":4},"status":"passed","severity":"normal"},{"uid":"2bc0868f798d804b","name":"should throw NotFoundException if the user to be removed does not exist","time":{"start":1744060715441,"stop":1744060715443,"duration":2},"status":"passed","severity":"normal"},{"uid":"130dc55b9636641b","name":"should return itineraries shared with the user","time":{"start":1744060715122,"stop":1744060715125,"duration":3},"status":"passed","severity":"normal"},{"uid":"aee29422b5ba734","name":"should be defined","time":{"start":1744060716170,"stop":1744060716195,"duration":25},"status":"passed","severity":"normal"},{"uid":"cce58d1c863e0425","name":"should throw UnauthorizedException if user not found","time":{"start":1744060717369,"stop":1744060717373,"duration":4},"status":"passed","severity":"normal"},{"uid":"64082c4520d1fbe2","name":"should return itinerary when found and user has access to it","time":{"start":1744060715043,"stop":1744060715059,"duration":16},"status":"passed","severity":"normal"},{"uid":"8f38c0db1da3d00b","name":"should be defined","time":{"start":1744060717352,"stop":1744060717361,"duration":9},"status":"passed","severity":"normal"},{"uid":"9e5fd3f9750c4fab","name":"should throw a BadRequestException on jobs with date in past","time":{"start":1744060713499,"stop":1744060713502,"duration":3},"status":"passed","severity":"normal"},{"uid":"8a58da1ca2cf8e64","name":"should create an itinerary without tags","time":{"start":1744060715254,"stop":1744060715258,"duration":4},"status":"passed","severity":"normal"},{"uid":"59e7dd8e2c446e0e","name":"should throw UnauthorizedException if password is invalid","time":{"start":1744060714963,"stop":1744060714970,"duration":7},"status":"passed","severity":"normal"},{"uid":"ef1862983603d3b0","name":"should handle Discord webhook errors gracefully","time":{"start":1744060716129,"stop":1744060716131,"duration":2},"status":"passed","severity":"normal"},{"uid":"24353f2d2828844","name":"should filter itineraries with shared=true and finished=true","time":{"start":1744060715284,"stop":1744060715289,"duration":5},"status":"passed","severity":"normal"},{"uid":"302f708147a70851","name":"should call service.createPreRegister with correct data","time":{"start":1744060717403,"stop":1744060717406,"duration":3},"status":"passed","severity":"normal"},{"uid":"29c662200d195c44","name":"should extract refresh token from cookies","time":{"start":1744060717374,"stop":1744060717376,"duration":2},"status":"passed","severity":"normal"},{"uid":"b933f1c75c8226af","name":"should be defined","time":{"start":1744060718149,"stop":1744060718154,"duration":5},"status":"passed","severity":"normal"},{"uid":"d4166980912c5384","name":"should return paginated itineraries for both owned and shared when sharedBool is false","time":{"start":1744060715095,"stop":1744060715102,"duration":7},"status":"passed","severity":"normal"},{"uid":"3952ca169c3c89b6","name":"should return the itinerary if user is the owner","time":{"start":1744060715036,"stop":1744060715042,"duration":6},"status":"passed","severity":"normal"},{"uid":"53ce3afaeb60e80c","name":"should throw NotFoundException if user is not found","time":{"start":1744060715045,"stop":1744060715200,"duration":155},"status":"passed","severity":"normal"},{"uid":"6b24f80ac0bd9f92","name":"should throw an error if itinerary is not found","time":{"start":1744060715393,"stop":1744060715395,"duration":2},"status":"passed","severity":"normal"},{"uid":"c62e3e093236d6c2","name":"should return itineraries successfully","time":{"start":1744060715331,"stop":1744060715333,"duration":2},"status":"passed","severity":"normal"},{"uid":"9f07abf4dce9ab93","name":"should return new access and refresh tokens if refresh token is valid","time":{"start":1744060714982,"stop":1744060714986,"duration":4},"status":"passed","severity":"normal"},{"uid":"b2fa4a4c9ec3552e","name":"should update an itinerary with defaults for deleted/missing fields","time":{"start":1744060714978,"stop":1744060714984,"duration":6},"status":"passed","severity":"normal"},{"uid":"f9d0eb48461a30df","name":"should throw InternalServerErrorException on AI error","time":{"start":1744060716834,"stop":1744060716838,"duration":4},"status":"passed","severity":"normal"},{"uid":"fba58b1b006c6b95","name":"should throw an error for invalid page number","time":{"start":1744060715334,"stop":1744060715336,"duration":2},"status":"passed","severity":"normal"},{"uid":"416bab0abcbdffd7","name":"should throw ForbiddenException when user is not the owner","time":{"start":1744060715027,"stop":1744060715034,"duration":7},"status":"passed","severity":"normal"},{"uid":"dcf37ce42a65e841","name":"should create an itinerary with sections and blocks","time":{"start":1744060714870,"stop":1744060714879,"duration":9},"status":"passed","severity":"normal"},{"uid":"1b63a79a1e0c133b","name":"should return list of cities","time":{"start":1744060717633,"stop":1744060717635,"duration":2},"status":"passed","severity":"normal"},{"uid":"f1c1d164538d3b58","name":"should throw NotFoundException when tags do not exist","time":{"start":1744060714966,"stop":1744060714971,"duration":5},"status":"passed","severity":"normal"},{"uid":"cea90f91d6a33117","name":"should return user referral code and count","time":{"start":1744060716359,"stop":1744060716362,"duration":3},"status":"passed","severity":"normal"},{"uid":"677bd15ab8a2265b","name":"should throw BadRequestException if user does not exist","time":{"start":1744060715007,"stop":1744060715011,"duration":4},"status":"passed","severity":"normal"},{"uid":"56c31fbb0825e6e4","name":"should return country code response","time":{"start":1744060717068,"stop":1744060717071,"duration":3},"status":"passed","severity":"normal"},{"uid":"deca88e7853d1380","name":"should throw an error when API call fails","time":{"start":1744060717689,"stop":1744060717691,"duration":2},"status":"passed","severity":"normal"},{"uid":"5a5505ca921e9e84","name":"should allow user to see itinerary if invited","time":{"start":1744060715059,"stop":1744060715062,"duration":3},"status":"passed","severity":"normal"},{"uid":"d6b2bba49a6b9726","name":"should update an itinerary and return a formatted response","time":{"start":1744060715371,"stop":1744060715376,"duration":5},"status":"passed","severity":"normal"},{"uid":"b76ab63abb7dd4b1","name":"should throw UnauthorizedException if firstNames do not match","time":{"start":1744060715035,"stop":1744060715038,"duration":3},"status":"passed","severity":"normal"},{"uid":"391d7147f8ffb859","name":"should throw ConflictException if user already exists and is confirmed","time":{"start":1744060714996,"stop":1744060714999,"duration":3},"status":"passed","severity":"normal"},{"uid":"94668171261a766d","name":"should throw ForbiddenException if the user is not authorized to invite","time":{"start":1744060715414,"stop":1744060715417,"duration":3},"status":"passed","severity":"normal"},{"uid":"12a173aaca9f8044","name":"should reschedule itinerary reminders on server restart","time":{"start":1744060713333,"stop":1744060713367,"duration":34},"status":"passed","severity":"normal"},{"uid":"70e0756739efe049","name":"should throw NotFoundException if the user to be removed is not a participant","time":{"start":1744060715221,"stop":1744060715223,"duration":2},"status":"passed","severity":"normal"},{"uid":"32e0bc7f4b74b88c","name":"should throw BadRequestException when no sections are provided","time":{"start":1744060715010,"stop":1744060715012,"duration":2},"status":"passed","severity":"normal"},{"uid":"f3b33fb6dbfeb4b5","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1744060715063,"stop":1744060715065,"duration":2},"status":"passed","severity":"normal"},{"uid":"92f570957755c836","name":"should return list of countries","time":{"start":1744060717628,"stop":1744060717630,"duration":2},"status":"passed","severity":"normal"},{"uid":"35d576daf5529a98","name":"should return all contingency plans for the given itinerary","time":{"start":1744060715224,"stop":1744060715226,"duration":2},"status":"passed","severity":"normal"},{"uid":"e7db4a41b265441e","name":"should throw UnauthorizedException if user is not found","time":{"start":1744060714907,"stop":1744060714960,"duration":53},"status":"passed","severity":"normal"},{"uid":"7f7362abe71a3c46","name":"should return the pre-register count","time":{"start":1744060717407,"stop":1744060717409,"duration":2},"status":"passed","severity":"normal"},{"uid":"b8736ba09f41d54a","name":"should be defined","time":{"start":1744060718098,"stop":1744060718103,"duration":5},"status":"passed","severity":"normal"},{"uid":"8a2f3c687862ea1b","name":"should invite a user to an itinerary and return a formatted response","time":{"start":1744060715402,"stop":1744060715405,"duration":3},"status":"passed","severity":"normal"},{"uid":"8de62dd8b7087310","name":"should create a new user and send confirmation email","time":{"start":1744060716196,"stop":1744060716294,"duration":98},"status":"passed","severity":"normal"},{"uid":"f734d02dbcfd3cf9","name":"should update an itinerary reminder and reschdule the cron job","time":{"start":1744060716103,"stop":1744060716106,"duration":3},"status":"passed","severity":"normal"},{"uid":"4e3c0d801ee6e240","name":"should return only shared itineraries when sharedBool is true","time":{"start":1744060715105,"stop":1744060715111,"duration":6},"status":"passed","severity":"normal"},{"uid":"b025060bf83194c0","name":"should throw ForbiddenException if user does not own the itinerary","time":{"start":1744060714992,"stop":1744060714994,"duration":2},"status":"passed","severity":"normal"},{"uid":"83952fccd9893bd1","name":"should throw UnauthorizedException if refresh token is invalid","time":{"start":1744060717160,"stop":1744060717163,"duration":3},"status":"passed","severity":"normal"},{"uid":"6edb2d4e37629b00","name":"should throw UnauthorizedException if token is not provided","time":{"start":1744060716653,"stop":1744060716661,"duration":8},"status":"passed","severity":"normal"},{"uid":"5f81b2f9cb610a1a","name":"should return place details when API call is successful","time":{"start":1744060717685,"stop":1744060717688,"duration":3},"status":"passed","severity":"normal"},{"uid":"4511b49351eb49c7","name":"should throw BadRequestException if last ticket is still valid","time":{"start":1744060716369,"stop":1744060716377,"duration":8},"status":"passed","severity":"normal"},{"uid":"23bcf7f0d5de4b10","name":"should throw UnauthorizedException if refresh token is blacklisted","time":{"start":1744060714978,"stop":1744060714981,"duration":3},"status":"passed","severity":"normal"},{"uid":"a06563e18ca7a10c","name":"should throw a ConflictException on already scheduled reminders","time":{"start":1744060713495,"stop":1744060713499,"duration":4},"status":"passed","severity":"normal"},{"uid":"f466e183ef5b689e","name":"should throw NotFoundException if the itinerary does not exist","time":{"start":1744060715215,"stop":1744060715217,"duration":2},"status":"passed","severity":"normal"},{"uid":"955418804255939","name":"should clear refreshToken cookie","time":{"start":1744060717175,"stop":1744060717178,"duration":3},"status":"passed","severity":"normal"},{"uid":"109b85b88059144d","name":"should throw ForbiddenException if the user is not authorized to remove participants","time":{"start":1744060715444,"stop":1744060715446,"duration":2},"status":"passed","severity":"normal"},{"uid":"800a1453bc79d271","name":"should throw NotFound if user email is not found to accept the invitation","time":{"start":1744060715206,"stop":1744060715208,"duration":2},"status":"passed","severity":"normal"},{"uid":"1040727627d813f8","name":"should be defined","time":{"start":1744060717040,"stop":1744060717057,"duration":17},"status":"passed","severity":"normal"},{"uid":"3bd5e3951d2e724f","name":"should throw NotFoundException if the invitation does not exist","time":{"start":1744060715423,"stop":1744060715427,"duration":4},"status":"passed","severity":"normal"},{"uid":"8a57ecfc2fe86505","name":"should return empty data when user has no shared itineraries","time":{"start":1744060715126,"stop":1744060715128,"duration":2},"status":"passed","severity":"normal"},{"uid":"eb83a5eaffbf4e1c","name":"should throw NotFoundException if itinerary doesnt exist","time":{"start":1744060713465,"stop":1744060713470,"duration":5},"status":"passed","severity":"normal"},{"uid":"3786c410794eeaf8","name":"should send invitations to the provided emails","time":{"start":1744060715177,"stop":1744060715183,"duration":6},"status":"passed","severity":"normal"},{"uid":"d19c12c313c4778e","name":"should return an itinerary when found","time":{"start":1744060715200,"stop":1744060715218,"duration":18},"status":"passed","severity":"normal"},{"uid":"6483010330078b8b","name":"should throw NotFoundException if itinerary doesnt exist","time":{"start":1744060713379,"stop":1744060713400,"duration":21},"status":"passed","severity":"normal"},{"uid":"569266635b0b7ea1","name":"should throw UnauthorizedException if token is invalid","time":{"start":1744060716661,"stop":1744060716670,"duration":9},"status":"passed","severity":"normal"},{"uid":"a810afc1d7204949","name":"should return validation error if page is negative","time":{"start":1744060717783,"stop":1744060717788,"duration":5},"status":"passed","severity":"normal"},{"uid":"2ac0b303842f7f74","name":"should throw BadRequestException when duplicate section numbers are provided","time":{"start":1744060714956,"stop":1744060714963,"duration":7},"status":"passed","severity":"normal"},{"uid":"1befa3928e33a859","name":"should throw an error if placeId is not provided","time":{"start":1744060717669,"stop":1744060717684,"duration":15},"status":"passed","severity":"normal"},{"uid":"ed051a1f10c8022","name":"should throw BadRequestException when date format is invalid","time":{"start":1744060714995,"stop":1744060714998,"duration":3},"status":"passed","severity":"normal"},{"uid":"23a360a3b374f49e","name":"should not send webhook if DISCORD_WEBHOOK_URL is not set","time":{"start":1744060716409,"stop":1744060716420,"duration":11},"status":"passed","severity":"normal"},{"uid":"bc4815854793f90f","name":"should validate login ticket and return access token","time":{"start":1744060716347,"stop":1744060716352,"duration":5},"status":"passed","severity":"normal"},{"uid":"a27d019c197ea0ee","name":"should return country code","time":{"start":1744060717631,"stop":1744060717633,"duration":2},"status":"passed","severity":"normal"},{"uid":"1d14cb5b0fd3d815","name":"should throw an error when page number exceeds total pages","time":{"start":1744060715119,"stop":1744060715121,"duration":2},"status":"passed","severity":"normal"},{"uid":"5431692bd1150ce","name":"should return an empty array if no tags are found","time":{"start":1744060715399,"stop":1744060715402,"duration":3},"status":"passed","severity":"normal"},{"uid":"a125c35f49d428f","name":"should update an itinerary reminder","time":{"start":1744060713448,"stop":1744060713451,"duration":3},"status":"passed","severity":"normal"},{"uid":"d875ec655935e2fc","name":"should throw UnauthorizedException if ticket is expired","time":{"start":1744060716355,"stop":1744060716358,"duration":3},"status":"passed","severity":"normal"},{"uid":"f388c98f5ba802a4","name":"should allow access if the route is public","time":{"start":1744060716650,"stop":1744060716653,"duration":3},"status":"passed","severity":"normal"},{"uid":"71766a386923942","name":"should throw a NotFoundException if job doesnt exist","time":{"start":1744060713513,"stop":1744060713518,"duration":5},"status":"passed","severity":"normal"},{"uid":"d3b47c82e1945cbd","name":"should throw NotFoundException if associated itinerary's reminder does not exist","time":{"start":1744060713444,"stop":1744060713447,"duration":3},"status":"passed","severity":"normal"},{"uid":"23cd9b1287c5c246","name":"should throw BadRequestException if user was created recently and is not confirmed","time":{"start":1744060715000,"stop":1744060715003,"duration":3},"status":"passed","severity":"normal"},{"uid":"4b8687d9e69bef03","name":"should throw BadRequestException on improper reminder option","time":{"start":1744060713506,"stop":1744060713508,"duration":2},"status":"passed","severity":"normal"},{"uid":"b343e8d06fa8e6b8","name":"should return an empty array when there are no completed itineraries","time":{"start":1744060715141,"stop":1744060715146,"duration":5},"status":"passed","severity":"normal"},{"uid":"d7722f8e681eee21","name":"should return only completed itineraries when finishedBool is true","time":{"start":1744060715112,"stop":1744060715115,"duration":3},"status":"passed","severity":"normal"},{"uid":"127ebf45ed78d505","name":"should pass errors from service to the caller","time":{"start":1744060716112,"stop":1744060716115,"duration":3},"status":"passed","severity":"normal"},{"uid":"f895ebe4f1a3be74","name":"should return itineraryId if user already has access to the itinerary","time":{"start":1744060715192,"stop":1744060715194,"duration":2},"status":"passed","severity":"normal"},{"uid":"a72c0d7ee20e5f0c","name":"should return list of cities based on country","time":{"start":1744060717061,"stop":1744060717064,"duration":3},"status":"passed","severity":"normal"},{"uid":"31a91f28c3ad857","name":"should throw BadRequestException if email is not registered","time":{"start":1744060716344,"stop":1744060716347,"duration":3},"status":"passed","severity":"normal"},{"uid":"e3c4a68ad701ce52","name":"should be defined","time":{"start":1744060714765,"stop":1744060714867,"duration":102},"status":"passed","severity":"normal"},{"uid":"db1d7bf5f7cad636","name":"should be defined","time":{"start":1744060717743,"stop":1744060717752,"duration":9},"status":"passed","severity":"normal"},{"uid":"1581ed314bc1ffe2","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1744060715231,"stop":1744060715234,"duration":3},"status":"passed","severity":"normal"},{"uid":"caf3bc798e8d9931","name":"should return all tags","time":{"start":1744060715396,"stop":1744060715398,"duration":2},"status":"passed","severity":"normal"},{"uid":"bf9585a5fddeb93a","name":"should throw UnauthorizedException if token has expired","time":{"start":1744060716689,"stop":1744060716692,"duration":3},"status":"passed","severity":"normal"},{"uid":"fc0c0d9a16779414","name":"should correctly count LOCATION blocks","time":{"start":1744060715138,"stop":1744060715141,"duration":3},"status":"passed","severity":"normal"},{"uid":"bd72b98e56365197","name":"should throw BadRequestException if requesting too fast","time":{"start":1744060715011,"stop":1744060715021,"duration":10},"status":"passed","severity":"normal"},{"uid":"ce5322a67bb7f547","name":"should be defined","time":{"start":1744060717967,"stop":1744060717976,"duration":9},"status":"passed","severity":"normal"},{"uid":"6dfb968b940079c3","name":"should throw ForbiddenException if user is not the owner","time":{"start":1744060715352,"stop":1744060715354,"duration":2},"status":"passed","severity":"normal"},{"uid":"82fb818b18559405","name":"should be defined","time":{"start":1744060715136,"stop":1744060715198,"duration":62},"status":"passed","severity":"normal"},{"uid":"1017e79892394280","name":"should throw NotFoundException if itinerary is not found","time":{"start":1744060715218,"stop":1744060715235,"duration":17},"status":"passed","severity":"normal"},{"uid":"4575c17702f18d63","name":"should throw UnauthorizedException if user not found","time":{"start":1744060716676,"stop":1744060716678,"duration":2},"status":"passed","severity":"normal"},{"uid":"51367ea28c0bf6f8","name":"should be defined","time":{"start":1744060717374,"stop":1744060717403,"duration":29},"status":"passed","severity":"normal"},{"uid":"4110c49f774ee27b","name":"should throw NotFoundException if itineraryId is not found when accepting an invitation","time":{"start":1744060715203,"stop":1744060715205,"duration":2},"status":"passed","severity":"normal"},{"uid":"be92382995de638","name":"should return the authenticated user","time":{"start":1744060717178,"stop":1744060717181,"duration":3},"status":"passed","severity":"normal"},{"uid":"d8b91e920d5d4c92","name":"should return completed itineraries with response formatting","time":{"start":1744060715358,"stop":1744060715364,"duration":6},"status":"passed","severity":"normal"},{"uid":"e414d394947bcb36","name":"should return empty itinerary array if no completed itineraries found","time":{"start":1744060715364,"stop":1744060715370,"duration":6},"status":"passed","severity":"normal"},{"uid":"aed9da715b9718bf","name":"should calculate scheduled date correctly","time":{"start":1744060713502,"stop":1744060713505,"duration":3},"status":"passed","severity":"normal"},{"uid":"b52b1a567d048987","name":"should log an error and return if UMAMI_DISCORD_WEBHOOK_URL is not set","time":{"start":1744060716132,"stop":1744060716134,"duration":2},"status":"passed","severity":"normal"},{"uid":"1127886f092ee781","name":"should throw NotFoundException if referral code is not found","time":{"start":1744060716327,"stop":1744060716335,"duration":8},"status":"passed","severity":"normal"},{"uid":"f252d7f673c2a55f","name":"should throw an error for invalid page number","time":{"start":1744060715116,"stop":1744060715118,"duration":2},"status":"passed","severity":"normal"},{"uid":"dd5d0abd3560fca3","name":"should throw NotFoundException if the itinerary does not exist","time":{"start":1744060715405,"stop":1744060715410,"duration":5},"status":"passed","severity":"normal"},{"uid":"94fa03b37c9c389","name":"should call authService.verify with correct data","time":{"start":1744060717168,"stop":1744060717171,"duration":3},"status":"passed","severity":"normal"},{"uid":"63df7bfc008a0c1e","name":"should throw UnauthorizedException for invalid ticket","time":{"start":1744060716352,"stop":1744060716355,"duration":3},"status":"passed","severity":"normal"},{"uid":"90e6013bc7ed9042","name":"should filter itineraries with shared=false and finished=false","time":{"start":1744060715290,"stop":1744060715292,"duration":2},"status":"passed","severity":"normal"},{"uid":"affe613a2ce1a258","name":"should return \"Hello World!\"","time":{"start":1744060717854,"stop":1744060717866,"duration":12},"status":"passed","severity":"normal"},{"uid":"5b6ba3b1ccc69b50","name":"should send webhook for pre-registration","time":{"start":1744060716420,"stop":1744060716446,"duration":26},"status":"passed","severity":"normal"},{"uid":"ca4b496eb3e5c6d0","name":"should call authService.register with correct data","time":{"start":1744060717171,"stop":1744060717174,"duration":3},"status":"passed","severity":"normal"},{"uid":"7a73b37f23287896","name":"should send login email if user exists","time":{"start":1744060716340,"stop":1744060716343,"duration":3},"status":"passed","severity":"normal"},{"uid":"f7063b7edfbee1c3","name":"should throw BadRequestException when date format is invalid","time":{"start":1744060714885,"stop":1744060714926,"duration":41},"status":"passed","severity":"normal"},{"uid":"ef18d83ccad36a59","name":"should throw ForbiddenException if user is not the owner of the itinerary","time":{"start":1744060715186,"stop":1744060715189,"duration":3},"status":"passed","severity":"normal"},{"uid":"f4780cb9ee016718","name":"should be defined","time":{"start":1744060716633,"stop":1744060716649,"duration":16},"status":"passed","severity":"normal"},{"uid":"7cb4f9275d6f1295","name":"should throw NotFoundException when itinerary does not exist","time":{"start":1744060715021,"stop":1744060715027,"duration":6},"status":"passed","severity":"normal"},{"uid":"c2f849aa51825ef3","name":"should return shared itineraries successfully","time":{"start":1744060715296,"stop":1744060715298,"duration":2},"status":"passed","severity":"normal"},{"uid":"c9c7ed4fea0795d2","name":"should be defined","time":{"start":1744060718210,"stop":1744060718214,"duration":4},"status":"passed","severity":"normal"},{"uid":"e7f28b6f2dd5b8a5","name":"should throw BadRequestException if passwords do not match","time":{"start":1744060715038,"stop":1744060715045,"duration":7},"status":"passed","severity":"normal"},{"uid":"299ca31cb0d058f1","name":"should delete expired refresh tokens","time":{"start":1744060714988,"stop":1744060714995,"duration":7},"status":"passed","severity":"normal"},{"uid":"cf31b150b5a321e6","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1744060715158,"stop":1744060715161,"duration":3},"status":"passed","severity":"normal"},{"uid":"9000115bbd0f2f56","name":"should handle service errors correctly","time":{"start":1744060715293,"stop":1744060715295,"duration":2},"status":"passed","severity":"normal"},{"uid":"1c79e1f89f2f38c3","name":"should return empty data when there are no itineraries","time":{"start":1744060715337,"stop":1744060715339,"duration":2},"status":"passed","severity":"normal"},{"uid":"3bc3f3dabc1e0917","name":"should validate user if refresh token is valid","time":{"start":1744060717366,"stop":1744060717369,"duration":3},"status":"passed","severity":"normal"},{"uid":"9aa659324784a91c","name":"should call service.getReferralCode with the correct userId","time":{"start":1744060717418,"stop":1744060717420,"duration":2},"status":"passed","severity":"normal"},{"uid":"acf431d9655760db","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1744060715150,"stop":1744060715152,"duration":2},"status":"passed","severity":"normal"},{"uid":"3cb31266c29f4c64","name":"should throw ForbiddenException when user is not the owner of the itinerary","time":{"start":1744060715161,"stop":1744060715165,"duration":4},"status":"passed","severity":"normal"},{"uid":"72edf82c07ab2a25","name":"should send an email successfully","time":{"start":1744060717753,"stop":1744060717756,"duration":3},"status":"passed","severity":"normal"},{"uid":"5e438a7593a044c4","name":"should create an itinerary with default section title, empty blocks, and empty tags","time":{"start":1744060714879,"stop":1744060714884,"duration":5},"status":"passed","severity":"normal"},{"uid":"964a8a470cb745a5","name":"should handle service errors for shared itineraries","time":{"start":1744060715301,"stop":1744060715303,"duration":2},"status":"passed","severity":"normal"},{"uid":"6795aa380440c075","name":"should throw ForbiddenException if user is not the owner","time":{"start":1744060715152,"stop":1744060715155,"duration":3},"status":"passed","severity":"normal"},{"uid":"90ce2f2072e44f79","name":"should parse JSON even if AI returns extra text","time":{"start":1744060716831,"stop":1744060716834,"duration":3},"status":"passed","severity":"normal"}]