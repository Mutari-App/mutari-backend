"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","8","StaticService","_getCountryCode","","","","should return country details based on placeId",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","6","AuthGuard","","","","","should throw UnauthorizedException if token is not provided",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","4","AuthGuard","","","","","should throw UnauthorizedException if token is invalid",""
"passed","Sun Mar 09 06:14:31 GMT 2025","Sun Mar 09 06:14:31 GMT 2025","82","AuthService","login","","","","should throw UnauthorizedException if user is not found",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","6","PreRegisterService","_generateTicket","","","","should throw BadRequestException if last ticket is still valid",""
"passed","Sun Mar 09 06:14:31 GMT 2025","Sun Mar 09 06:14:31 GMT 2025","8","AuthService","sendVerification","","","","should throw BadRequestException if user does not exist",""
"passed","Sun Mar 09 06:14:31 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","198","AuthService","register","","","","should throw NotFoundException if user is not found",""
"passed","Sun Mar 09 06:14:34 GMT 2025","Sun Mar 09 06:14:34 GMT 2025","5","TicketService","","","","","should be defined",""
"passed","Sun Mar 09 06:14:33 GMT 2025","Sun Mar 09 06:14:33 GMT 2025","10","ProfileController","","","","","should be defined",""
"passed","Sun Mar 09 06:14:31 GMT 2025","Sun Mar 09 06:14:31 GMT 2025","7","AuthService","sendVerification","","","","should delete the oldest ticket if there are too many",""
"passed","Sun Mar 09 06:14:33 GMT 2025","Sun Mar 09 06:14:33 GMT 2025","3","EmailService","","","","","should handle errors if sending email fails",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","22","PreRegisterService","sendDiscordWebhook","","","","should handle errors if fetch fails",""
"passed","Sun Mar 09 06:14:31 GMT 2025","Sun Mar 09 06:14:31 GMT 2025","65","PreRegisterService","","","","","should be defined",""
"passed","Sun Mar 09 06:14:31 GMT 2025","Sun Mar 09 06:14:31 GMT 2025","5","AuthService","register","","","","should throw BadRequestException if passwords do not match",""
"passed","Sun Mar 09 06:14:34 GMT 2025","Sun Mar 09 06:14:34 GMT 2025","8","ProfileService","","","","","should be defined",""
"passed","Sun Mar 09 06:14:31 GMT 2025","Sun Mar 09 06:14:31 GMT 2025","12","AuthService","verify","","","","should throw UnauthorizedException if firstNames do not match",""
"passed","Sun Mar 09 06:14:33 GMT 2025","Sun Mar 09 06:14:33 GMT 2025","3","EmailService","","","","","should send an email successfully",""
"passed","Sun Mar 09 06:14:31 GMT 2025","Sun Mar 09 06:14:31 GMT 2025","6","AuthService","sendVerification","","","","should send verification email if user exists",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","23","AuthGuard","","","","","should be defined",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:33 GMT 2025","20","RefreshStrategy","","","","","should throw UnauthorizedException if user not found",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","3","PreRegisterService","login","","","","should throw BadRequestException if email is not registered",""
"passed","Sun Mar 09 06:14:33 GMT 2025","Sun Mar 09 06:14:33 GMT 2025","3","StaticController","getCountries","","","","should return list of countries",""
"passed","Sun Mar 09 06:14:33 GMT 2025","Sun Mar 09 06:14:33 GMT 2025","4","RefreshStrategy","","","","","should extract refresh token from cookies",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","4","AuthController","login","","","","should throw UnauthorizedException if password is incorrect",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","5","RefreshStrategy","","","","","should validate user if refresh token is valid",""
"passed","Sun Mar 09 06:14:31 GMT 2025","Sun Mar 09 06:14:31 GMT 2025","4","AuthService","clearExpiredRefreshTokens","","","","should delete expired refresh tokens",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","3","AuthController","register","","","","should call authService.register with correct data",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","6","PreRegisterService","getReferralCode","","","","should throw BadRequestException if user is not found",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","6","AuthGuard","","","","","should allow access if token is valid",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","6","AuthController","login","","","","should throw UnauthorizedException if email is not registered",""
"passed","Sun Mar 09 06:14:33 GMT 2025","Sun Mar 09 06:14:33 GMT 2025","9","NotificationController","","","","","should be defined",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","3","PreRegisterService","login","","","","should send login email if user exists",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","12","PreRegisterService","createPreRegister","","","","should throw BadRequestException if email is already registered",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","6","PreRegisterService","_generateTicket","","","","should create a new ticket for the user",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","6","AuthService","register","","","","should update user and send registration email if verification is successful",""
"passed","Sun Mar 09 06:14:31 GMT 2025","Sun Mar 09 06:14:31 GMT 2025","3","AuthService","createUser","","","","should throw ConflictException if user already exists and is confirmed",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","16","StaticService","","","","","should be defined",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","20","PreRegisterService","sendDiscordWebhook","","","","should send webhook for pre-registration",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","7","AuthGuard","","","","","should throw UnauthorizedException if token has expired",""
"passed","Sun Mar 09 06:14:31 GMT 2025","Sun Mar 09 06:14:31 GMT 2025","5","AuthService","login","","","","should return access and refresh tokens if login is successful",""
"passed","Sun Mar 09 06:14:33 GMT 2025","Sun Mar 09 06:14:33 GMT 2025","10","StaticController","","","","","should be defined",""
"passed","Sun Mar 09 06:14:33 GMT 2025","Sun Mar 09 06:14:33 GMT 2025","10","EmailService","","","","","should be defined",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","3","PreRegisterService","getPreRegisterCount","","","","should return total pre-registered users count",""
"passed","Sun Mar 09 06:14:33 GMT 2025","Sun Mar 09 06:14:33 GMT 2025","7","PaymentController","","","","","should be defined",""
"passed","Sun Mar 09 06:14:33 GMT 2025","Sun Mar 09 06:14:33 GMT 2025","2","StaticController","getCities","","","","should return list of cities",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","6","PreRegisterService","validateLogin","","","","should throw UnauthorizedException if ticket is expired",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","4","AuthGuard","","","","","should throw UnauthorizedException if user not found",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","7","PreRegisterService","validateLogin","","","","should validate login ticket and return access token",""
"passed","Sun Mar 09 06:14:31 GMT 2025","Sun Mar 09 06:14:31 GMT 2025","4","AuthService","refreshToken","","","","should return new access and refresh tokens if refresh token is valid",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","4","AuthController","createUser","","","","should call authService.createUser and authService.sendVerification with correct data",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","83","AuthController","login","","","","should return access and refresh tokens on successful login",""
"passed","Sun Mar 09 06:14:33 GMT 2025","Sun Mar 09 06:14:33 GMT 2025","8","NotificationService","","","","","should be defined",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","4","PreRegisterService","createPreRegister","","","","should throw NotFoundException if referral code is not found",""
"passed","Sun Mar 09 06:14:31 GMT 2025","Sun Mar 09 06:14:31 GMT 2025","5","AuthService","createUser","","","","should create a new user if user does not exist",""
"passed","Sun Mar 09 06:14:33 GMT 2025","Sun Mar 09 06:14:33 GMT 2025","17","AppController","root","","","","should return ""Hello World!""",""
"passed","Sun Mar 09 06:14:33 GMT 2025","Sun Mar 09 06:14:33 GMT 2025","3","StaticController","getCountryCode","","","","should return country code",""
"passed","Sun Mar 09 06:14:34 GMT 2025","Sun Mar 09 06:14:34 GMT 2025","8","PaymentService","","","","","should be defined",""
"passed","Sun Mar 09 06:14:34 GMT 2025","Sun Mar 09 06:14:34 GMT 2025","4","MapService","","","","","should be defined",""
"passed","Sun Mar 09 06:14:31 GMT 2025","Sun Mar 09 06:14:31 GMT 2025","31","AuthService","verify","","","","should throw UnauthorizedException if emails do not match",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","7","PreRegisterService","validateLogin","","","","should throw UnauthorizedException for invalid ticket",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","8","PreRegisterService","getReferralCode","","","","should return user referral code and count",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","3","StaticService","getCountryCode","","","","should return country code response",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","6","PreRegisterService","_generateTicket","","","","should delete the oldest ticket if more than 5 exist",""
"passed","Sun Mar 09 06:14:33 GMT 2025","Sun Mar 09 06:14:33 GMT 2025","2","PreRegisterController","referralCode","","","","should call service.getReferralCode with the correct userId",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","8","StaticService","searchCities","","","","should return list of cities based on country",""
"passed","Sun Mar 09 06:14:31 GMT 2025","Sun Mar 09 06:14:31 GMT 2025","4","AuthService","createUser","","","","should throw BadRequestException if user was created recently and is not confirmed",""
"passed","Sun Mar 09 06:14:33 GMT 2025","Sun Mar 09 06:14:33 GMT 2025","3","PreRegisterController","getPreRegisterCount","","","","should return the pre-register count",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","5","AuthController","refreshToken","","","","should throw UnauthorizedException if refresh token is invalid",""
"passed","Sun Mar 09 06:14:33 GMT 2025","Sun Mar 09 06:14:33 GMT 2025","16","PreRegisterController","","","","","should be defined",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","6","PreRegisterService","sendDiscordWebhook","","","","should not send webhook if DISCORD_WEBHOOK_URL is not set",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","26","PreRegisterService","sendDiscordWebhook","","","","should send webhook for login-validation",""
"passed","Sun Mar 09 06:14:33 GMT 2025","Sun Mar 09 06:14:34 GMT 2025","23","MapController","","","","","should be defined",""
"passed","Sun Mar 09 06:14:31 GMT 2025","Sun Mar 09 06:14:31 GMT 2025","9","AuthService","sendVerification","","","","should throw BadRequestException if requesting too fast",""
"passed","Sun Mar 09 06:14:31 GMT 2025","Sun Mar 09 06:14:31 GMT 2025","6","AuthService","login","","","","should throw UnauthorizedException if password is invalid",""
"passed","Sun Mar 09 06:14:33 GMT 2025","Sun Mar 09 06:14:33 GMT 2025","4","PreRegisterController","validateLogin","","","","should call service.validateLogin with correct ticketId",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","13","RefreshStrategy","","","","","should be defined",""
"passed","Sun Mar 09 06:14:31 GMT 2025","Sun Mar 09 06:14:31 GMT 2025","6","AuthService","verify","","","","should throw NotFoundException if verification code is not found",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","5","AuthController","logout","","","","should clear refreshToken cookie",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","7","StaticService","searchCountries","","","","should return list of countries",""
"passed","Sun Mar 09 06:14:31 GMT 2025","Sun Mar 09 06:14:31 GMT 2025","4","AuthService","refreshToken","","","","should throw UnauthorizedException if refresh token is blacklisted",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","5","AuthController","refreshToken","","","","should return new access and refresh tokens",""
"passed","Sun Mar 09 06:14:31 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","38","PreRegisterService","createPreRegister","","","","should create a new user and send confirmation email",""
"passed","Sun Mar 09 06:14:33 GMT 2025","Sun Mar 09 06:14:33 GMT 2025","14","TicketController","","","","","should be defined",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","3","AuthGuard","","","","","should allow access if the route is public",""
"passed","Sun Mar 09 06:14:33 GMT 2025","Sun Mar 09 06:14:33 GMT 2025","3","PreRegisterController","preRegister","","","","should call service.createPreRegister with correct data",""
"passed","Sun Mar 09 06:14:32 GMT 2025","Sun Mar 09 06:14:32 GMT 2025","6","AuthController","verify","","","","should call authService.verify with correct data",""
"passed","Sun Mar 09 06:14:33 GMT 2025","Sun Mar 09 06:14:33 GMT 2025","2","PreRegisterController","login","","","","should call service.login with the correct email",""
