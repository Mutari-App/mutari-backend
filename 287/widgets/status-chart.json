[{"uid":"10cc5eff11389984","name":"should return itineraries when getListItineraries is called with a valid ID","time":{"start":1747645612539,"stop":1747645612554,"duration":15},"status":"passed","severity":"normal"},{"uid":"1822b376c746557a","name":"should filter itineraries with shared=false and finished=false","time":{"start":1747645610827,"stop":1747645610829,"duration":2},"status":"passed","severity":"normal"},{"uid":"f76cb73a23677509","name":"should return country code","time":{"start":1747645614874,"stop":1747645614877,"duration":3},"status":"passed","severity":"normal"},{"uid":"d3961c57f1ee0b75","name":"should return list of countries","time":{"start":1747645614871,"stop":1747645614874,"duration":3},"status":"passed","severity":"normal"},{"uid":"9636a4a45e009995","name":"should throw BadRequestException if already published","time":{"start":1747645611114,"stop":1747645611117,"duration":3},"status":"passed","severity":"normal"},{"uid":"f379aaeed94a01e6","name":"should limit suggestions to top 5 results","time":{"start":1747645611072,"stop":1747645611084,"duration":12},"status":"passed","severity":"normal"},{"uid":"1d7b27a0c42e46a1","name":"should extract refresh token from cookies","time":{"start":1747645614663,"stop":1747645614665,"duration":2},"status":"passed","severity":"normal"},{"uid":"3f1e246602dca119","name":"should create a properly formatted prompt with all data types","time":{"start":1747645613760,"stop":1747645613767,"duration":7},"status":"passed","severity":"normal"},{"uid":"70077c1bf47e6ccf","name":"should update photo profile when called with valid URL","time":{"start":1747645612638,"stop":1747645612650,"duration":12},"status":"passed","severity":"normal"},{"uid":"cd799f008fab0b19","name":"should handle empty sections","time":{"start":1747645613776,"stop":1747645613779,"duration":3},"status":"passed","severity":"normal"},{"uid":"9477c6d653e320e","name":"should return country details based on placeId","time":{"start":1747645614440,"stop":1747645614442,"duration":2},"status":"passed","severity":"normal"},{"uid":"22806d6cd13bd886","name":"should throw UnauthorizedException when API key is missing","time":{"start":1747645614103,"stop":1747645614106,"duration":3},"status":"passed","severity":"normal"},{"uid":"1e869d06a73a5658","name":"should throw NotFoundException if contingency not found","time":{"start":1747645611010,"stop":1747645611012,"duration":2},"status":"passed","severity":"normal"},{"uid":"5963897b804b19f2","name":"should allow access if the route is public","time":{"start":1747645614141,"stop":1747645614144,"duration":3},"status":"passed","severity":"normal"},{"uid":"994aa1a278b82e34","name":"should return shared itineraries successfully","time":{"start":1747645610838,"stop":1747645610843,"duration":5},"status":"passed","severity":"normal"},{"uid":"5513ed69afda433d","name":"should return only completed itineraries when finishedBool is true","time":{"start":1747645610866,"stop":1747645610869,"duration":3},"status":"passed","severity":"normal"},{"uid":"9044a910d22cd598","name":"should remove an itinerary reminder","time":{"start":1747645611951,"stop":1747645611954,"duration":3},"status":"passed","severity":"normal"},{"uid":"d8a0e55372a8535d","name":"should handle document not found gracefully","time":{"start":1747645611831,"stop":1747645611837,"duration":6},"status":"passed","severity":"normal"},{"uid":"714971d4ec98dea6","name":"should handle document not found gracefully","time":{"start":1747645611805,"stop":1747645611816,"duration":11},"status":"passed","severity":"normal"},{"uid":"ca45064e52d0165b","name":"should throw BadRequestException if user owns the itinerary its trying to save","time":{"start":1747645611188,"stop":1747645611196,"duration":8},"status":"passed","severity":"normal"},{"uid":"36085bf715a90cea","name":"should throw NotFoundException if verification code is not found","time":{"start":1747645611471,"stop":1747645611477,"duration":6},"status":"passed","severity":"normal"},{"uid":"22a3ec8c662c2ed4","name":"should throw an error for invalid page number","time":{"start":1747645610888,"stop":1747645610891,"duration":3},"status":"passed","severity":"normal"},{"uid":"da3e8e6b8caeab6b","name":"should properly handle user without any itineraries","time":{"start":1747645611153,"stop":1747645611155,"duration":2},"status":"passed","severity":"normal"},{"uid":"389a2fd5089b182f","name":"should throw BadRequestException if email is not registered","time":{"start":1747645613240,"stop":1747645613243,"duration":3},"status":"passed","severity":"normal"},{"uid":"11dcffa558584a3","name":"should throw NotFoundException if itineraryId is not found when accepting an invitation","time":{"start":1747645610966,"stop":1747645610969,"duration":3},"status":"passed","severity":"normal"},{"uid":"451166b291ee488a","name":"should throw NotFoundException if the user to be removed does not exist","time":{"start":1747645610968,"stop":1747645610971,"duration":3},"status":"passed","severity":"normal"},{"uid":"a0ce41fd6f6619f2","name":"should remove a user from an itinerary and return a formatted response","time":{"start":1747645610963,"stop":1747645610965,"duration":2},"status":"passed","severity":"normal"},{"uid":"de8a662d3d0e8792","name":"should throw BadRequestException when requesting too soon","time":{"start":1747645609662,"stop":1747645609665,"duration":3},"status":"passed","severity":"normal"},{"uid":"1e35e8f736a5c719","name":"should pass errors from service to the caller","time":{"start":1747645613129,"stop":1747645613131,"duration":2},"status":"passed","severity":"normal"},{"uid":"43bf648e3dc71de0","name":"should return a user profile by id","time":{"start":1747645609519,"stop":1747645609530,"duration":11},"status":"passed","severity":"normal"},{"uid":"683c65dc50638791","name":"should create an itinerary reminder","time":{"start":1747645611915,"stop":1747645611918,"duration":3},"status":"passed","severity":"normal"},{"uid":"40df12d6b9575c99","name":"should send password reset verification email if user exists and has email registered","time":{"start":1747645611454,"stop":1747645611461,"duration":7},"status":"passed","severity":"normal"},{"uid":"5a31b7fa02ad79a4","name":"should throw NotFoundException when tags do not exist","time":{"start":1747645610712,"stop":1747645610725,"duration":13},"status":"passed","severity":"normal"},{"uid":"872f35dc8a73a3dd","name":"should sync tours when provided with valid API key","time":{"start":1747645614097,"stop":1747645614100,"duration":3},"status":"passed","severity":"normal"},{"uid":"e4da6d12b57c187a","name":"should update user and send registration email if verification is successful","time":{"start":1747645611444,"stop":1747645611454,"duration":10},"status":"passed","severity":"normal"},{"uid":"a516954d246f9d49","name":"should send analytics data to Discord","time":{"start":1747645613627,"stop":1747645613629,"duration":2},"status":"passed","severity":"normal"},{"uid":"d5f5b143bc1e7e94","name":"should pass errors from service to the caller","time":{"start":1747645611022,"stop":1747645611025,"duration":3},"status":"passed","severity":"normal"},{"uid":"c36a52d7c27ea2d0","name":"should use email prefix if no name is provided","time":{"start":1747645611581,"stop":1747645611585,"duration":4},"status":"passed","severity":"normal"},{"uid":"87ed24b4dc10cdef","name":"should handle no filters correctly","time":{"start":1747645612256,"stop":1747645612268,"duration":12},"status":"passed","severity":"normal"},{"uid":"ea467c7dd2c06a1","name":"should delete oldest view if already 10 and add new","time":{"start":1747645612229,"stop":1747645612232,"duration":3},"status":"passed","severity":"normal"},{"uid":"2cb7c42719a79656","name":"should handle a single filter correctly","time":{"start":1747645612254,"stop":1747645612256,"duration":2},"status":"passed","severity":"normal"},{"uid":"80cd8b9aaa6eb4e8","name":"should return empty array when no recommended itineraries are found","time":{"start":1747645611146,"stop":1747645611149,"duration":3},"status":"passed","severity":"normal"},{"uid":"332b9512ca50dee9","name":"should be defined","time":{"start":1747645613132,"stop":1747645613166,"duration":34},"status":"passed","severity":"normal"},{"uid":"ea577da837975191","name":"should not index if no published itineraries","time":{"start":1747645611730,"stop":1747645611732,"duration":2},"status":"passed","severity":"normal"},{"uid":"d75d6b1ae8c7de18","name":"should return total pre-registered users count","time":{"start":1747645613233,"stop":1747645613236,"duration":3},"status":"passed","severity":"normal"},{"uid":"d3c8fff0dad431f","name":"should update an itinerary reminder","time":{"start":1747645611943,"stop":1747645611945,"duration":2},"status":"passed","severity":"normal"},{"uid":"c760d4091dbf56e5","name":"should publish the itinerary if all checks pass","time":{"start":1747645611061,"stop":1747645611070,"duration":9},"status":"passed","severity":"normal"},{"uid":"a12a5f44495af088","name":"should throw BadRequestException when date format is invalid","time":{"start":1747645610625,"stop":1747645610675,"duration":50},"status":"passed","severity":"normal"},{"uid":"bc73e3fda90d331e","name":"should throw NotFoundException if user does not exist","time":{"start":1747645611542,"stop":1747645611548,"duration":6},"status":"passed","severity":"normal"},{"uid":"45a8f4df2f5f55af","name":"should return an empty array if there are no tags","time":{"start":1747645610924,"stop":1747645610927,"duration":3},"status":"passed","severity":"normal"},{"uid":"328ba58ba284bb3f","name":"should throw UnauthorizedException if ticket is expired","time":{"start":1747645613252,"stop":1747645613255,"duration":3},"status":"passed","severity":"normal"},{"uid":"17adbc1d2be4a0a5","name":"should return user referral code and count","time":{"start":1747645613255,"stop":1747645613269,"duration":14},"status":"passed","severity":"normal"},{"uid":"badf0a4a2c883a92","name":"should search itineraries with tags filter","time":{"start":1747645611031,"stop":1747645611039,"duration":8},"status":"passed","severity":"normal"},{"uid":"6df72b15e1bcbb6","name":"should pass errors from service to the caller","time":{"start":1747645610911,"stop":1747645610914,"duration":3},"status":"passed","severity":"normal"},{"uid":"9e8d36057986a862","name":"should throw BadRequestException if user does not exist","time":{"start":1747645611226,"stop":1747645611230,"duration":4},"status":"passed","severity":"normal"},{"uid":"7eafc5070374b3fa","name":"should handle null or undefined tour and return null","time":{"start":1747645611714,"stop":1747645611717,"duration":3},"status":"passed","severity":"normal"},{"uid":"7c5d9433e0e1b850","name":"should return place details when placeId is valid","time":{"start":1747645614865,"stop":1747645614877,"duration":12},"status":"passed","severity":"normal"},{"uid":"17dcff797a97c86","name":"should check saved status of public itinerary ids for the user and return success response","time":{"start":1747645611135,"stop":1747645611140,"duration":5},"status":"passed","severity":"normal"},{"uid":"abfd084aa7844fcd","name":"should return 1 when there is one contingency plan","time":{"start":1747645610993,"stop":1747645610995,"duration":2},"status":"passed","severity":"normal"},{"uid":"4699507aca0371d0","name":"should return an array of payments","time":{"start":1747645614988,"stop":1747645614990,"duration":2},"status":"passed","severity":"normal"},{"uid":"546f24dae417c8ce","name":"should log an error and return if UMAMI_DISCORD_WEBHOOK_URL is not set","time":{"start":1747645613632,"stop":1747645613640,"duration":8},"status":"passed","severity":"normal"},{"uid":"e74e68dd3c59d9a2","name":"should throw UnauthorizedException if emails do not match","time":{"start":1747645611271,"stop":1747645611274,"duration":3},"status":"passed","severity":"normal"},{"uid":"c9a6a5d150f17364","name":"should cancel an existing scheduled email job","time":{"start":1747645611982,"stop":1747645611984,"duration":2},"status":"passed","severity":"normal"},{"uid":"9666f2a0b59b0126","name":"should publish an itinerary and return success response","time":{"start":1747645611099,"stop":1747645611101,"duration":2},"status":"passed","severity":"normal"},{"uid":"937bed0308ba3790","name":"should create an itinerary with default section title, empty blocks, and empty tags","time":{"start":1747645610620,"stop":1747645610624,"duration":4},"status":"passed","severity":"normal"},{"uid":"89d5465f74bd76e0","name":"should return a string indicating a specific payment was returned","time":{"start":1747645615047,"stop":1747645615049,"duration":2},"status":"passed","severity":"normal"},{"uid":"16c5c632f31abe25","name":"should throw an error for invalid page number","time":{"start":1747645610883,"stop":1747645610886,"duration":3},"status":"passed","severity":"normal"},{"uid":"b3d8867dfac88b58","name":"should remove a payment","time":{"start":1747645614996,"stop":1747645614997,"duration":1},"status":"passed","severity":"normal"},{"uid":"7e2c6f3ae53fba7c","name":"should allow access if token is valid","time":{"start":1747645614164,"stop":1747645614167,"duration":3},"status":"passed","severity":"normal"},{"uid":"6e3b38ba56e9b095","name":"should include all transaction fields in the result","time":{"start":1747645609787,"stop":1747645609790,"duration":3},"status":"passed","severity":"normal"},{"uid":"656c4622d575c5c6","name":"should return all itineraries with default parameters","time":{"start":1747645610821,"stop":1747645610824,"duration":3},"status":"passed","severity":"normal"},{"uid":"275075bdf59203b8","name":"should delete an unpublished itinerary from the index","time":{"start":1747645611785,"stop":1747645611788,"duration":3},"status":"passed","severity":"normal"},{"uid":"478cb8be698b1eed","name":"should search itineraries with combined filters and custom sorting","time":{"start":1747645611045,"stop":1747645611050,"duration":5},"status":"passed","severity":"normal"},{"uid":"890bc21664be377e","name":"should be defined","time":{"start":1747645614121,"stop":1747645614139,"duration":18},"status":"passed","severity":"normal"},{"uid":"bbbbeb3ef483dbeb","name":"should return the authenticated user","time":{"start":1747645613601,"stop":1747645613604,"duration":3},"status":"passed","severity":"normal"},{"uid":"1c2f01c2f61b8f66","name":"should return completed itineraries with response formatting","time":{"start":1747645610902,"stop":1747645610905,"duration":3},"status":"passed","severity":"normal"},{"uid":"c64aa824450fac1e","name":"should handle when no tags are found in combined itineraries","time":{"start":1747645611241,"stop":1747645611249,"duration":8},"status":"passed","severity":"normal"},{"uid":"8251d5a735adbab1","name":"should remove an itinerary reminder and cancel the cron job","time":{"start":1747645613121,"stop":1747645613123,"duration":2},"status":"passed","severity":"normal"},{"uid":"59eb50f1931b2c61","name":"should return itineraries recommended based on user tags","time":{"start":1747645611141,"stop":1747645611146,"duration":5},"status":"passed","severity":"normal"},{"uid":"a63f78e24370e712","name":"should reschedule itinerary reminders on server restart","time":{"start":1747645611906,"stop":1747645611911,"duration":5},"status":"passed","severity":"normal"},{"uid":"e6e816c22cf79a0","name":"should correctly calculate totalDestinations when sections is empty","time":{"start":1747645609620,"stop":1747645609630,"duration":10},"status":"passed","severity":"normal"},{"uid":"9633497e6b89cdb1","name":"should handle service errors for shared itineraries","time":{"start":1747645610856,"stop":1747645610859,"duration":3},"status":"passed","severity":"normal"},{"uid":"34623fa6e7f6f04b","name":"should throw NotFoundException if user is not found during Google login","time":{"start":1747645613622,"stop":1747645613626,"duration":4},"status":"passed","severity":"normal"},{"uid":"ff94139f5dd8e452","name":"should throw an error when page number exceeds total pages","time":{"start":1747645610886,"stop":1747645610889,"duration":3},"status":"passed","severity":"normal"},{"uid":"6f18c917302b545c","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747645610897,"stop":1747645610899,"duration":2},"status":"passed","severity":"normal"},{"uid":"ac3204c0f936ab38","name":"should successfully generate a change email ticket","time":{"start":1747645609659,"stop":1747645609662,"duration":3},"status":"passed","severity":"normal"},{"uid":"1bff34d069eaa9fa","name":"should search tours with filters and pagination","time":{"start":1747645612244,"stop":1747645612247,"duration":3},"status":"passed","severity":"normal"},{"uid":"a885f8df0565fe71","name":"should return tour with itinerary when found","time":{"start":1747645612272,"stop":1747645612275,"duration":3},"status":"passed","severity":"normal"},{"uid":"5b25ef94a95f57fa","name":"should throw UnauthorizedException if token is not provided","time":{"start":1747645614144,"stop":1747645614152,"duration":8},"status":"passed","severity":"normal"},{"uid":"2ae23fc346da4682","name":"should call authService.resetPassword with correct data","time":{"start":1747645613614,"stop":1747645613618,"duration":4},"status":"passed","severity":"normal"},{"uid":"a924eb4cc3edacdc","name":"should throw UnauthorizedException when provided with invalid API key","time":{"start":1747645614101,"stop":1747645614103,"duration":2},"status":"passed","severity":"normal"},{"uid":"b6d51d28a2d0a8a7","name":"should not index if no tours","time":{"start":1747645611741,"stop":1747645611746,"duration":5},"status":"passed","severity":"normal"},{"uid":"d2a12287e10387d0","name":"should throw BadRequestException if passwords do not match","time":{"start":1747645611521,"stop":1747645611530,"duration":9},"status":"passed","severity":"normal"},{"uid":"bd3c2429d7285c20","name":"should return empty itinerary array if no completed itineraries found","time":{"start":1747645610905,"stop":1747645610907,"duration":2},"status":"passed","severity":"normal"},{"uid":"af34ef24637c0e8a","name":"should successfully change password when all validations pass","time":{"start":1747645609741,"stop":1747645609747,"duration":6},"status":"passed","severity":"normal"},{"uid":"3a97a3f7c2e1118b","name":"should throw NotFoundException if the itinerary does not exist","time":{"start":1747645610976,"stop":1747645610979,"duration":3},"status":"passed","severity":"normal"},{"uid":"644f254f4df44afa","name":"should unpublish the itinerary and remove from search index","time":{"start":1747645611072,"stop":1747645611075,"duration":3},"status":"passed","severity":"normal"},{"uid":"8b6a2b90827c0d66","name":"should return 401 Unauthorized if UMAMI_API_KEY is not set","time":{"start":1747645613619,"stop":1747645613622,"duration":3},"status":"passed","severity":"normal"},{"uid":"7dbb64d8701daa3b","name":"should call authService.register with correct data","time":{"start":1747645613590,"stop":1747645613597,"duration":7},"status":"passed","severity":"normal"},{"uid":"13cb46c7e4136cd9","name":"should return empty suggestions for short queries","time":{"start":1747645611063,"stop":1747645611068,"duration":5},"status":"passed","severity":"normal"},{"uid":"cff172056b7c5065","name":"should create a new user and send confirmation email","time":{"start":1747645613166,"stop":1747645613219,"duration":53},"status":"passed","severity":"normal"},{"uid":"e99fd7b4f47c36db","name":"should duplicate an itinerary with default fields succesfully","time":{"start":1747645611130,"stop":1747645611133,"duration":3},"status":"passed","severity":"normal"},{"uid":"770ceedd1b087aa8","name":"should throw UnauthorizedException if refresh token is invalid","time":{"start":1747645613579,"stop":1747645613583,"duration":4},"status":"passed","severity":"normal"},{"uid":"5a6fb36036ce7ab9","name":"should throw UnauthorizedException if firstNames do not match","time":{"start":1747645611275,"stop":1747645611278,"duration":3},"status":"passed","severity":"normal"},{"uid":"a2c6535a754cf5dd","name":"should throw BadRequestException if user's email is not registered","time":{"start":1747645611538,"stop":1747645611541,"duration":3},"status":"passed","severity":"normal"},{"uid":"7ff971b167b9d73d","name":"should handle undefined tour gracefully","time":{"start":1747645611794,"stop":1747645611797,"duration":3},"status":"passed","severity":"normal"},{"uid":"8ac1380b71ec7a5c","name":"should update viewedAt if tour already viewed","time":{"start":1747645612214,"stop":1747645612219,"duration":5},"status":"passed","severity":"normal"},{"uid":"62ee920d6095faf5","name":"should throw BadRequestException if requesting too fast","time":{"start":1747645611231,"stop":1747645611235,"duration":4},"status":"passed","severity":"normal"},{"uid":"73414b48f4b5d5b3","name":"should handle missing description","time":{"start":1747645613770,"stop":1747645613773,"duration":3},"status":"passed","severity":"normal"},{"uid":"4a534fbb64173f21","name":"should search itineraries with default parameters","time":{"start":1747645611082,"stop":1747645611085,"duration":3},"status":"passed","severity":"normal"},{"uid":"507d8fcd448b5267","name":"should return a list of liked itineraries for a user","time":{"start":1747645609605,"stop":1747645609611,"duration":6},"status":"passed","severity":"normal"},{"uid":"7cac669dcc8b606a","name":"should throw BadRequestException when there are already 2 contingency plans","time":{"start":1747645610996,"stop":1747645610999,"duration":3},"status":"passed","severity":"normal"},{"uid":"285cae7338b12f96","name":"should return only shared itineraries when sharedBool is true","time":{"start":1747645610862,"stop":1747645610865,"duration":3},"status":"passed","severity":"normal"},{"uid":"812db237f0a59583","name":"should return an empty array if no tags are found","time":{"start":1747645610924,"stop":1747645610926,"duration":2},"status":"passed","severity":"normal"},{"uid":"e57c05169aaeaabc","name":"should handle negative page numbers","time":{"start":1747645610849,"stop":1747645610851,"duration":2},"status":"passed","severity":"normal"},{"uid":"738bd6e5ba063769","name":"should pass user object directly to service","time":{"start":1747645611156,"stop":1747645611158,"duration":2},"status":"passed","severity":"normal"},{"uid":"f427138d44ba1676","name":"should call service and return viewed tours","time":{"start":1747645613972,"stop":1747645613975,"duration":3},"status":"passed","severity":"normal"},{"uid":"52b851152c45518b","name":"should return contingency plans for an itinerary","time":{"start":1747645610975,"stop":1747645610978,"duration":3},"status":"passed","severity":"normal"},{"uid":"6c934ce081b061c0","name":"should throw InternalServerErrorException on AI error","time":{"start":1747645613750,"stop":1747645613760,"duration":10},"status":"passed","severity":"normal"},{"uid":"4f7deca124c0a4f8","name":"should search itineraries with custom pagination","time":{"start":1747645611086,"stop":1747645611089,"duration":3},"status":"passed","severity":"normal"},{"uid":"626dee578fab34d0","name":"should just create view if less than 10 views","time":{"start":1747645612235,"stop":1747645612238,"duration":3},"status":"passed","severity":"normal"},{"uid":"b34728840097f8d3","name":"should throw NotFoundException if itinerary doesnt exist","time":{"start":1747645611918,"stop":1747645611928,"duration":10},"status":"passed","severity":"normal"},{"uid":"ca9f61ac89b7d9ae","name":"should throw ForbiddenException if user is not authorized","time":{"start":1747645610777,"stop":1747645610783,"duration":6},"status":"passed","severity":"normal"},{"uid":"b7612f29abf8373e","name":"should send webhook for login-validation","time":{"start":1747645613310,"stop":1747645613319,"duration":9},"status":"passed","severity":"normal"},{"uid":"365dd1267e273f71","name":"should schedule a sendEmail job and verify it runs","time":{"start":1747645611958,"stop":1747645611961,"duration":3},"status":"passed","severity":"normal"},{"uid":"fd41a84fd342f4ab","name":"should be defined","time":{"start":1747645614057,"stop":1747645614072,"duration":15},"status":"passed","severity":"normal"},{"uid":"ae09709bb1fbfe7","name":"should call service.getReferralCode with the correct userId","time":{"start":1747645614571,"stop":1747645614574,"duration":3},"status":"passed","severity":"normal"},{"uid":"8c9ba700d0373cd0","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747645611006,"stop":1747645611009,"duration":3},"status":"passed","severity":"normal"},{"uid":"1638908c728f9767","name":"should throw an error if placeId is not provided","time":{"start":1747645614347,"stop":1747645614363,"duration":16},"status":"passed","severity":"normal"},{"uid":"2e99afb016c0303","name":"should throw BadRequestException if user does not have the itinerary saved","time":{"start":1747645611218,"stop":1747645611221,"duration":3},"status":"passed","severity":"normal"},{"uid":"88c6636d034eaf14","name":"should throw NotFoundException if contingency plan not found","time":{"start":1747645610988,"stop":1747645610991,"duration":3},"status":"passed","severity":"normal"},{"uid":"a1b265d0fe2385c3","name":"should throw NotFoundException if the user to be removed is not a participant","time":{"start":1747645610983,"stop":1747645610986,"duration":3},"status":"passed","severity":"normal"},{"uid":"144fb9c91fdabd12","name":"should throw InternalServerErrorException if email is missing","time":{"start":1747645611589,"stop":1747645611593,"duration":4},"status":"passed","severity":"normal"},{"uid":"abf221062c7d192c","name":"should throw BadRequestException when ticket has expired","time":{"start":1747645611278,"stop":1747645611281,"duration":3},"status":"passed","severity":"normal"},{"uid":"d0a0864553d4e222","name":"should return a list of transactions for a user","time":{"start":1747645609772,"stop":1747645609782,"duration":10},"status":"passed","severity":"normal"},{"uid":"51447a26319b120f","name":"should throw ForbiddenException if user is not authorized","time":{"start":1747645611012,"stop":1747645611015,"duration":3},"status":"passed","severity":"normal"},{"uid":"277d6b0925d4451b","name":"should throw UnauthorizedException if token has expired","time":{"start":1747645614167,"stop":1747645614173,"duration":6},"status":"passed","severity":"normal"},{"uid":"556773c34050203","name":"should handle empty search results","time":{"start":1747645612247,"stop":1747645612250,"duration":3},"status":"passed","severity":"normal"},{"uid":"59f8bcab5f4d43b4","name":"should call geminiService.generateFeedback with valid dto","time":{"start":1747645614666,"stop":1747645614670,"duration":4},"status":"passed","severity":"normal"},{"uid":"a983d2aa4dee3b08","name":"should throw NotFoundException if tour not found","time":{"start":1747645612275,"stop":1747645612280,"duration":5},"status":"passed","severity":"normal"},{"uid":"d12cfeb881059015","name":"should throw ForbiddenException if user is not the owner","time":{"start":1747645610907,"stop":1747645610910,"duration":3},"status":"passed","severity":"normal"},{"uid":"312cb75c517ad59a","name":"should return itinerary when found and user has access to it","time":{"start":1747645610821,"stop":1747645610824,"duration":3},"status":"passed","severity":"normal"},{"uid":"8ffc66f60d90003c","name":"should throw BadRequestException when ticket has expired","time":{"start":1747645611490,"stop":1747645611503,"duration":13},"status":"passed","severity":"normal"},{"uid":"d149277695c3553c","name":"should not send webhook if DISCORD_WEBHOOK_URL is not set","time":{"start":1747645613290,"stop":1747645613295,"duration":5},"status":"passed","severity":"normal"},{"uid":"2c2a747e2e8b6f04","name":"should propagate errors from _verifyChangeEmailTicket","time":{"start":1747645609697,"stop":1747645609706,"duration":9},"status":"passed","severity":"normal"},{"uid":"31179f9b710378f4","name":"should throw UnauthorizedException when ticket does not belong to the user","time":{"start":1747645609677,"stop":1747645609680,"duration":3},"status":"passed","severity":"normal"},{"uid":"331dd45732cef227","name":"should update a profile when called with valid ID and data","time":{"start":1747645612583,"stop":1747645612592,"duration":9},"status":"passed","severity":"normal"},{"uid":"20686e77da1da2fc","name":"should handle empty results when user has no itineraries or views","time":{"start":1747645611238,"stop":1747645611241,"duration":3},"status":"passed","severity":"normal"},{"uid":"aec3560aae21511f","name":"should throw ForbiddenException if user doesnt have access to itinerary","time":{"start":1747645611185,"stop":1747645611188,"duration":3},"status":"passed","severity":"normal"},{"uid":"6a43ddcc802a8222","name":"should validate user if refresh token is valid","time":{"start":1747645614655,"stop":1747645614658,"duration":3},"status":"passed","severity":"normal"},{"uid":"6d1616b70cc8ab0c","name":"should return a string indicating a payment was removed","time":{"start":1747645615054,"stop":1747645615056,"duration":2},"status":"passed","severity":"normal"},{"uid":"4a0ea71f96e9ee17","name":"should return access and refresh tokens if login is successful","time":{"start":1747645611549,"stop":1747645611556,"duration":7},"status":"passed","severity":"normal"},{"uid":"e3f3c3c69d8ab585","name":"should throw BadRequestException when no sections are provided","time":{"start":1747645610800,"stop":1747645610803,"duration":3},"status":"passed","severity":"normal"},{"uid":"34fc3a3d40e7d26d","name":"should update user profile with valid data","time":{"start":1747645609635,"stop":1747645609639,"duration":4},"status":"passed","severity":"normal"},{"uid":"c9524da24ddc6486","name":"should throw BadRequestException when sections validation fails","time":{"start":1747645611058,"stop":1747645611060,"duration":2},"status":"passed","severity":"normal"},{"uid":"d69ec4438082e77","name":"should throw BadRequestException when date format is invalid","time":{"start":1747645610790,"stop":1747645610793,"duration":3},"status":"passed","severity":"normal"},{"uid":"bf6b337cd5256040","name":"should delete an itinerary from the index","time":{"start":1747645611797,"stop":1747645611804,"duration":7},"status":"passed","severity":"normal"},{"uid":"83d15ac8bc02a139","name":"should return access and refresh tokens on successful login","time":{"start":1747645613539,"stop":1747645613564,"duration":25},"status":"passed","severity":"normal"},{"uid":"2d7c10599c2c0a0e","name":"should return list of countries","time":{"start":1747645614435,"stop":1747645614437,"duration":2},"status":"passed","severity":"normal"},{"uid":"9fc959a1899e1c44","name":"should throw UnauthorizedException if password is invalid","time":{"start":1747645611182,"stop":1747645611189,"duration":7},"status":"passed","severity":"normal"},{"uid":"c8164180123b0d15","name":"should update user password and send success password reset email if verification is successful","time":{"start":1747645611503,"stop":1747645611521,"duration":18},"status":"passed","severity":"normal"},{"uid":"e5e92db7b49d506b","name":"should return the correct start and end timestamps for the previous month","time":{"start":1747645613622,"stop":1747645613626,"duration":4},"status":"passed","severity":"normal"},{"uid":"651349e58901bb93","name":"should throw ForbiddenException when contingency plan belongs to different itinerary","time":{"start":1747645611040,"stop":1747645611043,"duration":3},"status":"passed","severity":"normal"},{"uid":"7eb3931afe06bd89","name":"should select a contingency plan and return a formatted response","time":{"start":1747645611000,"stop":1747645611003,"duration":3},"status":"passed","severity":"normal"},{"uid":"2246528893485811","name":"should be defined","time":{"start":1747645613580,"stop":1747645613606,"duration":26},"status":"passed","severity":"normal"},{"uid":"b5b7f37f932b923f","name":"should select a contingency plan and unselect others","time":{"start":1747645611025,"stop":1747645611031,"duration":6},"status":"passed","severity":"normal"},{"uid":"814d094017b7d17c","name":"should throw BadRequestException if user already saved the itinerary","time":{"start":1747645611196,"stop":1747645611201,"duration":5},"status":"passed","severity":"normal"},{"uid":"30f69568a97eedb3","name":"should handle user with no itineraries","time":{"start":1747645609568,"stop":1747645609572,"duration":4},"status":"passed","severity":"normal"},{"uid":"ea03c6752ccbd801","name":"should throw UnauthorizedException if token is invalid","time":{"start":1747645614152,"stop":1747645614156,"duration":4},"status":"passed","severity":"normal"},{"uid":"619cb36f4eeb60fc","name":"should return new access and refresh tokens","time":{"start":1747645613575,"stop":1747645613579,"duration":4},"status":"passed","severity":"normal"},{"uid":"1eb535cb355a3cfb","name":"should return a string indicating a payment was updated","time":{"start":1747645615050,"stop":1747645615053,"duration":3},"status":"passed","severity":"normal"},{"uid":"bd7dbd40a835b830","name":"should throw NotFoundException if user is not found","time":{"start":1747645609531,"stop":1747645609559,"duration":28},"status":"passed","severity":"normal"},{"uid":"8a7f53f86fd2e85b","name":"should return new access and refresh tokens if refresh token is valid","time":{"start":1747645611199,"stop":1747645611202,"duration":3},"status":"passed","severity":"normal"},{"uid":"cb14bd76ad2d341e","name":"should create a contingency plan with sections and blocks","time":{"start":1747645611002,"stop":1747645611006,"duration":4},"status":"passed","severity":"normal"},{"uid":"817610488b23b1e7","name":"should throw BadRequestException when no sections are provided","time":{"start":1747645610687,"stop":1747645610697,"duration":10},"status":"passed","severity":"normal"},{"uid":"5c3037475b351103","name":"should pass search parameters to the service","time":{"start":1747645613989,"stop":1747645613991,"duration":2},"status":"passed","severity":"normal"},{"uid":"8e70a6bb865afd73","name":"should throw BadRequestException when start date is after end date","time":{"start":1747645610676,"stop":1747645610682,"duration":6},"status":"passed","severity":"normal"},{"uid":"4368251a52037bc3","name":"should call sendVerificationCode service with correct parameters","time":{"start":1747645612603,"stop":1747645612612,"duration":9},"status":"passed","severity":"normal"},{"uid":"171f864558db3ff6","name":"should be defined","time":{"start":1747645615092,"stop":1747645615101,"duration":9},"status":"passed","severity":"normal"},{"uid":"4599157a1d300387","name":"should be defined","time":{"start":1747645614547,"stop":1747645614559,"duration":12},"status":"passed","severity":"normal"},{"uid":"3bbd420c93f0138a","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747645610948,"stop":1747645610952,"duration":4},"status":"passed","severity":"normal"},{"uid":"6e9095bc3d98cbe4","name":"should be defined","time":{"start":1747645611575,"stop":1747645611626,"duration":51},"status":"passed","severity":"normal"},{"uid":"805535aea2661fc0","name":"should throw InternalServerErrorException if Firebase token verification fails","time":{"start":1747645613635,"stop":1747645613638,"duration":3},"status":"passed","severity":"normal"},{"uid":"107da15a80268edc","name":"should handle duplicate titles in results","time":{"start":1747645611084,"stop":1747645611092,"duration":8},"status":"passed","severity":"normal"},{"uid":"599084e793449f3e","name":"should return the pre-register count","time":{"start":1747645614564,"stop":1747645614566,"duration":2},"status":"passed","severity":"normal"},{"uid":"3077061314b8e630","name":"should throw BadRequestException when duplicate section numbers are provided","time":{"start":1747645610701,"stop":1747645610711,"duration":10},"status":"passed","severity":"normal"},{"uid":"cceffce992f07787","name":"should search itineraries with day count range filters","time":{"start":1747645611039,"stop":1747645611042,"duration":3},"status":"passed","severity":"normal"},{"uid":"e644c10d9bc8cd4c","name":"should throw NotFoundException if referral code is not found","time":{"start":1747645613230,"stop":1747645613233,"duration":3},"status":"passed","severity":"normal"},{"uid":"2484608f589d89f3","name":"should return success response when email change request is successful","time":{"start":1747645612613,"stop":1747645612615,"duration":2},"status":"passed","severity":"normal"},{"uid":"a519cfc6282c4a1e","name":"should throw BadRequestException if user was created recently and is not confirmed","time":{"start":1747645611214,"stop":1747645611218,"duration":4},"status":"passed","severity":"normal"},{"uid":"e20dbbc0d0751fc5","name":"should just create view if less than 10 views","time":{"start":1747645611113,"stop":1747645611115,"duration":2},"status":"passed","severity":"normal"},{"uid":"53aa52aa044ecfd4","name":"should return all tags","time":{"start":1747645610921,"stop":1747645610923,"duration":2},"status":"passed","severity":"normal"},{"uid":"8b0c5ae8c6a0a6d6","name":"should throw an error when API call fails","time":{"start":1747645614391,"stop":1747645614393,"duration":2},"status":"passed","severity":"normal"},{"uid":"fb8d94a20e4f4fb3","name":"should register a new user and return tokens","time":{"start":1747645611561,"stop":1747645611565,"duration":4},"status":"passed","severity":"normal"},{"uid":"96b0b8be5435e562","name":"should throw ForbiddenException if user is not the owner of the itinerary","time":{"start":1747645610952,"stop":1747645610956,"duration":4},"status":"passed","severity":"normal"},{"uid":"74cbdc5d06dd2508","name":"should calculate days count from date range","time":{"start":1747645611747,"stop":1747645611750,"duration":3},"status":"passed","severity":"normal"},{"uid":"ca664b06c100f935","name":"should call service.login with the correct email","time":{"start":1747645614566,"stop":1747645614568,"duration":2},"status":"passed","severity":"normal"},{"uid":"19e2dbaabb13f362","name":"should handle overflow page numbers","time":{"start":1747645610852,"stop":1747645610854,"duration":2},"status":"passed","severity":"normal"},{"uid":"50fe3f3ab20b6b38","name":"should create a payment","time":{"start":1747645614985,"stop":1747645614987,"duration":2},"status":"passed","severity":"normal"},{"uid":"dbed8410c0d104f","name":"should still return even if user has not liked any itinerary on the list","time":{"start":1747645611225,"stop":1747645611228,"duration":3},"status":"passed","severity":"normal"},{"uid":"eb5b4202043a269f","name":"should return \"10 menit\" for TEN_MINUTES_BEFORE option","time":{"start":1747645611994,"stop":1747645611996,"duration":2},"status":"passed","severity":"normal"},{"uid":"89dbf29228e2e193","name":"should return empty data when there are no itineraries","time":{"start":1747645610891,"stop":1747645610893,"duration":2},"status":"passed","severity":"normal"},{"uid":"fd55f8b677e991a1","name":"should be defined","time":{"start":1747645610626,"stop":1747645610755,"duration":129},"status":"passed","severity":"normal"},{"uid":"9309efd0937f69d6","name":"should throw ForbiddenException if the user is not authorized to accept the invitation","time":{"start":1747645610960,"stop":1747645610962,"duration":2},"status":"passed","severity":"normal"},{"uid":"b527e46574a1c6cc","name":"should return list of cities based on country","time":{"start":1747645614438,"stop":1747645614440,"duration":2},"status":"passed","severity":"normal"},{"uid":"87a406c0c7f2cff","name":"should update an itinerary and return a formatted response","time":{"start":1747645610908,"stop":1747645610911,"duration":3},"status":"passed","severity":"normal"},{"uid":"6f47f90b594220d1","name":"should send verification email if user exists","time":{"start":1747645611255,"stop":1747645611263,"duration":8},"status":"passed","severity":"normal"},{"uid":"fef7a1dc8eec0b9b","name":"should call authService.verify with correct data","time":{"start":1747645613587,"stop":1747645613590,"duration":3},"status":"passed","severity":"normal"},{"uid":"437d86910ec6bce3","name":"should duplicate an itinerary contingency","time":{"start":1747645611148,"stop":1747645611155,"duration":7},"status":"passed","severity":"normal"},{"uid":"19ae838ccfaef4fd","name":"should only update specified fields","time":{"start":1747645609640,"stop":1747645609646,"duration":6},"status":"passed","severity":"normal"},{"uid":"c6cd71aba83fe796","name":"should return \"Hello World!\"","time":{"start":1747645615178,"stop":1747645615186,"duration":8},"status":"passed","severity":"normal"},{"uid":"5475261a7abf62f0","name":"should return an itinerary when found","time":{"start":1747645610757,"stop":1747645610768,"duration":11},"status":"passed","severity":"normal"},{"uid":"efa9b2f9d116b802","name":"should return success on successful Google login","time":{"start":1747645613618,"stop":1747645613621,"duration":3},"status":"passed","severity":"normal"},{"uid":"40c8d99bddb969b","name":"should throw NotFoundException if the itinerary does not exist","time":{"start":1747645610930,"stop":1747645610936,"duration":6},"status":"passed","severity":"normal"},{"uid":"4fd95b4df6912bca","name":"should delete a tour from the index","time":{"start":1747645611823,"stop":1747645611831,"duration":8},"status":"passed","severity":"normal"},{"uid":"a678d6c69f3b9a44","name":"should return a single payment","time":{"start":1747645614990,"stop":1747645614992,"duration":2},"status":"passed","severity":"normal"},{"uid":"2e714b3eb0f996c3","name":"should format dates according to Indonesian time format","time":{"start":1747645613779,"stop":1747645613781,"duration":2},"status":"passed","severity":"normal"},{"uid":"9485ead62cc4b87f","name":"should handle user with no itineraries","time":{"start":1747645609595,"stop":1747645609598,"duration":3},"status":"passed","severity":"normal"},{"uid":"cb0d0db664220a4d","name":"should create itinerary and tour indexes if they do not exist","time":{"start":1747645611630,"stop":1747645611634,"duration":4},"status":"passed","severity":"normal"},{"uid":"1e4f80ae0baffdcf","name":"should handle errors from the search service","time":{"start":1747645611053,"stop":1747645611056,"duration":3},"status":"passed","severity":"normal"},{"uid":"f1f16653c4989c81","name":"should call updatePhotoProfile service with correct parameters","time":{"start":1747645612650,"stop":1747645612653,"duration":3},"status":"passed","severity":"normal"},{"uid":"73e52362b8333607","name":"should return an empty array of itinerary reminders if none found","time":{"start":1747645611935,"stop":1747645611937,"duration":2},"status":"passed","severity":"normal"},{"uid":"98e8c2cfc3e2b0a3","name":"should update a contingency plan and return a formatted response","time":{"start":1747645611006,"stop":1747645611009,"duration":3},"status":"passed","severity":"normal"},{"uid":"6611452ae9490160","name":"should return a specific contingency plan","time":{"start":1747645610984,"stop":1747645610988,"duration":4},"status":"passed","severity":"normal"},{"uid":"c3814d84ccb104af","name":"should throw BadRequestException if email is already in use","time":{"start":1747645609655,"stop":1747645609658,"duration":3},"status":"passed","severity":"normal"},{"uid":"39f0cda2d009b54","name":"should return a list of itineraries for a user","time":{"start":1747645609573,"stop":1747645609592,"duration":19},"status":"passed","severity":"normal"},{"uid":"383f738cf5ba93d5","name":"should create an itinerary without tags","time":{"start":1747645610797,"stop":1747645610801,"duration":4},"status":"passed","severity":"normal"},{"uid":"62532b2dea6492c3","name":"should create an itinerary reminder and schedule the cron job","time":{"start":1747645613114,"stop":1747645613117,"duration":3},"status":"passed","severity":"normal"},{"uid":"44b32e252be3696","name":"should throw ForbiddenException if user is not the owner","time":{"start":1747645610900,"stop":1747645610902,"duration":2},"status":"passed","severity":"normal"},{"uid":"58ce8869def32533","name":"should throw NotFoundException when ticket is not found","time":{"start":1747645609672,"stop":1747645609677,"duration":5},"status":"passed","severity":"normal"},{"uid":"5f85ef34227bd6f8","name":"should return tour title suggestions","time":{"start":1747645613997,"stop":1747645614000,"duration":3},"status":"passed","severity":"normal"},{"uid":"b1ddb733a01fb384","name":"should search itineraries with the provided query and options","time":{"start":1747645611764,"stop":1747645611769,"duration":5},"status":"passed","severity":"normal"},{"uid":"781b63da6dfddbab","name":"should throw ForbiddenException if the user is not authorized to invite","time":{"start":1747645610937,"stop":1747645610950,"duration":13},"status":"passed","severity":"normal"},{"uid":"69cce972bffa92ba","name":"should remove a user from the itinerary successfully","time":{"start":1747645610973,"stop":1747645610975,"duration":2},"status":"passed","severity":"normal"},{"uid":"b9eacdb504b09e09","name":"should throw UnauthorizedException if user has no access to the itinerary","time":{"start":1747645611123,"stop":1747645611126,"duration":3},"status":"passed","severity":"normal"},{"uid":"bd8ae4dd0d07b39b","name":"should unsave the itinerary for the user","time":{"start":1747645611202,"stop":1747645611208,"duration":6},"status":"passed","severity":"normal"},{"uid":"2bc998416855d6c8","name":"should handle user not found","time":{"start":1747645609747,"stop":1747645609752,"duration":5},"status":"passed","severity":"normal"},{"uid":"44f0dcbf22d51182","name":"should be defined","time":{"start":1747645611849,"stop":1747645611905,"duration":56},"status":"passed","severity":"normal"},{"uid":"f5bca21f64c2cd86","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747645611177,"stop":1747645611182,"duration":5},"status":"passed","severity":"normal"},{"uid":"dc46d392c917418f","name":"should send login email if user exists","time":{"start":1747645613237,"stop":1747645613240,"duration":3},"status":"passed","severity":"normal"},{"uid":"cbc1e106ba60d55a","name":"should accept an itinerary invitation and link the user to the itinerary using itineraryId","time":{"start":1747645610956,"stop":1747645610959,"duration":3},"status":"passed","severity":"normal"},{"uid":"ace12f60b13bfc8","name":"should return \"1 jam\" for ONE_HOUR_BEFORE option","time":{"start":1747645611990,"stop":1747645611994,"duration":4},"status":"passed","severity":"normal"},{"uid":"822d76d4b31182a","name":"should be defined","time":{"start":1747645610439,"stop":1747645610602,"duration":163},"status":"passed","severity":"normal"},{"uid":"dce7e1a3f93003ad","name":"should throw an error for invalid page number","time":{"start":1747645610869,"stop":1747645610872,"duration":3},"status":"passed","severity":"normal"},{"uid":"d0fc82b796e83f27","name":"should find itineraries by tags from user's latest and recently viewed itineraries","time":{"start":1747645611233,"stop":1747645611238,"duration":5},"status":"passed","severity":"normal"},{"uid":"9718c472313605c5","name":"should accept an itinerary invitation","time":{"start":1747645610951,"stop":1747645610956,"duration":5},"status":"passed","severity":"normal"},{"uid":"8b1779571fafcc6","name":"should sync itineraries when provided with valid API key","time":{"start":1747645614073,"stop":1747645614076,"duration":3},"status":"passed","severity":"normal"},{"uid":"733655934c7ea573","name":"should throw UnauthorizedException if user not found","time":{"start":1747645614161,"stop":1747645614164,"duration":3},"status":"passed","severity":"normal"},{"uid":"e37e7c2d3fe64c80","name":"should handle duration with durationType correctly","time":{"start":1747645612269,"stop":1747645612272,"duration":3},"status":"passed","severity":"normal"},{"uid":"541c33555f5998ce","name":"should update an itinerary with new details, tags, sections, and blocks","time":{"start":1747645610771,"stop":1747645610775,"duration":4},"status":"passed","severity":"normal"},{"uid":"9262d56f9e820be1","name":"should send invitations to the provided emails","time":{"start":1747645610927,"stop":1747645610945,"duration":18},"status":"passed","severity":"normal"},{"uid":"e09d623bf1cd63ac","name":"should throw an error when page number exceeds total pages","time":{"start":1747645610873,"stop":1747645610875,"duration":2},"status":"passed","severity":"normal"},{"uid":"ca14fbf24fd34900","name":"should throw UnauthorizedException when old password is incorrect","time":{"start":1747645609712,"stop":1747645609730,"duration":18},"status":"passed","severity":"normal"},{"uid":"7fff56cfbac4d401","name":"should create an itinerary and return a formatted response","time":{"start":1747645610784,"stop":1747645610788,"duration":4},"status":"passed","severity":"normal"},{"uid":"e928db2dadcda31a","name":"should throw ForbiddenException if user is not authorized","time":{"start":1747645610981,"stop":1747645610984,"duration":3},"status":"passed","severity":"normal"},{"uid":"7cbe128c32f5d8cc","name":"should search tours with the provided query and options","time":{"start":1747645611774,"stop":1747645611780,"duration":6},"status":"passed","severity":"normal"},{"uid":"8c59561723bee1b0","name":"should throw BadRequestException if last ticket is still valid","time":{"start":1747645613280,"stop":1747645613286,"duration":6},"status":"passed","severity":"normal"},{"uid":"48835d410a886edd","name":"should return a contingency plan with correctly mapped section numbers","time":{"start":1747645611013,"stop":1747645611017,"duration":4},"status":"passed","severity":"normal"},{"uid":"58003a29e53c5017","name":"should handle errors if sending email fails","time":{"start":1747645615105,"stop":1747645615108,"duration":3},"status":"passed","severity":"normal"},{"uid":"4963d15faa1e96de","name":"should throw BadRequestException when block start time is after end time","time":{"start":1747645610797,"stop":1747645610800,"duration":3},"status":"passed","severity":"normal"},{"uid":"86b46b3c35455df","name":"should correctly format an itinerary for indexing","time":{"start":1747645611640,"stop":1747645611671,"duration":31},"status":"passed","severity":"normal"},{"uid":"b4c30caced00cce9","name":"should delete oldest view if already 10 and add new","time":{"start":1747645611109,"stop":1747645611112,"duration":3},"status":"passed","severity":"normal"},{"uid":"f76005b5a88e08e4","name":"should return an empty array when user has no transactions","time":{"start":1747645609782,"stop":1747645609787,"duration":5},"status":"passed","severity":"normal"},{"uid":"3aba510eb1bf1486","name":"should handle missing price range data","time":{"start":1747645614378,"stop":1747645614390,"duration":12},"status":"passed","severity":"normal"},{"uid":"5dfef57797fb9e8","name":"should throw BadRequestException when start date is after end date","time":{"start":1747645610793,"stop":1747645610796,"duration":3},"status":"passed","severity":"normal"},{"uid":"74f362881c04b6ec","name":"should update an itinerary reminder and reschdule the cron job","time":{"start":1747645613118,"stop":1747645613120,"duration":2},"status":"passed","severity":"normal"},{"uid":"fae3ceb5ff44b00c","name":"should return empty array when user has no itinerary likes","time":{"start":1747645612577,"stop":1747645612582,"duration":5},"status":"passed","severity":"normal"},{"uid":"78c8296ae0cf3072","name":"should handle service errors properly","time":{"start":1747645614881,"stop":1747645614884,"duration":3},"status":"passed","severity":"normal"},{"uid":"d7b75f0fb4a4772a","name":"should return empty suggestions for short queries","time":{"start":1747645613992,"stop":1747645613997,"duration":5},"status":"passed","severity":"normal"},{"uid":"3a15dc12a510bf8d","name":"should be defined","time":{"start":1747645609440,"stop":1747645609517,"duration":77},"status":"passed","severity":"normal"},{"uid":"e3de577c732be21c","name":"should throw UnauthorizedException if user is not found","time":{"start":1747645611122,"stop":1747645611182,"duration":60},"status":"passed","severity":"normal"},{"uid":"66d77cfb0446659d","name":"should return a string indicating a new payment was added","time":{"start":1747645615035,"stop":1747645615037,"duration":2},"status":"passed","severity":"normal"},{"uid":"498ed2d60ed322f0","name":"should return empty array when user has no transactions","time":{"start":1747645612679,"stop":1747645612685,"duration":6},"status":"passed","severity":"normal"},{"uid":"32eb40a46da1b7b1","name":"should throw a NotFoundException if job doesnt exist","time":{"start":1747645611985,"stop":1747645611987,"duration":2},"status":"passed","severity":"normal"},{"uid":"3e47b2dc99264ec5","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747645610829,"stop":1747645610841,"duration":12},"status":"passed","severity":"normal"},{"uid":"3d9dbf11822a8bca","name":"should return success response when email change verification is successful","time":{"start":1747645612621,"stop":1747645612624,"duration":3},"status":"passed","severity":"normal"},{"uid":"2859c4aad6ef2176","name":"should throw BadRequestException if user is not found","time":{"start":1747645613270,"stop":1747645613273,"duration":3},"status":"passed","severity":"normal"},{"uid":"658071ef3def392c","name":"should be defined","time":{"start":1747645612491,"stop":1747645612532,"duration":41},"status":"passed","severity":"normal"},{"uid":"fb7be4995129fb54","name":"should return empty array when user has no itineraries","time":{"start":1747645612561,"stop":1747645612570,"duration":9},"status":"passed","severity":"normal"},{"uid":"eaa558993d2a495a","name":"should create a new user if user does not exist","time":{"start":1747645611218,"stop":1747645611226,"duration":8},"status":"passed","severity":"normal"},{"uid":"97dfa26fcc4cb1e4","name":"should pass errors from service to the caller","time":{"start":1747645610789,"stop":1747645610796,"duration":7},"status":"passed","severity":"normal"},{"uid":"24b7890a75c7869c","name":"should create an itinerary with sections and blocks","time":{"start":1747645610605,"stop":1747645610619,"duration":14},"status":"passed","severity":"normal"},{"uid":"7773eea0a6a3da45","name":"should return place details with price range when successful","time":{"start":1747645614368,"stop":1747645614371,"duration":3},"status":"passed","severity":"normal"},{"uid":"8d98a4f438feaa4c","name":"should duplicate an itinerary with no contingencies and return a formatted response","time":{"start":1747645611019,"stop":1747645611022,"duration":3},"status":"passed","severity":"normal"},{"uid":"981523d260b317e4","name":"should search tours with default parameters","time":{"start":1747645612238,"stop":1747645612244,"duration":6},"status":"passed","severity":"normal"},{"uid":"1c44d8a9a0e11595","name":"should be defined","time":{"start":1747645612157,"stop":1747645612200,"duration":43},"status":"passed","severity":"normal"},{"uid":"be247d54feca8682","name":"should search itineraries with filters","time":{"start":1747645611089,"stop":1747645611092,"duration":3},"status":"passed","severity":"normal"},{"uid":"e88ae220053c51d1","name":"should call service.createPreRegister with correct data","time":{"start":1747645614560,"stop":1747645614563,"duration":3},"status":"passed","severity":"normal"},{"uid":"b3b3b6b43924443f","name":"should throw ForbiddenException when user is not the owner","time":{"start":1747645610814,"stop":1747645610817,"duration":3},"status":"passed","severity":"normal"},{"uid":"e319ae4a4223b880","name":"should throw NotFoundException if itinerary reminder does not exist","time":{"start":1747645611948,"stop":1747645611951,"duration":3},"status":"passed","severity":"normal"},{"uid":"2ceb8b1d3b1ac45e","name":"should return an array of tags","time":{"start":1747645610921,"stop":1747645610924,"duration":3},"status":"passed","severity":"normal"},{"uid":"4c3ab5130fb33d9b","name":"should duplicate an itinerary and its contingencies and return a formatted response","time":{"start":1747645611015,"stop":1747645611019,"duration":4},"status":"passed","severity":"normal"},{"uid":"154b64dfe18c9294","name":"should send webhook for pre-registration","time":{"start":1747645613295,"stop":1747645613309,"duration":14},"status":"passed","severity":"normal"},{"uid":"1660476a5a8f11ee","name":"should handle service errors correctly","time":{"start":1747645610830,"stop":1747645610837,"duration":7},"status":"passed","severity":"normal"},{"uid":"dad5035fa1f23a11","name":"should handle optional fields in the DTO correctly","time":{"start":1747645610801,"stop":1747645610808,"duration":7},"status":"passed","severity":"normal"},{"uid":"2589c20a0803d0ac","name":"should handle fetch errors gracefully","time":{"start":1747645613615,"stop":1747645613619,"duration":4},"status":"passed","severity":"normal"},{"uid":"55d17c87bcf478db","name":"should handle errors from service and propagate them","time":{"start":1747645611149,"stop":1747645611153,"duration":4},"status":"passed","severity":"normal"},{"uid":"6dcf231e7564babb","name":"should return search suggestions based on query","time":{"start":1747645611059,"stop":1747645611062,"duration":3},"status":"passed","severity":"normal"},{"uid":"3eeb9dff273cc68","name":"should return empty list if user has no itineraries","time":{"start":1747645610855,"stop":1747645610857,"duration":2},"status":"passed","severity":"normal"},{"uid":"304b405700418cea","name":"should mark itinerary as complete","time":{"start":1747645610901,"stop":1747645610904,"duration":3},"status":"passed","severity":"normal"},{"uid":"161dc60af4aac0a4","name":"should handle user with no liked itineraries","time":{"start":1747645609611,"stop":1747645609617,"duration":6},"status":"passed","severity":"normal"},{"uid":"9e09496399dedb82","name":"should update a contingency plan successfully","time":{"start":1747645611044,"stop":1747645611049,"duration":5},"status":"passed","severity":"normal"},{"uid":"e4c1d77ba2612e60","name":"should return list of cities","time":{"start":1747645614877,"stop":1747645614879,"duration":2},"status":"passed","severity":"normal"},{"uid":"7a38dfa4586ba2af","name":"should update only the fields provided in the DTO","time":{"start":1747645612592,"stop":1747645612602,"duration":10},"status":"passed","severity":"normal"},{"uid":"dba44568fb8ebf0f","name":"should throw other errors","time":{"start":1747645611838,"stop":1747645611842,"duration":4},"status":"passed","severity":"normal"},{"uid":"66ecdd1a2351a6d1","name":"should throw BadRequestException when ticket has expired","time":{"start":1747645609681,"stop":1747645609684,"duration":3},"status":"passed","severity":"normal"},{"uid":"3ed8138c51371f4b","name":"should correctly format a tour for indexing","time":{"start":1747645611685,"stop":1747645611705,"duration":20},"status":"passed","severity":"normal"},{"uid":"7fee6cae74566131","name":"should throw an error if itinerary is not found","time":{"start":1747645610918,"stop":1747645610920,"duration":2},"status":"passed","severity":"normal"},{"uid":"65f289c2cf288fc4","name":"should throw a ConflictException on already scheduled reminders","time":{"start":1747645611961,"stop":1747645611973,"duration":12},"status":"passed","severity":"normal"},{"uid":"75589297474d313f","name":"should handle search with no results","time":{"start":1747645611098,"stop":1747645611101,"duration":3},"status":"passed","severity":"normal"},{"uid":"6718fd1dc75ab2b5","name":"should return itinerary likes when getListItineraryLikes is called with a valid ID","time":{"start":1747645612571,"stop":1747645612576,"duration":5},"status":"passed","severity":"normal"},{"uid":"983a4004f5f2cb13","name":"should successfully change user email after verification","time":{"start":1747645609688,"stop":1747645609697,"duration":9},"status":"passed","severity":"normal"},{"uid":"1e499a27769f2961","name":"should correctly calculate totalDestinations when sections is empty","time":{"start":1747645609601,"stop":1747645609604,"duration":3},"status":"passed","severity":"normal"},{"uid":"947ccc29b775e070","name":"should return transaction history when getTransactionHistory is called with a valid user","time":{"start":1747645612654,"stop":1747645612678,"duration":24},"status":"passed","severity":"normal"},{"uid":"68e3f5e408b63db3","name":"should throw an error if placeId is not provided","time":{"start":1747645614372,"stop":1747645614375,"duration":3},"status":"passed","severity":"normal"},{"uid":"2585af1d2ff97a83","name":"should be defined","time":{"start":1747645615026,"stop":1747645615034,"duration":8},"status":"passed","severity":"normal"},{"uid":"e53c2622cccfe2d6","name":"should throw NotFoundException if the itinerary does not exist","time":{"start":1747645610965,"stop":1747645610968,"duration":3},"status":"passed","severity":"normal"},{"uid":"58402de16d37625","name":"should handle service errors properly","time":{"start":1747645614092,"stop":1747645614097,"duration":5},"status":"passed","severity":"normal"},{"uid":"d1c96952a0350a3","name":"should return access and refresh tokens if login is successful","time":{"start":1747645611189,"stop":1747645611193,"duration":4},"status":"passed","severity":"normal"},{"uid":"78a4c64d8d576485","name":"should transform page to a number","time":{"start":1747645615129,"stop":1747645615133,"duration":4},"status":"passed","severity":"normal"},{"uid":"1d2165616cd267a4","name":"should save a public itinerary for the user and return success response","time":{"start":1747645611118,"stop":1747645611121,"duration":3},"status":"passed","severity":"normal"},{"uid":"78c4b5ba541ba706","name":"should verify a Firebase token and return user data","time":{"start":1747645611585,"stop":1747645611589,"duration":4},"status":"passed","severity":"normal"},{"uid":"1990462df998b59a","name":"should throw ForbiddenException if user does not own the itinerary","time":{"start":1747645611010,"stop":1747645611013,"duration":3},"status":"passed","severity":"normal"},{"uid":"45d8534f4d20b4a5","name":"should call service and return viewed itineraries","time":{"start":1747645611096,"stop":1747645611098,"duration":2},"status":"passed","severity":"normal"},{"uid":"27bc59adc8959219","name":"should pass errors from service to the caller","time":{"start":1747645611121,"stop":1747645611125,"duration":4},"status":"passed","severity":"normal"},{"uid":"cf7f0310d66da17d","name":"should throw UnauthorizedException if password is incorrect","time":{"start":1747645613571,"stop":1747645613575,"duration":4},"status":"passed","severity":"normal"},{"uid":"4a67f3044bb4a1de","name":"should return country code response","time":{"start":1747645614442,"stop":1747645614444,"duration":2},"status":"passed","severity":"normal"},{"uid":"7dbdf0f793a4cb74","name":"should throw ConflictException if itinerary reminder already exist","time":{"start":1747645611928,"stop":1747645611931,"duration":3},"status":"passed","severity":"normal"},{"uid":"3287de6807021b1d","name":"should clear refreshToken cookie","time":{"start":1747645613598,"stop":1747645613601,"duration":3},"status":"passed","severity":"normal"},{"uid":"886cdcf89afd348","name":"should throw ForbiddenException if the user is not authorized to remove participants","time":{"start":1747645610972,"stop":1747645610974,"duration":2},"status":"passed","severity":"normal"},{"uid":"e551f0a12bda1d73","name":"should throw InternalServerErrorException if Firebase verification fails","time":{"start":1747645611593,"stop":1747645611598,"duration":5},"status":"passed","severity":"normal"},{"uid":"cfe1a24d1cc592a9","name":"should allow page to be optional","time":{"start":1747645615136,"stop":1747645615137,"duration":1},"status":"passed","severity":"normal"},{"uid":"40d3714846b97ad8","name":"should not create route when routeToNext is undefined or null","time":{"start":1747645610732,"stop":1747645610751,"duration":19},"status":"passed","severity":"normal"},{"uid":"3c7c2c78923e984e","name":"should return empty data when user has no shared itineraries","time":{"start":1747645610880,"stop":1747645610882,"duration":2},"status":"passed","severity":"normal"},{"uid":"9be53055dddd60f1","name":"should handle names from Firebase correctly","time":{"start":1747645611565,"stop":1747645611581,"duration":16},"status":"passed","severity":"normal"},{"uid":"7a2ade872f4d17c2","name":"should fetch tours and index them","time":{"start":1747645611733,"stop":1747645611738,"duration":5},"status":"passed","severity":"normal"},{"uid":"c4f5f19576b80743","name":"should handle undefined itinerary gracefully","time":{"start":1747645611789,"stop":1747645611791,"duration":2},"status":"passed","severity":"normal"},{"uid":"1b6165e3fc81bebb","name":"should calculate totalLikes from itineraries correctly","time":{"start":1747645609559,"stop":1747645609565,"duration":6},"status":"passed","severity":"normal"},{"uid":"3986f41da93fc6cf","name":"should return itineraries successfully","time":{"start":1747645610884,"stop":1747645610888,"duration":4},"status":"passed","severity":"normal"},{"uid":"a8b2d91b4ef62991","name":"should throw NotFoundException if contingency does not exist","time":{"start":1747645611156,"stop":1747645611161,"duration":5},"status":"passed","severity":"normal"},{"uid":"94f8ce328515d6ac","name":"should save a public itinerary for the user","time":{"start":1747645611173,"stop":1747645611176,"duration":3},"status":"passed","severity":"normal"},{"uid":"c450a9f189fff9b4","name":"should throw ForbiddenException if user does not own the itinerary and the itinerary is not public","time":{"start":1747645611167,"stop":1747645611173,"duration":6},"status":"passed","severity":"normal"},{"uid":"fedd7b5147ba50ad","name":"should not create index if it already exists","time":{"start":1747645611634,"stop":1747645611640,"duration":6},"status":"passed","severity":"normal"},{"uid":"eb0782ec2c60c8e","name":"should return a successful response with tour data","time":{"start":1747645614000,"stop":1747645614003,"duration":3},"status":"passed","severity":"normal"},{"uid":"8d388150a57a8168","name":"should call verifyEmailChange service with correct parameters","time":{"start":1747645612616,"stop":1747645612620,"duration":4},"status":"passed","severity":"normal"},{"uid":"a7030d6e28dc3d26","name":"should throw UnauthorizedException if user not found","time":{"start":1747645614659,"stop":1747645614662,"duration":3},"status":"passed","severity":"normal"},{"uid":"5e8fafd69506b40c","name":"should throw NotFoundException if the invitation does not exist","time":{"start":1747645610957,"stop":1747645610959,"duration":2},"status":"passed","severity":"normal"},{"uid":"69f6a575c08608e3","name":"should handle string dates","time":{"start":1747645611756,"stop":1747645611758,"duration":2},"status":"passed","severity":"normal"},{"uid":"9f560e32753ce3d","name":"should throw NotFoundException when contingency plan does not exist","time":{"start":1747645611032,"stop":1747645611035,"duration":3},"status":"passed","severity":"normal"},{"uid":"7e1515708b7b3b91","name":"should throw ForbiddenException if user does not own the itinerary and the itinerary is not public","time":{"start":1747645611137,"stop":1747645611148,"duration":11},"status":"passed","severity":"normal"},{"uid":"9d8497771e0aee69","name":"should be defined","time":{"start":1747645613953,"stop":1747645613967,"duration":14},"status":"passed","severity":"normal"},{"uid":"4b8679c8c85c7bc0","name":"should throw UnauthorizedException if email is not registered","time":{"start":1747645613565,"stop":1747645613571,"duration":6},"status":"passed","severity":"normal"},{"uid":"557a64d42990a1ae","name":"should handle empty createdBlocks and use default TRANSPORT_MODE.DRIVE when transportMode is not provided","time":{"start":1747645610763,"stop":1747645610767,"duration":4},"status":"passed","severity":"normal"},{"uid":"f58071727c42ee77","name":"should call service and return response","time":{"start":1747645613968,"stop":1747645613971,"duration":3},"status":"passed","severity":"normal"},{"uid":"3ecc28e0d6a841b1","name":"should search with custom sort parameters","time":{"start":1747645611092,"stop":1747645611095,"duration":3},"status":"passed","severity":"normal"},{"uid":"b174fff921d282b8","name":"should throw NotFoundException if contingency not found","time":{"start":1747645611003,"stop":1747645611006,"duration":3},"status":"passed","severity":"normal"},{"uid":"1353e4541193e9d","name":"should search tours with default parameters","time":{"start":1747645613975,"stop":1747645613988,"duration":13},"status":"passed","severity":"normal"},{"uid":"35cbb110b6445ea0","name":"should throw NotFoundException if itinerary is not found","time":{"start":1747645610769,"stop":1747645610773,"duration":4},"status":"passed","severity":"normal"},{"uid":"fd6043788b415711","name":"should return price range when API call is successful","time":{"start":1747645614375,"stop":1747645614378,"duration":3},"status":"passed","severity":"normal"},{"uid":"c330d456976f75e5","name":"should throw UnauthorizedException when API key is missing","time":{"start":1747645614084,"stop":1747645614091,"duration":7},"status":"passed","severity":"normal"},{"uid":"9b1538c3ac9c848f","name":"should successfully generate and send verification code","time":{"start":1747645609647,"stop":1747645609650,"duration":3},"status":"passed","severity":"normal"},{"uid":"8b08aeca1966280b","name":"should handle time components correctly","time":{"start":1747645611751,"stop":1747645611753,"duration":2},"status":"passed","severity":"normal"},{"uid":"22f02e61d6905693","name":"should call service.validateLogin with correct ticketId","time":{"start":1747645614569,"stop":1747645614571,"duration":2},"status":"passed","severity":"normal"},{"uid":"3cfd23a23a756ec3","name":"should call authService.verifyPasswordReset with correct data","time":{"start":1747645613608,"stop":1747645613613,"duration":5},"status":"passed","severity":"normal"},{"uid":"8170e87053379f59","name":"should throw NotFoundException when contingency plan does not exist","time":{"start":1747645611017,"stop":1747645611020,"duration":3},"status":"passed","severity":"normal"},{"uid":"d636ff02e07b5c6","name":"should return itineraryId if user already has access to the itinerary","time":{"start":1747645610960,"stop":1747645610962,"duration":2},"status":"passed","severity":"normal"},{"uid":"122873491b4a5a44","name":"should throw BadRequestException when new password is same as old password","time":{"start":1747645609758,"stop":1747645609761,"duration":3},"status":"passed","severity":"normal"},{"uid":"d71a455589a39516","name":"should throw an error if itineraryData.sections is empty","time":{"start":1747645614661,"stop":1747645614666,"duration":5},"status":"passed","severity":"normal"},{"uid":"833ec824b988512c","name":"should throw BadRequestException if email is already registered","time":{"start":1747645613219,"stop":1747645613229,"duration":10},"status":"passed","severity":"normal"},{"uid":"1e63d38012756d04","name":"should handle NotFoundException if service throws it","time":{"start":1747645612686,"stop":1747645612694,"duration":8},"status":"passed","severity":"normal"},{"uid":"e9f5b06fdcea6c0","name":"should add a published itinerary to the index","time":{"start":1747645611781,"stop":1747645611783,"duration":2},"status":"passed","severity":"normal"},{"uid":"7103e84a7d78b154","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747645611134,"stop":1747645611136,"duration":2},"status":"passed","severity":"normal"},{"uid":"4e4c63fa3c6d51db","name":"should throw BadRequestException when new password and confirmation do not match","time":{"start":1747645609731,"stop":1747645609741,"duration":10},"status":"passed","severity":"normal"},{"uid":"8e230a290b1c7aa3","name":"should correctly count LOCATION blocks","time":{"start":1747645610894,"stop":1747645610897,"duration":3},"status":"passed","severity":"normal"},{"uid":"207c5a9fd8086758","name":"should update an itinerary with defaults for missing block fields","time":{"start":1747645610780,"stop":1747645610783,"duration":3},"status":"passed","severity":"normal"},{"uid":"2194431fd27d2f19","name":"should throw NotFoundException when contingency plan does not exist","time":{"start":1747645611050,"stop":1747645611054,"duration":4},"status":"passed","severity":"normal"},{"uid":"bf2e2288b8ef0274","name":"should throw an error when API call fails","time":{"start":1747645614364,"stop":1747645614368,"duration":4},"status":"passed","severity":"normal"},{"uid":"f09340014bafe89a","name":"should throw ForbiddenException when user is not the owner of the itinerary","time":{"start":1747645610917,"stop":1747645610921,"duration":4},"status":"passed","severity":"normal"},{"uid":"8278612969c967a4","name":"should return list of itinerary views ordered by viewedAt desc","time":{"start":1747645611101,"stop":1747645611105,"duration":4},"status":"passed","severity":"normal"},{"uid":"1e0ac761d2853923","name":"should throw UnauthorizedException if emails do not match","time":{"start":1747645611478,"stop":1747645611490,"duration":12},"status":"passed","severity":"normal"},{"uid":"a7c148dddd40ced2","name":"should allow user to see itinerary if invited","time":{"start":1747645610825,"stop":1747645610828,"duration":3},"status":"passed","severity":"normal"},{"uid":"929d6c3c0dbf89f5","name":"should throw ForbiddenException if the user is not the owner of the itinerary","time":{"start":1747645610979,"stop":1747645610982,"duration":3},"status":"passed","severity":"normal"},{"uid":"ac76c05121b9e3d0","name":"should update viewedAt if itinerary already viewed","time":{"start":1747645611105,"stop":1747645611108,"duration":3},"status":"passed","severity":"normal"},{"uid":"9f26cb8be0bda4c7","name":"should throw NotFoundException if itinerary doesnt exist","time":{"start":1747645611116,"stop":1747645611119,"duration":3},"status":"passed","severity":"normal"},{"uid":"e612858e962910d6","name":"should handle Discord webhook errors gracefully","time":{"start":1747645613629,"stop":1747645613632,"duration":3},"status":"passed","severity":"normal"},{"uid":"58dc0940d9a59b4e","name":"should throw BadRequestException when duplicate section numbers are provided","time":{"start":1747645610804,"stop":1747645610806,"duration":2},"status":"passed","severity":"normal"},{"uid":"151ba865a5c25443","name":"should throw NotFoundException if itinerary doesnt exist","time":{"start":1747645611946,"stop":1747645611948,"duration":2},"status":"passed","severity":"normal"},{"uid":"843a33b8d0df8310","name":"should return empty array if the list is empty","time":{"start":1747645611228,"stop":1747645611231,"duration":3},"status":"passed","severity":"normal"},{"uid":"a9f230e17bd017ec","name":"should delete the oldest ticket if more than 5 exist","time":{"start":1747645613286,"stop":1747645613290,"duration":4},"status":"passed","severity":"normal"},{"uid":"9df72d2a3c540857","name":"should return list of tour views ordered by viewedAt desc","time":{"start":1747645612207,"stop":1747645612213,"duration":6},"status":"passed","severity":"normal"},{"uid":"1d4a515c91b9510b","name":"should handle search with complex filters and sorting","time":{"start":1747645611095,"stop":1747645611098,"duration":3},"status":"passed","severity":"normal"},{"uid":"ee74817d1801abb","name":"should return empty data when there are no shared itineraries","time":{"start":1747645610844,"stop":1747645610856,"duration":12},"status":"passed","severity":"normal"},{"uid":"e060fbcd2d26e199","name":"should throw ForbiddenException if user is not owner","time":{"start":1747645611101,"stop":1747645611114,"duration":13},"status":"passed","severity":"normal"},{"uid":"f113e42a06f9430b","name":"should return success on successful Google registration","time":{"start":1747645613627,"stop":1747645613630,"duration":3},"status":"passed","severity":"normal"},{"uid":"e3150987f4981f3c","name":"should throw UnauthorizedException for invalid ticket","time":{"start":1747645613249,"stop":1747645613252,"duration":3},"status":"passed","severity":"normal"},{"uid":"df44ae2ef55763f3","name":"should return paginated itineraries","time":{"start":1747645610845,"stop":1747645610848,"duration":3},"status":"passed","severity":"normal"},{"uid":"5b858f697997654c","name":"should throw NotFoundException if tour doesnt exist","time":{"start":1747645612220,"stop":1747645612226,"duration":6},"status":"passed","severity":"normal"},{"uid":"ee9c1a49e9087006","name":"should return an empty array when there are no completed itineraries","time":{"start":1747645610898,"stop":1747645610900,"duration":2},"status":"passed","severity":"normal"},{"uid":"b5f13c6fefb27612","name":"should throw BadRequestException if email is the same as current email","time":{"start":1747645609651,"stop":1747645609655,"duration":4},"status":"passed","severity":"normal"},{"uid":"99cea1ee0b4ec2cb","name":"should throw BadRequestException when there are more than 2 contingency plans","time":{"start":1747645610999,"stop":1747645611002,"duration":3},"status":"passed","severity":"normal"},{"uid":"5ed686a94b5e8618","name":"should throw ForbiddenException if user is not the owner","time":{"start":1747645611079,"stop":1747645611081,"duration":2},"status":"passed","severity":"normal"},{"uid":"2962b5f1e49d0ddb","name":"should send an email successfully","time":{"start":1747645615102,"stop":1747645615105,"duration":3},"status":"passed","severity":"normal"},{"uid":"4c4803baac0318e8","name":"should handle various duration filters correctly","time":{"start":1747645612250,"stop":1747645612253,"duration":3},"status":"passed","severity":"normal"},{"uid":"511895bace808309","name":"should throw ForbiddenException when contingency plan belongs to different itinerary","time":{"start":1747645611055,"stop":1747645611057,"duration":2},"status":"passed","severity":"normal"},{"uid":"1f98ca65e8c0788e","name":"should return completed itineraries with locationCount","time":{"start":1747645610890,"stop":1747645610894,"duration":4},"status":"passed","severity":"normal"},{"uid":"759c521966bf1c58","name":"should throw UnauthorizedException if refresh token is blacklisted","time":{"start":1747645611194,"stop":1747645611198,"duration":4},"status":"passed","severity":"normal"},{"uid":"5a1270bba76fda5a","name":"should successfully update user photo profile","time":{"start":1747645609766,"stop":1747645609769,"duration":3},"status":"passed","severity":"normal"},{"uid":"a4a28ba268890a7b","name":"should delete the oldest ticket if there are too many","time":{"start":1747645611235,"stop":1747645611255,"duration":20},"status":"passed","severity":"normal"},{"uid":"a33b010d292a8053","name":"should call remove() in the service and delete an itinerary","time":{"start":1747645610915,"stop":1747645610917,"duration":2},"status":"passed","severity":"normal"},{"uid":"78a597178f56191e","name":"should throw a BadRequestException on jobs with date in past","time":{"start":1747645611973,"stop":1747645611976,"duration":3},"status":"passed","severity":"normal"},{"uid":"aff92f181a2cca15","name":"should handle missing fields gracefully","time":{"start":1747645611671,"stop":1747645611675,"duration":4},"status":"passed","severity":"normal"},{"uid":"f0ca8ee6ad1ac173","name":"should search itineraries with query and page parameters","time":{"start":1747645611028,"stop":1747645611030,"duration":2},"status":"passed","severity":"normal"},{"uid":"d9e6087e7c99c440","name":"should throw ForbiddenException if user is not authorized","time":{"start":1747645610842,"stop":1747645610845,"duration":3},"status":"passed","severity":"normal"},{"uid":"7b2f367bfcd9a5ee","name":"should throw BadRequestException on improper reminder option","time":{"start":1747645611979,"stop":1747645611982,"duration":3},"status":"passed","severity":"normal"},{"uid":"941b38d897026a99","name":"should throw ForbiddenException if user does not own the itinerary","time":{"start":1747645610787,"stop":1747645610790,"duration":3},"status":"passed","severity":"normal"},{"uid":"66376070beeebab6","name":"should call changePassword service with correct parameters","time":{"start":1747645612624,"stop":1747645612630,"duration":6},"status":"passed","severity":"normal"},{"uid":"ab2353eac15e5dc8","name":"should return success response when password change is successful","time":{"start":1747645612631,"stop":1747645612637,"duration":6},"status":"passed","severity":"normal"},{"uid":"63a19e2b5a9efd02","name":"should throw NotFoundException if associated itinerary's reminder does not exist","time":{"start":1747645611940,"stop":1747645611942,"duration":2},"status":"passed","severity":"normal"},{"uid":"948206a7f2912676","name":"should call authService.sendPasswordResetVerification with correct data","time":{"start":1747645613605,"stop":1747645613607,"duration":2},"status":"passed","severity":"normal"},{"uid":"c9693b6bba6dbc4e","name":"should update a payment","time":{"start":1747645614992,"stop":1747645614995,"duration":3},"status":"passed","severity":"normal"},{"uid":"edabe9d54e23f708","name":"should throw NotFoundException if user is not found","time":{"start":1747645611286,"stop":1747645611443,"duration":157},"status":"passed","severity":"normal"},{"uid":"191441b6a95df619","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747645610904,"stop":1747645610907,"duration":3},"status":"passed","severity":"normal"},{"uid":"5f22ea5124e1e277","name":"should return all contingency plans for the given itinerary","time":{"start":1747645610987,"stop":1747645610989,"duration":2},"status":"passed","severity":"normal"},{"uid":"56b0e6f72e1421ab","name":"should create routes across multiple sections","time":{"start":1747645610751,"stop":1747645610759,"duration":8},"status":"passed","severity":"normal"},{"uid":"96d16c9c53b6db4f","name":"should fetch analytics data and send to Discord","time":{"start":1747645613607,"stop":1747645613615,"duration":8},"status":"passed","severity":"normal"},{"uid":"8d569c60c880717e","name":"should invite a user to an itinerary and return a formatted response","time":{"start":1747645610927,"stop":1747645610930,"duration":3},"status":"passed","severity":"normal"},{"uid":"c7a9510f544a9503","name":"should validate login ticket and return access token","time":{"start":1747645613244,"stop":1747645613248,"duration":4},"status":"passed","severity":"normal"},{"uid":"f92f768fc6694d4","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747645610914,"stop":1747645610916,"duration":2},"status":"passed","severity":"normal"},{"uid":"a8c50b94e1b864ea","name":"should calculate scheduled date correctly","time":{"start":1747645611976,"stop":1747645611979,"duration":3},"status":"passed","severity":"normal"},{"uid":"34110719aaaeda5a","name":"should be defined","time":{"start":1747645613687,"stop":1747645613719,"duration":32},"status":"passed","severity":"normal"},{"uid":"d44b0882c1eb983","name":"should pass errors from service to the caller","time":{"start":1747645611128,"stop":1747645611134,"duration":6},"status":"passed","severity":"normal"},{"uid":"ba15362a95a0b6a0","name":"should throw NotFoundException if verification code is not found","time":{"start":1747645611263,"stop":1747645611270,"duration":7},"status":"passed","severity":"normal"},{"uid":"443df838c7ae0e0b","name":"should throw NotFound if user email is not found to accept the invitation","time":{"start":1747645610969,"stop":1747645610972,"duration":3},"status":"passed","severity":"normal"},{"uid":"b4babfac65a0c4a","name":"should throw NotFoundException if itinerary not found","time":{"start":1747645611076,"stop":1747645611078,"duration":2},"status":"passed","severity":"normal"},{"uid":"32e26f72c3883c21","name":"should return validation error if page is negative","time":{"start":1747645615133,"stop":1747645615136,"duration":3},"status":"passed","severity":"normal"},{"uid":"72255b301e2e251","name":"should search itineraries with default parameters","time":{"start":1747645611025,"stop":1747645611028,"duration":3},"status":"passed","severity":"normal"},{"uid":"f5af032c8b85a2df","name":"should return \"tidak diketahui\" for unknown option","time":{"start":1747645611997,"stop":1747645611999,"duration":2},"status":"passed","severity":"normal"},{"uid":"380ec19646dad92a","name":"should return itineraries shared with the user","time":{"start":1747645610876,"stop":1747645610879,"duration":3},"status":"passed","severity":"normal"},{"uid":"d680627adfa706b6","name":"should throw UnauthorizedException when provided with invalid API key","time":{"start":1747645614077,"stop":1747645614081,"duration":4},"status":"passed","severity":"normal"},{"uid":"eb6315c848bd6594","name":"should call service and return response","time":{"start":1747645611093,"stop":1747645611095,"duration":2},"status":"passed","severity":"normal"},{"uid":"cfad02a430083ab9","name":"should throw other errors","time":{"start":1747645611817,"stop":1747645611823,"duration":6},"status":"passed","severity":"normal"},{"uid":"ae8aba9b29cdc53","name":"should throw ConflictException if user already exists and is confirmed","time":{"start":1747645611206,"stop":1747645611213,"duration":7},"status":"passed","severity":"normal"},{"uid":"31b806c0134263d2","name":"should return an itinerary reminder with associated itinerary id","time":{"start":1747645611937,"stop":1747645611940,"duration":3},"status":"passed","severity":"normal"},{"uid":"830f1086ecb58d97","name":"should throw ConflictException if user already exists during Google registration","time":{"start":1747645613630,"stop":1747645613635,"duration":5},"status":"passed","severity":"normal"},{"uid":"b7f94b0f70f3cafc","name":"should return \"1 hari\" for ONE_DAY_BEFORE option","time":{"start":1747645611988,"stop":1747645611989,"duration":1},"status":"passed","severity":"normal"},{"uid":"1821d73bc8803439","name":"should throw NotFoundException if itinerary not found","time":{"start":1747645610994,"stop":1747645610997,"duration":3},"status":"passed","severity":"normal"},{"uid":"d3fd081a87a55045","name":"should throw BadRequestException if user does not exist","time":{"start":1747645611462,"stop":1747645611470,"duration":8},"status":"passed","severity":"normal"},{"uid":"7c86ec5e11d8c3ac","name":"should filter itineraries with shared=true and finished=true","time":{"start":1747645610824,"stop":1747645610827,"duration":3},"status":"passed","severity":"normal"},{"uid":"ba05b76e9bae101c","name":"should create a new ticket for the user","time":{"start":1747645613273,"stop":1747645613280,"duration":7},"status":"passed","severity":"normal"},{"uid":"26046bec30154f6b","name":"should be defined","time":{"start":1747645614632,"stop":1747645614661,"duration":29},"status":"passed","severity":"normal"},{"uid":"f7c0edd0f0701bb5","name":"should unsave the itinerary for the user","time":{"start":1747645611126,"stop":1747645611128,"duration":2},"status":"passed","severity":"normal"},{"uid":"33225cd5e11351ff","name":"should duplicate an itinerary succesfully","time":{"start":1747645611126,"stop":1747645611130,"duration":4},"status":"passed","severity":"normal"},{"uid":"36b60a5af5814133","name":"should return an array of itinerary reminders","time":{"start":1747645611932,"stop":1747645611934,"duration":2},"status":"passed","severity":"normal"},{"uid":"a92ea7e25a471143","name":"should remove an itinerary successfully","time":{"start":1747645610911,"stop":1747645610913,"duration":2},"status":"passed","severity":"normal"},{"uid":"c9be83c9be99d7c2","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747645610784,"stop":1747645610786,"duration":2},"status":"passed","severity":"normal"},{"uid":"6fbf8f8da827e83c","name":"should return paginated itineraries for both owned and shared when sharedBool is false","time":{"start":1747645610858,"stop":1747645610862,"duration":4},"status":"passed","severity":"normal"},{"uid":"c2246af6c37d8506","name":"should return a string indicating all payments were returned","time":{"start":1747645615037,"stop":1747645615047,"duration":10},"status":"passed","severity":"normal"},{"uid":"e2f983fe868730fa","name":"should add isPublished filter when no other filters","time":{"start":1747645611770,"stop":1747645611774,"duration":4},"status":"passed","severity":"normal"},{"uid":"7a953773d3a63279","name":"should throw NotFoundException if itinerary not found","time":{"start":1747645610978,"stop":1747645610981,"duration":3},"status":"passed","severity":"normal"},{"uid":"c04343d33e116925","name":"should check saved status of public itinerary ids for the user","time":{"start":1747645611222,"stop":1747645611225,"duration":3},"status":"passed","severity":"normal"},{"uid":"6a054ebf48c48376","name":"should create a contingency plan and return a formatted response","time":{"start":1747645610991,"stop":1747645610994,"duration":3},"status":"passed","severity":"normal"},{"uid":"3d625d7ff4ebc62b","name":"should return the itinerary if user is the owner","time":{"start":1747645610817,"stop":1747645610820,"duration":3},"status":"passed","severity":"normal"},{"uid":"6ddd87297cec6dbd","name":"should return parsed feedback array from AI response","time":{"start":1747645613721,"stop":1747645613745,"duration":24},"status":"passed","severity":"normal"},{"uid":"fd27f64de781e0a4","name":"should throw an error if placeId is not provided","time":{"start":1747645614878,"stop":1747645614881,"duration":3},"status":"passed","severity":"normal"},{"uid":"94eae96803acb35d","name":"should delete expired refresh tokens","time":{"start":1747645611203,"stop":1747645611206,"duration":3},"status":"passed","severity":"normal"},{"uid":"6a964ffae060f5a8","name":"should call setupIndexes on module init","time":{"start":1747645611627,"stop":1747645611630,"duration":3},"status":"passed","severity":"normal"},{"uid":"60523edcbdf66720","name":"should parse JSON even if AI returns extra text","time":{"start":1747645613745,"stop":1747645613750,"duration":5},"status":"passed","severity":"normal"},{"uid":"c584ef225e215e5","name":"should handle null or undefined itinerary and return null","time":{"start":1747645611678,"stop":1747645611685,"duration":7},"status":"passed","severity":"normal"},{"uid":"c9b5ca5ee715bdb0","name":"should throw ForbiddenException when contingency plan belongs to different itinerary","time":{"start":1747645611021,"stop":1747645611024,"duration":3},"status":"passed","severity":"normal"},{"uid":"a2b94cc702f30b8e","name":"should return 0 when there are no contingency plans","time":{"start":1747645610990,"stop":1747645610992,"duration":2},"status":"passed","severity":"normal"},{"uid":"2efee54e1dfe4742","name":"should fetch an itinerary reminder and return OK when found","time":{"start":1747645613124,"stop":1747645613128,"duration":4},"status":"passed","severity":"normal"},{"uid":"37ff7957b1fb4cf1","name":"should handle service errors properly","time":{"start":1747645614106,"stop":1747645614110,"duration":4},"status":"passed","severity":"normal"},{"uid":"e33bc693c1fc9f2b","name":"should delete oldest ticket when there are 5 or more existing tickets","time":{"start":1747645609665,"stop":1747645609668,"duration":3},"status":"passed","severity":"normal"},{"uid":"7ac897c8b03c5e49","name":"should throw NotFoundException if tour doesnt exist","time":{"start":1747645611119,"stop":1747645611122,"duration":3},"status":"passed","severity":"normal"},{"uid":"d7aae1226638159c","name":"should return 1 for missing dates","time":{"start":1747645611758,"stop":1747645611763,"duration":5},"status":"passed","severity":"normal"},{"uid":"d19bd64151c5f8cb","name":"should successfully verify a valid ticket","time":{"start":1747645609669,"stop":1747645609672,"duration":3},"status":"passed","severity":"normal"},{"uid":"380cd7cbba67f459","name":"should handle errors if fetch fails","time":{"start":1747645613320,"stop":1747645613324,"duration":4},"status":"passed","severity":"normal"},{"uid":"5c7839db8003cbc5","name":"should mark itinerary as complete","time":{"start":1747645610894,"stop":1747645610896,"duration":2},"status":"passed","severity":"normal"},{"uid":"140a7bca89919cf8","name":"should handle missing fields gracefully","time":{"start":1747645611708,"stop":1747645611711,"duration":3},"status":"passed","severity":"normal"},{"uid":"5db4346ad1f2703c","name":"should call authService.createUser and authService.sendVerification with correct data","time":{"start":1747645613583,"stop":1747645613586,"duration":3},"status":"passed","severity":"normal"},{"uid":"9822230b79d9e40b","name":"should return tour with null itinerary if itinerary not found","time":{"start":1747645612280,"stop":1747645612283,"duration":3},"status":"passed","severity":"normal"},{"uid":"2335a662a41611a5","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747645611161,"stop":1747645611167,"duration":6},"status":"passed","severity":"normal"},{"uid":"fc33b4df82d9e37b","name":"should throw NotFoundException if itinerary doesnt exist","time":{"start":1747645611955,"stop":1747645611958,"duration":3},"status":"passed","severity":"normal"},{"uid":"9437477190369b89","name":"should be defined","time":{"start":1747645614969,"stop":1747645614984,"duration":15},"status":"passed","severity":"normal"},{"uid":"7bf7f156fd39b41","name":"should throw BadRequestException if passwords do not match","time":{"start":1747645611282,"stop":1747645611286,"duration":4},"status":"passed","severity":"normal"},{"uid":"3c0ef58329ab5193","name":"should add a tour to the index","time":{"start":1747645611791,"stop":1747645611794,"duration":3},"status":"passed","severity":"normal"},{"uid":"57292c56d55c1f02","name":"should throw NotFoundException if the pending invitation does not exist","time":{"start":1747645610963,"stop":1747645610966,"duration":3},"status":"passed","severity":"normal"},{"uid":"9e9ff76ac764a3ad","name":"should be defined","time":{"start":1747645613086,"stop":1747645613112,"duration":26},"status":"passed","severity":"normal"},{"uid":"89ca2237fce47918","name":"should throw NotFoundException if itinerary does not exist","time":{"start":1747645611208,"stop":1747645611215,"duration":7},"status":"passed","severity":"normal"},{"uid":"8f01ed8d11e0e74e","name":"should throw NotFoundException if user is not found","time":{"start":1747645611530,"stop":1747645611537,"duration":7},"status":"passed","severity":"normal"},{"uid":"bd3a157cd7b88485","name":"should return a profile when findOne is called with a valid ID","time":{"start":1747645612534,"stop":1747645612539,"duration":5},"status":"passed","severity":"normal"},{"uid":"8b746d54d28d6eea","name":"should throw NotFoundException when itinerary does not exist","time":{"start":1747645610810,"stop":1747645610814,"duration":4},"status":"passed","severity":"normal"},{"uid":"5e8c0e8ee41f4acc","name":"should update an itinerary with defaults for deleted/missing fields","time":{"start":1747645610776,"stop":1747645610779,"duration":3},"status":"passed","severity":"normal"},{"uid":"fed6e8096a46b76c","name":"should handle null result from itineraryTag.findMany","time":{"start":1747645611253,"stop":1747645611259,"duration":6},"status":"passed","severity":"normal"},{"uid":"318b0ecff0d8bcee","name":"should handle non-consecutive block positions when creating routes","time":{"start":1747645610759,"stop":1747645610763,"duration":4},"status":"passed","severity":"normal"},{"uid":"9504622fd71f2f68","name":"should fetch published itineraries and index them","time":{"start":1747645611719,"stop":1747645611728,"duration":9},"status":"passed","severity":"normal"},{"uid":"cfd192e6e306dd07","name":"should be defined","time":{"start":1747645614638,"stop":1747645614648,"duration":10},"status":"passed","severity":"normal"},{"uid":"13205b7ad57aea2e","name":"should be defined","time":{"start":1747645614422,"stop":1747645614434,"duration":12},"status":"passed","severity":"normal"},{"uid":"620e66176770c023","name":"should be defined","time":{"start":1747645614854,"stop":1747645614870,"duration":16},"status":"passed","severity":"normal"},{"uid":"3566ed8950b60adb","name":"should throw ConflictException if user already exists","time":{"start":1747645611557,"stop":1747645611561,"duration":4},"status":"passed","severity":"normal"},{"uid":"64333f320130c904","name":"should handle when section is not found in the created itinerary","time":{"start":1747645610767,"stop":1747645610770,"duration":3},"status":"passed","severity":"normal"},{"uid":"8cff994302086742","name":"should throw BadRequestException if user owns the itinerary its trying to unsave","time":{"start":1747645611215,"stop":1747645611218,"duration":3},"status":"passed","severity":"normal"},{"uid":"1e1187b16511d528","name":"should throw NotFoundException when tags do not exist","time":{"start":1747645610807,"stop":1747645610810,"duration":3},"status":"passed","severity":"normal"}]